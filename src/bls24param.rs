//! NB: This file was, and future versions should always be, created automatically by the `bls24paramgen` tool.

#![allow(unused)]

use crypto_bigint::{Uint,Word};
use std::ops::Shl;

pub trait BLS24Param {
    const UD: Word;                           // BLS24 curve parameter descriptor (u is also the optimal pairing order)
    const LIMBS: usize;                       // number of limbs required to represent a base field element
    const MODULUS: &'static [Word];           // base finite field modulus p
    const NEG_INV_MOD: &'static [Word];       // -1/p mod 2^(64*LIMBS)
    const MONTY_P: &'static [Word];           // (2^(64*LIMBS))^2 mod p
    const CURVE_B: Word;                      // curve equation coefficient
    const ORDER: &'static [Word];             // cryptographic group order r
    const NEG_INV_ORD: &'static [Word];       // -1/r mod 2^(64*LIMBS)
    const MONTY_R: &'static [Word];           // (2^(64*LIMBS))^2 mod r
    const NEG_SQRT_NEG_2: &'static [Word];    // -sqrt(-2) mod p
    const QNR_SCALE: &'static [Word];         // 1/ξ^((p^2 + 7)/16)
    const SQRT_NEG_3: &'static [Word];        // sqrt(-3) mod p
    const SVDW: &'static [Word];              // (-1 + sqrt(-3))/2 mod p, the Shallue & van de Woestijne constant
    const ZETA: &'static [Word];              // primitive cube root of unity mod p: ζ = u^9 - 3*u^8 + 4*u^7 - 4*u^6 + 3*u^5 - 2*u^3 + 2*u^2 - u + 1
    const THETA1: &'static [Word];            // coefficient of the Frobenius endomorphism on the twist
    const THETA2: &'static [Word];            // coefficient of the Frobenius endomorphism on the twist
    const THETA3: &'static [Word];            // coefficient of the Frobenius endomorphism on the twist
    const TRIPLES: Word;                      // number of precomputed optimal pairing triples
}

pub(crate) fn get_u<PAR: BLS24Param, const LIMBS: usize>() -> Uint<LIMBS> {
    let seq = PAR::UD;
    assert!(seq & 0xFF > 0);
    let mut u: Uint<LIMBS> = Uint::from_word(0);
    let o: Uint<LIMBS> = Uint::from_word(1);
    for b in (0..8).rev() {
        let deg = ((seq >> 8*b) & 0xFF) as usize;  // extract term degree
        if deg >= 0x80 {
            u = u.wrapping_sub(&o.shl(0x100 - deg));
        } else if deg > 0 {
            u = u.wrapping_add(&o.shl(deg));
        }
    }
    u
}


pub struct BLS24317Param;

impl BLS24Param for BLS24317Param {
    const UD: Word = 0x20E3E8EA10;  // u = 2^32 - 2^29 - 2^24 - 2^22 + 2^16
    const LIMBS: usize = 5;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x409BC4809F95AAAB, 0xF2C8A9DB32770C55, 0x9E689739E8A2AC7C, 0xB4E60DC2047B42B4, 0x153B28E1B8F0798B,
        // p = 177145853348991869687789364809186067800541535809186828424246339345319084813724821393301329783467: 317 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x1B3D00029C42FFFD, 0x4B58C978BB15E776, 0xFAC048F047B56154, 0xED6E39B0DF34F0CE, 0xD171FEA8A3B68623,
        // -1/p mod 2^320 = 1747548548904486396500365217768073551454499147029500900343139724580491513354279473765712293724157: 320 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x1023A23C6AAD9862, 0x8A80C9E4DC3EC90B, 0xE9E42D7FA3178ABB, 0xADA22EBE183AEA16, 0x0B03E966E4EC9967,
        // (2^320)^2 mod p = 91908186184690097849080693855217771436522431177241589766834827843136827772257311670164091934818: 316 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x6D3FB6BAA3E324FF, 0xE31961335B92B600, 0x541FE4011A13B668, 0x0000000000000000,
        // r = 38050625167875750304411339492568960299864366108686818384775326623334400000001: 255 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x6D3FB6BAA3E324FE, 0xFFFFFFFFFFFFFFFF, 0x46F8654321619100, 0x55828C64100C042F,
        // -1/r mod 2^320 = 713469354179680863511942578056161623967018791694453483867156952886032734292497055269614755250175: 319 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x3F4513F7A85E8A1A, 0x70029CDB981C95D5, 0xE4DE971E27E80FEA, 0x17D62457F04C20C5, 0x0000000000000000,
        // (2^320)^2 mod r = 10781551622967812932780440666529286550109132721622924975879850833012624099866: 253 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x3D040F124CF929C7, 0x7ED0AC8522032971, 0x0C53059959ED1A4F, 0xDE90DA4A3470555C, 0x044DB21F844DAB53,
        // -sqrt(-2) mod p = 35907103458387047534247834350724730807058405379721589611720406528257781387755232077780453239239: 315 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xD6F0F429DB81EF9B, 0x74CD66038FE26C56, 0x1D33674B1E0028AC, 0xF071BEA5F3E0F4C4, 0x107BD1F1F8E83F86,
        // 1/ξ^((p^2 + 7)/16) = 137534805667368304825819405748015017006715250030498009283432758843237447085071893042962897170331: 317 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x6A528E7E5D17AAA8, 0x3FA11FDDFA8E825F, 0x4C3E982BF3493706, 0xFAC1E3AEA77A0F50, 0x153B28E1268A5205,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x5577297F7E56AAA9, 0x9934E4DC9682C75A, 0x755397B2EDF5F1C1, 0xD7D3F8B855FAA902, 0x153B28E16FBD65C8,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xEB249B01213F0001, 0x5993C4FE9BF444FA, 0x2914FF86FAACBABB, 0xDD121509AE8099B2, 0x00000000493313C2,
        // ζ = 142202430977231766967542335402556922975898601380435656029977849071924563654545439129601
    ];
    const THETA1: &'static [Word] = &[
        0xFC19BDEBE7EC8561, 0x4618F151389E66D9, 0xEC97AEBCE6206042, 0xD13E7E375ECB7059, 0x094C9F99CD42229F,
        // θ_1 = 77590649513036218407923070899906551430652336187961737717870931426416042191940860578535157040481
    ];
    const THETA2: &'static [Word] = &[
        0x42B62BDD8E5AE4D8, 0xF2B3B9DEF19EB409, 0x68C61FACBB278323, 0xF87CF5CEBDAA5BAE, 0x0377CDE6D15CEFCF,
        // θ_2 = 28935828890653240203095528680048847873147634406492471300112441510372390908799166157005734470872
    ];
    const THETA3: &'static [Word] = &[
        0x7ABB51BF2FE03465, 0xA19BBD0B5B0D2761, 0xFF7388925BE2CC35, 0xB87A9C2F777F1F9B, 0x02E005784B8070A4,
        // θ_3 = 23988832056520722280366223499442880137296380598285395110662417810790273252700851441485930837093
    ];
    const TRIPLES: Word = 36;  // number of precomputed optimal pairing triples
}

pub struct BLS24324Param;

impl BLS24Param for BLS24324Param {
    const UD: Word = 0x21E1E4EE;  // u = 2^33 - 2^31 - 2^28 - 2^18
    const LIMBS: usize = 6;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0xB0518005CFFEAAAB, 0x75132C3333255500, 0x19709DEBB7550D2E, 0xEB0BF3F93DBD2505, 0x8DC16CDF006E7F33, 0x000000000000000C,
        // p = 26814610268670916126441038712346373557782208157220551629070976069007394033533659363356830982908587: 324 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x00C000044FF3FFFD, 0x9E810636E6FA6331, 0x5F6CDD05B892956C, 0x55E1B68963EEC05E, 0xB10EF73B374A220E, 0x57C5F5A65F8808B6,
        // -1/p mod 2^384 = 13509544162079701461842380350094038858598364860194684621137748986849468468285709909410732910437501761457236615626749: 383 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0xC3C5856EF8AD036D, 0xE52DA1FAE4FECBC5, 0xEDA2FAAD18DDC2E8, 0x62080C7CBA64EADE, 0x4290DA0403A410E8, 0x0000000000000005,
        // (2^384)^2 mod p = 11235340424803928231675671933654334447062872792380053198321557607042719472591662001401234031706989: 323 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xBB0E8639A16FFF00, 0x6CA19DBD2000FFFB, 0x3A1CFAAAD827B2C4, 0x0000000000000012, 0x0000000000000000,
        // r = 2110542953249876179905504171929588458377309598074404470933369013089278539857921: 261 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xBB0E8639A16FFEFF, 0xFFFFFFFFFFFFFFFB, 0x07861BB000FFFFFF, 0x746BD9167A310099, 0xC0F7BBA7DEF77908,
        // -1/r mod 2^384 = 29700448409400084186123208352704424523967523960653218118722404292917659666784780750371544665137293755751801150242815: 384 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xEC6DE4389E1E8EA2, 0xC560A13CD0D87322, 0x9E58E57BF38ED811, 0xC0FA9AB2DC398385, 0x000000000000000E, 0x0000000000000000,
        // (2^384)^2 mod r = 1708376095707608755034350401963272046591190022906240610244734057803460248506018: 260 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xBBC95229FE43213A, 0x60DC27E1EE469023, 0xA9006DB9AEA7A338, 0xC401EB4CD7E34F5A, 0x755FCFCA1029D64F, 0x0000000000000004,
        // -sqrt(-2) mod p = 9523283718022034952346888167761825194636539590114335658009059883469302764946842389957438244856122: 323 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x7F89DFDBB8B8CDF2, 0xFF35B1F54A4339E1, 0x548F514E74E3101E, 0x43F7588C36A0109A, 0x82858EEB80118E27, 0x0000000000000000,
        // 1/ξ^((p^2 + 7)/16) = 1089033925050272299853356855845851186953129412454698735614699893431257913722538711699223175810546: 320 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x6B7F7FC8AFF6AAA8, 0xDC12811F2C82260C, 0x0A1B56FA9269397B, 0xEF9E72DDBB749F8C, 0x8DC16CAA99ECFFDD, 0x000000000000000C,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x8DE87FE73FFAAAA9, 0x2892D6A92FD3BD86, 0x91C5FA7324DF2355, 0xED55336B7C98E248, 0x8DC16CC4CD2DBF88, 0x000000000000000C,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x2269001E90040001, 0x4C80558A0351977A, 0x87AAA3789275E9D9, 0xFDB6C08DC12442BC, 0x0000001A3340BFAA, 0x0000000000000000,
        // ζ = 13029971608950429874895352842613300203580877666513031698661484676795067717913405896785921
    ];
    const THETA1: &'static [Word] = &[
        0xFF7FFA8E489EFDC7, 0xA6410486EC205703, 0x173198D276D17DD2, 0x9FFBB627CA2DFFEF, 0xAEC05FA0985B2BA2, 0x0000000000000000,
        // θ_1 = 1458073637765597947632976387785248962611594032846698147077293502560232462331817332695156465270215
    ];
    const THETA2: &'static [Word] = &[
        0xDE64AE86B68292D6, 0x8A2D0F6A0B02F10D, 0x3D4E9E0A608253C9, 0x42053F7EA1C3A7BE, 0x8BEF88446FB9BF85, 0x0000000000000001,
        // θ_2 = 3303568221245419528540467696095663634706675762210469681927236439174418920141603862283562657157846
    ];
    const THETA3: &'static [Word] = &[
        0x35F964BBE6323705, 0x118F5EBE4581CA90, 0xDA3D1F84E1ECD03D, 0xD37C49CDF68CD623, 0x3A9418BFDC256E30, 0x0000000000000008,
        // θ_3 = 17576657702355445767765358199586793812052383115506605915520295266320951183072676747362153905927941
    ];
    const TRIPLES: Word = 36;  // number of precomputed optimal pairing triples
}

pub struct BLS24329Param;

impl BLS24Param for BLS24329Param {
    const UD: Word = 0x211917EB;  // u = 2^33 + 2^25 + 2^23 - 2^21
    const LIMBS: usize = 6;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x5881E15600CAAAAB, 0x75486AE6BA500001, 0xFEEDA8C8517050F7, 0x2F0B3D089CD04496, 0x8054C72DE9A6E0E6, 0x0000000000000165,
        // p = 763618128476545957522014723411806695416508758991724043290208517682981686536922309929118657808083627: 329 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x80000006071FFFFD, 0x4A4647E7AA1A4FCF, 0xB12BEA2DE41B7D22, 0x2A3E49DAA63776AE, 0xDCF2E7FCDC8D3063, 0x6E05DF8E1B525070,
        // -1/p mod 2^384 = 16934080700701468146741333673989762310007713838333652243739282238127205834171320785762880573601367259455358192582653: 383 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x015C04B90FFE2C56, 0x4983F6E388A36A57, 0x29941BD9ED8B682B, 0x4EC144CA39FD5953, 0xBF752312A2E5B82A, 0x000000000000013C,
        // (2^384)^2 mod p = 676569367725221372786374265644166471736345247778119457384188473200355099353194940835197468823923798: 329 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xB37834B42EF00000, 0x8A1B20FFFFFFFFEF, 0xA7DA5237318952E3, 0x0000000000000109, 0x0000000000000000,
        // r = 30760825633693533259428076704478229171079063237615827810900206474648973475840001: 265 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xB37834B42EEFFFFF, 0xFFFFFFFFFFFFFFEF, 0x0FFFFFFFFFFFFFFF, 0x7F89DE88521672A3, 0xD22637380F71A776,
        // -1/r mod 2^384 = 32344934514364261127259788486968524357152050740085900850135990149555771223621926542775400224008502509173645766557695: 384 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x0EBD526C9019A25B, 0xAE5522518724B2A1, 0xBAB027C4F07AC179, 0x96DC3C5A6F569FE3, 0x00000000000000B1, 0x0000000000000000,
        // (2^384)^2 mod r = 20563435845189609099913777087447465848414845014991016861994841931226710997049947: 264 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x2968EA232642FC12, 0x247091E6830244CB, 0xB80BB58BFE9E98D5, 0x2FE6A81F46858FF0, 0xFFB9E53882DE988E, 0x0000000000000089,
        // -sqrt(-2) mod p = 294763926067398224056934397266766278068822020203066403125440322110099083980876382324124531441204242: 328 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xA2E62C9AA63DB99C, 0xC6A12378D45C04AD, 0x5DB7CB82D9395F33, 0x944484795ACD0396, 0x59D9C086BFE51B93, 0x0000000000000068,
        // 1/ξ^((p^2 + 7)/16) = 222892338079087178847241905357230141563127147427533934571240904821818965759091884938233841100634524: 327 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x326B515A058AAAA8, 0xB02547072CD79587, 0xF03068328DDE344A, 0xD1D88E5A2D6C2BB1, 0x8054C3025C60513C, 0x0000000000000165,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x45769958032AAAA9, 0x12B6D8F6F393CAC4, 0x778F087D6FA742A1, 0x8071E5B1651E3824, 0x8054C51823039911, 0x0000000000000165,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x130B47FDFDA00001, 0x629191EFC6BC353D, 0x875EA04AE1C90E56, 0xAE99575737B20C72, 0x00000215C6A347D4, 0x0000000000000000,
        // ζ = 265459172510049606737620580065763098783222256215722156645812903505794962697151534669496321
    ];
    const THETA1: &'static [Word] = &[
        0x20F047CB33A82C55, 0x4264CA46FC3F6ECD, 0x50D337A79202B55F, 0x950A7BD3B00A3514, 0x4F13BF7CBEB8D83A, 0x0000000000000091,
        // θ_1 = 310377916095990544576940556734726943090376029185750808970433692025110445308378785985638050510154837
    ];
    const THETA2: &'static [Word] = &[
        0xCC460E9C6043FC5F, 0xC51BE992FF91B399, 0x0A204BE6BEBCE802, 0xB1F415449008D77B, 0x311DFA4D6C5D54F2, 0x0000000000000119,
        // θ_2 = 600622175414254524973541365310462891360543739907506435882494986712920783218981715105542873018530911
    ];
    const THETA3: &'static [Word] = &[
        0x17BDE755E4CD3B92, 0xD6C8E84C7B4E21EE, 0x2B6FA878BE7EA5B2, 0xF606BD607E421FB8, 0x4B675DEC9FF5967F, 0x00000000000000A0,
        // θ_3 = 342387072192515210788820590627110514499115118131647684787876049488869247394401675236110127365700498
    ];
    const TRIPLES: Word = 37;  // number of precomputed optimal pairing triples
}

pub struct BLS24339Param;

impl BLS24Param for BLS24339Param {
    const UD: Word = 0x22E418EB11;  // u = 2^34 - 2^28 + 2^24 - 2^21 + 2^17
    const LIMBS: usize = 6;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x2D518282A5A0AAAB, 0x10F0775B12F68155, 0x8160F2E2221A2B91, 0x603EF81D7ACF4F9B, 0xBFC1C48D7A1FEA94, 0x00000000000498A5,
        // p = 643405750909101183000745391918193153239433004464191378179468630990067714150357785681820682027706395307: 339 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0xD868000BD2A5FFFD, 0x312473BEAA656D99, 0x054E8C6C5AA1D815, 0xD1EB316B57F5A20D, 0x91841673C94D5F0A, 0xC357AACB607BF0F3,
        // -1/p mod 2^384 = 30065954765830941478709615560156785308606123705323648020987058266284042376760938274978880207857825661149466878935037: 384 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0xB12E521E5BAA8505, 0x189BDDD39A0E4575, 0xA5656C9D1D136A05, 0xE6C51B3AE716F38A, 0xB4E3E7E81538113B, 0x000000000002AC15,
        // (2^384)^2 mod p = 374066238959573803236875959191581944534778942598867509734837517537444616295891634653170004848657728773: 338 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xC9244E082CA383F0, 0x71E71CCBC79F800E, 0x5566803A7B08DCE2, 0x000000000000E348, 0x0000000000000000,
        // r = 6737285547879535865916986578488865213158191884310282689912268512014500546991882241: 272 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xC9244E082CA383EF, 0xFFFFFFFFFFFFFF0E, 0x9D3F2D1318740FFF, 0xF45ECC49BC4C7269, 0x9C75912C66FAADDE,
        // -1/r mod 2^384 = 24081282019387740748547541658778155037128388822439153395569889165082263979332049973382488417206432178635254913826815: 384 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xC50F0BA43EEBC2DC, 0x207BA52E11520902, 0x101D1A53966ADB41, 0xCA7A1B84F2A93EA7, 0x0000000000007CC1, 0x0000000000000000,
        // (2^384)^2 mod r = 3698143536912854475537165443079113373555047435430977398079605405718110069439840988: 271 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x9A1980D673710296, 0x64DB963698879CBD, 0x0533FB80F3B2208B, 0x7010132A08867F11, 0xDC178CC235CDD084, 0x000000000000B283,
        // -sqrt(-2) mod p = 97614307935958553702638431009440324382333434098400791559112039774955298767444182595418525945591562902: 336 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x00D95C741C53F6EC, 0x48E0920570EF4992, 0x8593490A2BC474A5, 0xD90835DB742E7F22, 0x7EFEEB8427DEF968, 0x0000000000046C1B,
        // 1/ξ^((p^2 + 7)/16) = 619050686378180379341682453744347000928929786588634745019769960666375559108471435388648580212256405228: 339 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x979F647A8764AAA8, 0xC1B73974C259EEF4, 0xFA2EB2884E5986EA, 0x707D24FEC3CCA9B4, 0xBFBAC5228DE7437F, 0x00000000000498A5,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xE278737E9682AAA9, 0xE953D867EAA83824, 0x3DC7D2B53839D93D, 0xE85E0E8E1F4DFCA8, 0xBFBE44D804039709, 0x00000000000498A5,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x4AD90F040F1E0001, 0x279C9EF3284E4930, 0x4399202CE9E05253, 0x77E0E98F5B8152F3, 0x00037FB5761C538A, 0x0000000000000000,
        // ζ = 114036944881885563399134730392817075656686065163608013528580936381423699129827557638062080001
    ];
    const THETA1: &'static [Word] = &[
        0xE2345E56E8F36EC0, 0xEC1050E64A6AE788, 0xF110307D5C06681B, 0x9258A120EF737C22, 0x84336C0E89172C41, 0x00000000000413B6,
        // θ_1 = 570715479172001940010382017078891859980613524604140431704068506012885399116134547143799418391197085376
    ];
    const THETA2: &'static [Word] = &[
        0x1829E496F665BD36, 0xD74DF19014CF682B, 0x12EAC0253FECD3BA, 0x05EE60918F9F1301, 0x299A1EE00BEFA695, 0x000000000000DE31,
        // θ_2 = 121497425705078519841682590344021455449986196909251342254956144864659964417945329835730526609305091382
    ];
    const THETA3: &'static [Word] = &[
        0x90794609D8C32E49, 0x9951117064448757, 0x85E07D27A0C28D78, 0x6D417BA146A8E248, 0xCA5F8E366782B3F2, 0x0000000000043662,
        // θ_3 = 589675085600212929009471069663642264959696689197636528153802745027413042919201329584490213892526648905
    ];
    const TRIPLES: Word = 38;  // number of precomputed optimal pairing triples
}

pub struct BLS24341Param;

impl BLS24Param for BLS24341Param {
    const UD: Word = 0x221FE5E913;  // u = 2^34 + 2^31 - 2^27 - 2^23 + 2^19
    const LIMBS: usize = 6;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0xA6AFE816D282AAAB, 0x053860FFF6A15006, 0x50C42585DBA02D5C, 0x46AAD156F35918B7, 0x7DA790510E6E5E25, 0x0000000000101650,
        // p = 2251946548550738095974760971896861423658998008023695442306796600492337039146568030739627859309876128427: 341 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x1A00000D6697FFFD, 0x2A4EBB1A9C1C7801, 0x183A7D93B3E5F44B, 0x41B5B48242B84497, 0x52CEEBAFD536413C, 0xABA37A2C5B44B7AE,
        // -1/p mod 2^384 = 26417595740513403820005244969306399281441265680042012345763303964938227359155736783004912441322085856933459541884925: 384 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x76CF7F90216E2B24, 0x56D2F7B5629359FD, 0x84DF535D4FCBC197, 0x4EB1B2494E8E31AD, 0x4A1DFCE8AB1E1B3D, 0x000000000008C38C,
        // (2^384)^2 mod p = 1226800500518239155953647924834288890966252301955749573353523537374085057091178247986621390615437257508: 340 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xDCFCAE4EE3E3F000, 0x0404469380FFFE71, 0xE31BEB14D929A35A, 0x0000000000026B30, 0x0000000000000000,
        // r = 18354538373529436379792956850185114093771181927042167871016236627360326026327490561: 274 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xDCFCAE4EE3E3EFFF, 0xFFFFFFFFFFFFFE71, 0x4FA7540FFFFFFFFF, 0xED746385FE25833D, 0xE480B7CAE6564F63,
        // -1/r mod 2^384 = 35169800456710038037955294116685781673219689647834557201298496059078970420315067705224132440498950331395413395898367: 384 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x571CFF812BF56649, 0xFFD0C1DC8A340451, 0x5F5554DC53CB8D12, 0xD02E306F4AA46985, 0x0000000000011E4E, 0x0000000000000000,
        // (2^384)^2 mod r = 8486959551241607766060509380443471030078240773712862669081221596158401351196698185: 273 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xCA019A79B54C0704, 0x31035A398140CBA0, 0x152CF33D6E9FF5D2, 0xC2C2948DC994C992, 0x2FA0AB8530B1DE4F, 0x00000000000B203E,
        // -sqrt(-2) mod p = 1557455344632250622684587391565678966224458157816452989583394275839418628296894167981279339482643695364: 340 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x5A5B05550C7DA34F, 0xF7E1531CFFF7F292, 0xC70ADC5D5A6D4254, 0x54557FEE06EE82FA, 0xE8A591F43265AE4A, 0x000000000003041A,
        // 1/ξ^((p^2 + 7)/16) = 422196866680663609224110553987993380720839797138597618067281902710111785625532256550666164355030950735: 338 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x5E71071FC192AAA8, 0x19C704517BD0AFB5, 0x700822781B8E8256, 0xA7F571F905D959EF, 0x7D91F4909E88466C, 0x0000000000101650,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x0290779B4A0AAAA9, 0x0F7FB2A8B938FFDE, 0x606623FEFB9757D9, 0xF75021A7FC993953, 0x7D9CC270D67B5248, 0x0000000000101650,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xA41F707B88780001, 0xF5B8AE573D685028, 0xF05E0186E008D582, 0x4F5AAFAEF6BFDF63, 0x000ACDE037F30BDC, 0x0000000000000000,
        // ζ = 352136788756417559624467031763637641613667431177260234126020365257341082375685551677838458881
    ];
    const THETA1: &'static [Word] = &[
        0xB2F8611603C35912, 0x3BF8658728558598, 0x2D27F25B9524BF3F, 0xD14B2D10A4804D97, 0x1F9E8B524A107625, 0x00000000000673CF,
        // θ_1 = 903230149792668553825300687097131465200793609068961964162388186660125228016214592881820602954366015762
    ];
    const THETA2: &'static [Word] = &[
        0x58B8543DA965551B, 0xE1C1A8958EEC303E, 0x2E32ACC8FDCB6905, 0x56C0EE8D33A32FE9, 0x75D95AC15CB6D727, 0x00000000000F32A0,
        // θ_2 = 2127444071074194853491753980582569441570433477862959972936105551751921125278800521848446926096831960347
    ];
    const THETA3: &'static [Word] = &[
        0x34FAF05F56E98017, 0x2513D703AFFB7A20, 0x54752DF168D6272A, 0x8B1F11C3B7C1F304, 0x09F8A8D53A66F1C3, 0x000000000007C7AD,
        // θ_3 = 1089073657215706409547265022236578087385062014219328202750030280565193465446964506573665269272575311895
    ];
    const TRIPLES: Word = 39;  // number of precomputed optimal pairing triples
}

pub struct BLS24342Param;

impl BLS24Param for BLS24342Param {
    const UD: Word = 0x22201DE9EC;  // u = 2^34 + 2^32 + 2^29 - 2^23 - 2^20
    const LIMBS: usize = 6;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0xBF6970570A7AAAAB, 0x4FFEE5CF4F750008, 0x38B2CF8D739D36F5, 0x8401F202BF479AD4, 0x2CD39F8EF2E87829, 0x00000000003F4F77,
        // p = 8862447680616962544692108032750728052294808163492027673331716202802756644742232666412705497912784366251: 342 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0xB000000F5E4FFFFD, 0xB5367FACAF69A868, 0x5FCC740C64FE9FB4, 0x2203652C3ABCDB04, 0x1B9A6998F30871B6, 0xB4E5A12FB5EDCC3A,
        // -1/p mod 2^384 = 27842595120265556454813581689248561593733805402016345322222667592891254569074247439557505263480851772810779419475965: 384 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x693C0BB513E70034, 0xDB9C84029A9381A5, 0x49C29126FA592A95, 0x63DEB1FF87EDBCD0, 0x306853713C90313E, 0x0000000000108F15,
        // (2^384)^2 mod p = 2317984215214371765064008785394156476882654972387243282036610856895045597674220825819374039285920890932: 341 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x4C9E468DEE5F0000, 0x669AC740FFFFFD4F, 0xAAF693C254CE9250, 0x0000000000073CC4, 0x0000000000000000,
        // r = 54921191590821402983574417900276215547090794577735829354348400850394713384781086721: 275 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x4C9E468DEE5EFFFF, 0xFFFFFFFFFFFFFD4F, 0xA0E0FFFFFFFFFFFF, 0x48BEE83CD8EC8284, 0x689E5AB5840109DE,
        // -1/r mod 2^384 = 16102271901729227083828448063532938598503400880372069485464105395426647372047219906233008870933108239756002448113663: 383 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x627E0AA04F1EF3FC, 0xAC484E754791F9D5, 0xB2C878F8C794D3BD, 0x6FDECD9FA9D8090D, 0x00000000000126E4, 0x0000000000000000,
        // (2^384)^2 mod r = 8741427001088877867547880444880495555358023865036325015853510683193451824887559164: 273 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xD6C3FE40F7F894DE, 0x5556785F6F7329E3, 0x663AD739690A0870, 0xDFCD6CF41A9FF6BD, 0xBDD1109A59BE4B36, 0x00000000002C2F20,
        // -sqrt(-2) mod p = 6185068172363452404710225185990479750796495535551408280294583731268138814690044631804451468077344265438: 342 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x4086A3D6AFA3F2A0, 0xFAA2E10F04248306, 0x3742914404876238, 0x3BAAD5E591234326, 0xC02B694745DC9658, 0x00000000001AB39A,
        // 1/ξ^((p^2 + 7)/16) = 3737795221381664632587461673092341554835650503088528089858891059197529916178341166166980321827203838624: 341 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x86782C61495AAAA8, 0x1AE3A749103D7469, 0x97D092D4B2FBD4D3, 0xDB1827DF6746F1CB, 0x2C8978D377F4CFA3, 0x00000000003F4F77,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x22F0CE5C29EAAAA9, 0x3571468C2FD93A39, 0xE841B131134C85E4, 0xAF8D0CF11347464F, 0x2CAE8C31356EA3E6, 0x00000000003F4F77,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x9C78A1FAE0900001, 0x1A8D9F431F9BC5CF, 0x50711E5C6050B111, 0xD474E511AC005484, 0x0025135DBD79D442, 0x0000000000000000,
        // ζ = 1208390897361826306351782160237544247354371925870028668380615034118169993751398682476242010113
    ];
    const THETA1: &'static [Word] = &[
        0x9E1297F1D00FF138, 0x399BE04421998E50, 0x5DEE1B0C4FFB7874, 0xE2734BF516F98B5D, 0xD46B98B842FDB373, 0x000000000017FE51,
        // θ_1 = 3358698275225337596470999951384909593417684385615117877526610473538810146477207998787711840622702752056
    ];
    const THETA2: &'static [Word] = &[
        0x0CB8D785B66703E2, 0x410E41BAE59506AA, 0x8DE2201DD826C2B9, 0x11755C87B59E0AD5, 0xB7508F23DCC9EA51, 0x00000000003D68B5,
        // θ_2 = 8596283491573351150576220674361058334275371545652613935952397594898015905610046983527219391328753746914
    ];
    const THETA3: &'static [Word] = &[
        0x9BFD210C81ACC469, 0x0EB1691D81C5CDFB, 0x2D719441ABD80BE5, 0x5E0CCB7617D580AD, 0xE8687C47F68B34B5, 0x000000000006E1B5,
        // θ_3 = 963325684382924670094550397281771377908855987743177976831594453091843069261047390652253267086166246505
    ];
    const TRIPLES: Word = 39;  // number of precomputed optimal pairing triples
}

pub struct BLS24343Param;

impl BLS24Param for BLS24343Param {
    const UD: Word = 0x2221E1E711;  // u = 2^34 + 2^33 - 2^31 - 2^25 + 2^17
    const LIMBS: usize = 6;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x0E08A8032A00AAAB, 0xB69CDEE90510155A, 0xD8962B2B28703AAF, 0x28521C1BE72F523E, 0xE5BEC1EE4C1BE4B6, 0x00000000007F0572,
        // p = 17780953373888827521387298188529484429951540411081783823345848461264986577901240349477843669437005212331: 343 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x47E800107A05FFFD, 0xA38E1C677F1B22F2, 0x9729C3090E363ECA, 0x6C0BA94CBD209CE7, 0x33315EB03245989B, 0xC9D0DF6E18FA0FD7,
        // -1/p mod 2^384 = 31062311358115810145623282030045630027020419504472355948761693872900958675853430628689155410541463218005851372912637: 384 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x370F58C1B194F709, 0x0A2E727908CDFFD9, 0x77E38E1B3F5BA6D4, 0xEDAC6BD19B30A04E, 0x40CFCB1D8026179A, 0x0000000000456A02,
        // (2^384)^2 mod p = 9716866157591884014966626968411153876158329721479424827255219156980442548900096485322253080885114238729: 343 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x1AFD570C4EF03FF0, 0xEAB266EE31F7FD72, 0x21C194E277EFA3D9, 0x00000000000CA204, 0x0000000000000000,
        // r = 95865212284641027508773483116269332090649881740877748202919129046941810262907289601: 276 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x1AFD570C4EF03FEF, 0xFFFFFFFFFFFFFC72, 0x61EB6D962F400FFF, 0x3FC00D3197F795FC, 0x31E168A5AAFF55E8,
        // -1/r mod 2^384 = 7677312069561947218465509964539822837252025526816345852329944151337841541876077178284976440476138016255152433922047: 382 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x6E133BBF7EE0F540, 0x85CF0C9A176F3412, 0x9D850307815EDC82, 0xDED47E9D04159CF7, 0x000000000009A4BC, 0x0000000000000000,
        // (2^384)^2 mod r = 73180238018524702642533520920404820097718247233708109516561453808562139190450517312: 276 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xFBB88A10E591C196, 0xFE5143E8C422C46E, 0xC58AA3F12AA85703, 0xEFBF914FA8F17920, 0x029421E7ED8E3A85, 0x00000000007C6F8A,
        // -sqrt(-2) mod p = 17419012747217084938265695131849816216140780187751342408772256430357076450177517035583965272056444076438: 343 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xB3BBC0A959DA8201, 0x7639BD590E377BB8, 0xEA33A43D00AEC264, 0xC5438E5AFDB20106, 0xE58F05A351B8B36D, 0x000000000062E3D8,
        // 1/ξ^((p^2 + 7)/16) = 13843026313038854969118103728319000972224002873421005268684920551801905407621170701038177554954966434305: 343 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x05C0C7FE2604AAA8, 0x9F6991B3722BE649, 0x14301D4812580640, 0x01D3072E2D8B6DD7, 0xE533FE16618CCA61, 0x00000000007F0572,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x89E4B800A802AAA9, 0x2B03384E3B9DFDD1, 0xF66324399D642078, 0x951291A50A5D600A, 0xE579600256D4578B, 0x00000000007F0572,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x8423F00281FE0001, 0x8B99A69AC9721788, 0xE23306F18B0C1A37, 0x933F8A76DCD1F233, 0x004561EBF5478D2A, 0x0000000000000000,
        // ζ = 2261354595937206993004238814115285651147046284029857368259069355284798836885462089277179297793
    ];
    const THETA1: &'static [Word] = &[
        0x2E8EDFF359439C8A, 0xEEFC6655A696D831, 0x776E358F443253C1, 0x6BEC4F44DBAF385D, 0x9469E9814F24A7CD, 0x00000000005469FA,
        // θ_1 = 11816610463037460622831899165927952274568149970831469816343812696586631665853781586058859332814722276490
    ];
    const THETA2: &'static [Word] = &[
        0x5D560D184385EEEC, 0xC6C91A87C08A9F60, 0xC3ED47947992126F, 0xB445957EDFF8D671, 0x529EE960F3BE5A2B, 0x000000000068D33D,
        // θ_2 = 14673849284459909367688246588526440263453780534125985211388163979856893137136217281210966972650504974060
    ];
    const THETA3: &'static [Word] = &[
        0x2B60647509AF3C4D, 0x2441DCA3A281833B, 0x4F397A70C5F4F97B, 0xA34B7F04D936960F, 0x0A3AD9A18879EF89, 0x00000000006F53DF,
        // θ_3 = 15584091011861845182418695454158531309279603526901307720216730338673437658049201966788313112708304026701
    ];
    const TRIPLES: Word = 39;  // number of precomputed optimal pairing triples
}

pub struct BLS24347Param;

impl BLS24Param for BLS24347Param {
    const UD: Word = 0x23E0E4E6EE;  // u = 2^35 - 2^32 - 2^28 - 2^26 - 2^18
    const LIMBS: usize = 6;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0xF872E007A3FEAAAB, 0xFD6BB9C422F9550F, 0x167B936357D25AC6, 0x2D876C15A7E21727, 0xCEA4BDE55467A839, 0x00000000050418FD,
        // p = 179753181193009000867003230586103591383571033752008074648873874486698410098336591861829347215795480865451: 347 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x40C00014C3F3FFFD, 0xD0E16B6CE8AA945B, 0xF7AE2C1682C8350A, 0x066E073E405C1EC9, 0xE53885076B26F2C5, 0x832FA78917BAF981,
        // -1/p mod 2^384 = 20191396486966136495076370761509909832448103111571360879121708558936270351985521141861780003121195386846600647409661: 384 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0xCC6CFE69D96B9ED6, 0xDD05CF873E7C04F5, 0xE9039C7B1AEB35AF, 0x1BF751A8756610B1, 0x90A56AFFBB4960F1, 0x000000000231CFD8,
        // (2^384)^2 mod p = 78644702827700645143973780005674734956664478326007634988327389825148393640925539289258976653145814048470: 346 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x7CC2C81470EBFF00, 0x111F30AE2800F708, 0x56E8575E1F91A6C9, 0x0000000000506782, 0x0000000000000000,
        // r = 610152326910567225889916281382748711955820491513841744899819742173782658506471505921: 279 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x7CC2C81470EBFEFF, 0xFFFFFFFFFFFFF708, 0x250F5D3C00FFFFFF, 0x7CC3428CADF2B166, 0xC29ED10CF7D45BC9,
        // -1/r mod 2^384 = 29954817635462158612373849170877186726548648296722050792131131764953635075228151340761119364292172500564044140249087: 384 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x0D4373F6E458B121, 0x062C3B1BF1423175, 0x9EBCDDEB18B57D7F, 0x8E611F19D5A36F91, 0x000000000014A020, 0x0000000000000000,
        // (2^384)^2 mod r = 156517620927174463889885318821502369274277608562657291805034886855656880118003446049: 277 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xB5AADF6224065558, 0xABBA9DD20C4156D1, 0x886FC10DC34B6D9B, 0x181E1515BAB7E7EB, 0x56D05000D0448835, 0x000000000220B6DD,
        // -sqrt(-2) mod p = 76251313919505494916038957193285735909646145635733836884910674569865661899355670318910741150657977668952: 346 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xD855D63AB2354249, 0xFE7461CC6ADF6AD4, 0x7A63B6214CDBBB65, 0x04EB9FF2D5BF68C1, 0x9767F44370DC5D6A, 0x00000000005267AC,
        // 1/ξ^((p^2 + 7)/16) = 11535382162881324379214301478160345460640251854446530406689022996231036567098238252098448162886081921609: 343 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x52105FD57BF6AAA8, 0x7C4ADF4AC4C08E81, 0x85859FCEDCB24B8D, 0xEC852A2DA911BA6C, 0xCA4BA7742F3C530A, 0x00000000050418FD,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xA5419FEE8FFAAAA9, 0x3CDB4C8773DCF1C8, 0xCE0099991A42532A, 0x0D064B21A879E8C9, 0xCC7832ACC1D1FDA2, 0x00000000050418FD,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x5331401914040001, 0xC0906D3CAF1C6347, 0x487AF9CA3D90079C, 0x208120F3FF682E5D, 0x022C8B389295AA97, 0x0000000000000000,
        // ζ = 18139196930382642059036456090602720463910425493958522111562454176031227337821466389714114445313
    ];
    const THETA1: &'static [Word] = &[
        0x5591A8E3AB5C6D07, 0xD3BAB070DF77E3B2, 0x2772102AC50D4DB9, 0x07BD2778B19773FB, 0x9B1B65CE9F10E39A, 0x0000000000E0E8FC,
        // θ_1 = 31483826495426087452973414316474545692815604753347535089854045073871898662331429992443450541957954956551
    ];
    const THETA2: &'static [Word] = &[
        0x8543C6CD66A6BDA5, 0x02229E7826A8C7B6, 0x9CC5D05C1C986914, 0x8451E3122BC47FFA, 0x104CC231C9116080, 0x00000000002F7272,
        // θ_2 = 6641830464326660005046064280168322262007468064519383352601292211060932287346405167011920033371033877925
    ];
    const THETA3: &'static [Word] = &[
        0x56B6F5646EDB0033, 0x8662680E2595D469, 0xF38B0AC168C8B181, 0x665D6E76EDE71CDD, 0x93ECB3BBB3908B7B, 0x0000000002055D29,
        // θ_3 = 72422694370678512655806566688460388814096999183166220502246442337327809088734765983243084519765473689651
    ];
    const TRIPLES: Word = 39;  // number of precomputed optimal pairing triples
}

pub struct BLS24348Param;

impl BLS24Param for BLS24348Param {
    const UD: Word = 0x23E1E31910;  // u = 2^35 - 2^31 - 2^29 + 2^25 + 2^16
    const LIMBS: usize = 6;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x2B30EC02CB55AAAB, 0x14C1817FE3997D67, 0xE68B97D686A827B7, 0xF98DA0319F6B44DB, 0x765912324C7359E7, 0x00000000098EF4C3,
        // p = 342534817259575167274069958552363404405932815253521756232650350518917116079018701604519008986124942420651: 348 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x8DFD00162602FFFD, 0xE10736CEBD8FDA19, 0x9D9D77BE5B6995FD, 0xED0FF66B3EECE865, 0xBB976507380A3470, 0xE30ECC4D5B27F863,
        // -1/p mod 2^384 = 34947394670926951664215126570120879363151612369403561922472203182577397716236711299784883051226643034981223920500733: 384 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0xF8AD29914B013EA8, 0x018EA9359226CFF6, 0x348B16C8648086F7, 0xDF5469146A631C2D, 0xF5722FCFCDE52564, 0x0000000002F89A5F,
        // (2^384)^2 mod p = 106472289373046242178118685883651161090730312188013099240280461497304435678951205698939394215231287803560: 346 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x148011E6D6CA77FF, 0x62F69CF3EAAB0466, 0x2D04BEE07A29AD1B, 0x000000000086ADFD, 0x0000000000000000,
        // r = 1022023264083587319425055957543551303254600366808222748531315815443878068698585497601: 280 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x148011E6D6CA77FE, 0xFFFFFFFFFFFFF465, 0xC481AAB244609800, 0x56497A8147FF8C05, 0xCE536C9E8338A5E4,
        // -1/r mod 2^384 = 31756458790752460577290487595116807546304387876172571210963980576895921540749498130375923011770648825253237830451199: 384 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xB01CFE22287E5A98, 0x5F29F2F9389222FB, 0x8EB4E8DD809CCC24, 0x4390172F8CB74AE2, 0x00000000002F2E77, 0x0000000000000000,
        // (2^384)^2 mod r = 358039244393092177268211242477329934235105047395908975185507822795167025081513564824: 278 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xD13A3FD9AD1778D8, 0x40CD211758A913C0, 0xD22B00C8F44DCEF1, 0x0A5C2886EFFD0A58, 0xD3038406C8167632, 0x0000000005007945,
        // -sqrt(-2) mod p = 179245892852389652907353406364231389492249910895782967123761547542391272158348521720408888758309395855576: 347 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x0164A3685D81E734, 0x61BD93E6C483B4F5, 0x377991546D2F8EFD, 0xBE52F84CE337FED5, 0xECA20673093ACB52, 0x00000000080CB7E5,
        // 1/ξ^((p^2 + 7)/16) = 288467693391476207882061069776570482033554125619523959483085850691930557437686400498842153445464356284212: 348 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0xBCE9DC0D8F57AAA8, 0x39F5AC040AE3AF15, 0x2DFF304C54613ADF, 0xFD87D4E5E594F4AB, 0x6E947016A6E70162, 0x00000000098EF4C3,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x740D64082D56AAA9, 0x275B96C1F73E963E, 0x8A4564116D84B14B, 0x7B8ABA8BC2801CC3, 0x7276C12479AD2DA5, 0x00000000098EF4C3,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xB72387FA9DFF0001, 0xED65EABDEC5AE728, 0x5C4633C51923766B, 0x7E02E5A5DCEB2818, 0x03E2510DD2C62C42, 0x0000000000000000,
        // ζ = 32407339536920245699152980855791148282652602799889133229460561012262216157263728509010560614401
    ];
    const THETA1: &'static [Word] = &[
        0x7319D3F17BACC65C, 0x15FA9CD4E760728B, 0x76366B6C4B3CDA12, 0xB0350249D83F6757, 0xAA5033DF606E6A5E, 0x000000000061F2B3,
        // θ_1 = 13711164931024641324361665548849993361661113193279863529863898015700413151766023219588947737113525012060
    ];
    const THETA2: &'static [Word] = &[
        0xF5834BFB5ADEF610, 0x8A6BF3B6C4F41754, 0xF2DF14F82EEA0D66, 0x54F911F99FBF1DD4, 0x3F318E24039CD0BA, 0x00000000021E49EF,
        // θ_2 = 75911781495170185129315037633265701384463842254611620032016875755495222927408237640615496642041172915728
    ];
    const THETA3: &'static [Word] = &[
        0x999F7BCC141A3DBE, 0xFE827B5134D67F89, 0xE720C3B407A172A1, 0x3EA4EE1A34F07038, 0x58D33AA0E5704090, 0x0000000002860638,
        // θ_3 = 90433095197920072416881016680990042696874144421813518848266515866153998609589882600831938595048226700734
    ];
    const TRIPLES: Word = 39;  // number of precomputed optimal pairing triples
}

pub struct BLS24349Param;

impl BLS24Param for BLS24349Param {
    const UD: Word = 0x231C1A1411;  // u = 2^35 + 2^28 + 2^26 + 2^20 + 2^17
    const LIMBS: usize = 6;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0xC0E645C406B0AAAB, 0xE192C9FFCEDFF765, 0xBC7CD6BA37784D96, 0xE138AA95110C6D3C, 0x77259525B12A2BE9, 0x000000001784C592,
        // p = 842811994190826779681897372171728186556893274139627342044863110559993491421650286320444408576043746634411: 349 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0xEBA800183C35FFFD, 0x41FA2617635666DB, 0x6CEB43E921D08413, 0x048D96988825961D, 0x95AB4469D0A31FDE, 0xFD950C9479228C8D,
        // -1/p mod 2^384 = 39029876289160962590407520495038682871401271247926559344573390996200360756407742428521530007079506602044204799885309: 384 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x86719374C0807CD3, 0xCF07C7EC8A473D62, 0x57C979EC5B3736E1, 0x04CAEDA56CE04325, 0xDE63B145D645390A, 0x00000000110E7135,
        // (2^384)^2 mod p = 611232251417606839992185946708789064555085752850390767711204301583278858235687917363042945242825899408595: 349 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x0FD10AA9425FE5F0, 0xC3A9ED5C36A7305D, 0xBB716E1BBBBA76FF, 0x000000000114C5BA, 0x0000000000000000,
        // r = 2100301148186794968942579942635155894623224374496017851058849461730412938249937879041: 281 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x0FD10AA9425FE5EF, 0xFFFFFFFFFFFFEF5D, 0x061AACD6070E0FFF, 0x79B894E53C81E693, 0xDAD43E92A194E747,
        // -1/r mod 2^384 = 33680877959503225458127487622359446349642011587710240780426305113574565785985479514990952366704035494471997583261695: 384 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x6D0E80D89270AFD0, 0x74CC973D15D9FA4B, 0xE326E47AC12E0DC0, 0x8F71DAC3A63CBB92, 0x0000000000E470A1, 0x0000000000000000,
        // (2^384)^2 mod r = 1733528180329420412777369391665330132093885659845624614327731118286815647491217731536: 280 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xE9B5AC7F72094B3F, 0x6583D02DF14E0CA8, 0x47BF4AA8C1E72546, 0x4BF887857D8A1C88, 0x19DFFECC83E9B2B7, 0x0000000007E78D03,
        // -sqrt(-2) mod p = 283264833051008896801961400144480457578308670592756989722039187302239008573097622956308489652575637424959: 347 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x8DD381381F5AB476, 0x106865398E0C4D82, 0x55E60B0146EF3779, 0xFC1FCD1CE7E16FF9, 0x6400CA069DBB3B51, 0x00000000008B656C,
        // 1/ξ^((p^2 + 7)/16) = 19513242049465981364763059850853263501223256382886682467617445232821907374296861537381875381876588983414: 344 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0xD13B00C42ED4AAA8, 0xDD82C57A1DACC290, 0x6D22E699C175D89F, 0xB7EC3053C39FF9E9, 0x65ADD3A90503D766, 0x000000001784C592,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x4910A3441AC2AAA9, 0x5F8AC7BCF6465CFB, 0x14CFDEA9FC77131B, 0x4C926D746A563393, 0x6E69B4675B1701A8, 0x000000001784C592,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x77D5A27FEBEE0001, 0x82080242D8999A6A, 0xA7ACF8103B013A7B, 0x94A63D20A6B639A9, 0x08BBE0BE56132A41, 0x0000000000000000,
        // ζ = 72873019676019782888152264147505055182902401569957557843864545185606794517242517969810181980161
    ];
    const THETA1: &'static [Word] = &[
        0x2CB82FBCF263F449, 0x4AB7483C987B4B1B, 0xFEBD480CA3DD74ED, 0xC1BF56DBCB754B82, 0xE9B6EBEFF1D8F41A, 0x00000000146C36D9,
        // θ_1 = 731866587850612729019573494881479778016438659135213927915260244460227786171940941669172038124982753293385
    ];
    const THETA2: &'static [Word] = &[
        0xE97C0F28D0A9B157, 0x3A66CEDA167BAE51, 0x3FDD9F5F104A9218, 0xB611ECC68CE2669C, 0x55F1732ED9DB271F, 0x0000000012CEB803,
        // θ_2 = 673983819961131888904253263448352730608055587370605580013054015030881955247083299289648819565370685370711
    ];
    const THETA3: &'static [Word] = &[
        0xB04D7C55EF754195, 0x5ED8D1B5D086FD78, 0x4B54F126EE347FD6, 0x5854B14DDFE2D9DF, 0x5FC55419D5D3BDA3, 0x0000000015F02562,
        // θ_3 = 786170846699425924811184232735170515307800838724722999139442948511199102351691062947754526196781899137429
    ];
    const TRIPLES: Word = 40;  // number of precomputed optimal pairing triples
}

pub struct BLS24358Param;

impl BLS24Param for BLS24358Param {
    const UD: Word = 0x24E1E91511;  // u = 2^36 - 2^31 - 2^23 + 2^21 + 2^17
    const LIMBS: usize = 6;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x118A0B867FE0AAAB, 0xA585E3C8AC3839A0, 0xB14E57A9EC18441D, 0xAC6747686F371ABD, 0x81411A02A3D01A9E, 0x0000003E102BFE5E,
        // p = 569367189825812119750256156998984625750860845338040415646598659419311048666890604026748115487776272973605547: 358 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x0568002E7EE5FFFD, 0x27CBD7F51360B138, 0x5B0BE5C56E776DA6, 0x3DF8A10DCAF028D5, 0x8D1DB65BC4D1EEB0, 0xCEB9483520814AA9,
        // -1/p mod 2^384 = 31817698420333865614967696255597024975010379126266559070751534232107891553136420106206053749405326130000338776096765: 384 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x6AABDB76B567656F, 0xE7F8A7FA501D93EF, 0x24B2107412E22F1F, 0x961AAF95770169D0, 0x7E6A9D01266BFDCB, 0x0000003AD5531CD5,
        // (2^384)^2 mod p = 539736363433663687856115464045871558680179560730389112158210350450980160892953526716857990839067748151551343: 358 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x4CAEA8CBC068ABF0, 0x5288DB5426799F9D, 0xC32B75940F52E774, 0x00000000C66EA542, 0x0000000000000000,
        // r = 385488079988727664294708640077774074431065219976653646111084954683933636326077214228481: 288 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x4CAEA8CBC068ABEF, 0xFFFFFFFFFFFF1E9D, 0x68595DE3B0FC0FFF, 0xEA75E66E6D325C2E, 0x09EDD20FC2DB427F,
        // -1/r mod 2^384 = 1528210894459207432533386822897298411151225447988334526586158243843799024350727944366114501506774840880478212325375: 380 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x04E4D72E478E0AAA, 0x92693300BC6FA1E0, 0x875785F104DB70BC, 0xF44D7BD0E2D6F268, 0x0000000013FB6935, 0x0000000000000000,
        // (2^384)^2 mod r = 38818553831553963109227683742644384329375450458146849343403724027595046758585035786922: 285 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x9F836BD542EE229D, 0x18EDDF36490F5EE6, 0x37903B736DBF6C58, 0xDA8DC2E21AE8AE85, 0xBDA4512C48FCA690, 0x0000002581A03443,
        // -sqrt(-2) mod p = 344083054340760217932737648253632796468275964126059800907308245884512838839612455232108929851521898214466205: 358 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x1CAEA1A2FA594772, 0x02B2E380ED83BB49, 0x549097B036CBCFB7, 0x4BF1ABE639C10152, 0x769E1B49C6FBB309, 0x0000000063570D06,
        // 1/ξ^((p^2 + 7)/16) = 3559941406015721065739442238047407700773646316759850763970939473324737276212598577496049191631879231063922: 351 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x8D3181957F24AAA8, 0x0F346F893CF74994, 0x8C286D246E2BE688, 0x56B02DA23ADC8974, 0x7A6CD033052C112B, 0x0000003E102BFE46,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x4F5DC68DFF82AAA9, 0xDA5D29A8F497C19A, 0x1EBB62672D221552, 0x018BBA855509D219, 0x7DD6F51AD47E15E5, 0x0000003E102BFE52,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xC22C44F8805E0001, 0xCB28BA1FB7A07805, 0x9292F542BEF62ECA, 0xAADB8CE31A2D48A4, 0x036A24E7CF5204B9, 0x000000000000000C,
        // ζ = 25660335040759351667315230816009573078960892659565825350952312956392693312923158691561646464040961
    ];
    const THETA1: &'static [Word] = &[
        0x99A56BE530F0AB6B, 0x5D6360C8EADF911C, 0x2B306B538846E360, 0xFDDF35F7043C27E1, 0x6D5F3F296A1D81AB, 0x0000003A41FF3B63,
        // θ_1 = 534456741847713440499139714308817617664223914307566265668134930088503601539458080751105062244972161466936171
    ];
    const THETA2: &'static [Word] = &[
        0xD06B5B4F305765E4, 0x275C647F3BFC74C6, 0xFA8D35E510BD38F8, 0x72029696B00AD77D, 0x33549070B018F98A, 0x000000359712DC4C,
        // θ_2 = 491635570061384848092613345316475719196205335762524258255417181982719390880684052905071575912453197100705252
    ];
    const THETA3: &'static [Word] = &[
        0xD6911E999434D5C3, 0xEEB34DE42CA496AE, 0x45BBDE5C49963866, 0xE298B369FD994908, 0x8E96D3FB2D0F5B76, 0x000000007706DEAE,
        // θ_3 = 4265435658651546784538675621156187256886606497223251845648118127339618134343961538233913039545632053056963
    ];
    const TRIPLES: Word = 40;  // number of precomputed optimal pairing triples
}

pub struct BLS24362Param;

impl BLS24Param for BLS24362Param {
    const UD: Word = 0x24221AE8EC;  // u = 2^36 + 2^34 + 2^26 - 2^24 - 2^20
    const LIMBS: usize = 6;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x7C82E05C00FAAAAB, 0xA4C3DB4383950085, 0x3252D248ED402196, 0xACCD581BCE1CA9E8, 0x3929AAE91EF7079F, 0x0000031F4CCBF350,
        // p = 7332773656119010584279301048829182931944556478781894124588669013572843806904055233518711213515116308839705259: 362 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x3000003C08CFFFFD, 0x6C54D556AAEE7FF5, 0xFFA351C41FFC151C, 0xA2A97BCDA72BCC47, 0x3198BF0CCADA5C19, 0x2FD163FD55198CE4,
        // -1/p mod 2^384 = 7359853327253953574061982401355760449973248560136566807050758321705222752004179836198593053639008718233340113584125: 382 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x5E52E1C3FA9007F5, 0x83260EF0890C8AC9, 0xE78C3CB659090BEA, 0xD3932D14D0803DDE, 0x992DF4416A426050, 0x00000204D02954A5,
        // (2^384)^2 mod p = 4741240799537358328136130767992736150805827585037608666789450710563554962536027665788893609966690323391318005: 362 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x7F12B3EA8ABF0000, 0x0A5E7A80FFFD8D90, 0x96CF1418FDF6D9C5, 0x00000005FCE58319, 0x0000000000000000,
        // r = 2977910407088835430264031474528229654836533287052824175422716859140477608981951540101121: 291 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x7F12B3EA8ABEFFFF, 0xFFFFFFFFFFFD8D90, 0x0FC0FFFFFFFFFFFF, 0x4B7110192850288F, 0x184F31A7F265FF6B,
        // -1/r mod 2^384 = 3741551625436201525359168720983189176888325214974337392701696221320522574261894662947465579456053443200486335315967: 381 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x8DED107C3D68E6C9, 0x29F6148F4589F417, 0xC7350BCE048D8B06, 0xD18481143CF09F96, 0x000000000DC90FA0, 0x0000000000000000,
        // (2^384)^2 mod r = 26780457484470534814922623285847851443360221657961087146093127438239443147881206834889: 284 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x478495E1C4D1408F, 0xCADCC825E90A829C, 0xF5A219D4EE4A205C, 0x09CBC7A6A0F28E80, 0x6EA21651864C8497, 0x0000023E4F296E31,
        // -sqrt(-2) mod p = 5268709659268200151865047923323038144000686114467689577007571564097209477673936187218745987282937850971111567: 362 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xBC9D1BA5F9BBE99A, 0xB96E349EFE3807A1, 0x19B233B7FE580C14, 0x7806FB5F8DEBA029, 0x2861BEE413DD0704, 0x00000017780F74D6,
        // 1/ξ^((p^2 + 7)/16) = 215304346224472932995762191766553203376677847506666821406679763506937531781335056043085440068335965411469722: 357 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x66605C8406DAAAA8, 0xBC19BEDA9FAC4FA7, 0xE1E1293AE9D09359, 0x0F73265D23BE316F, 0x921F6AAB45A6F5B9, 0x0000031F4CCBF260,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x71719E7003EAAAA9, 0x306ECD0F11A0A816, 0x0A19FDC1EB885A78, 0x5E203F3C78ED6DAC, 0x65A48ACA324EFEAC, 0x0000031F4CCBF2D8,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x0B1141EBFD100001, 0x74550E3471F4586F, 0x2838D48701B7C71E, 0x4EAD18DF552F3C3C, 0xD385201EECA808F3, 0x0000000000000077,
        // ζ = 255947316741360271959980013761562257056649562563030869478993782415135800442884451881991310903607297
    ];
    const THETA1: &'static [Word] = &[
        0x2376861B9E0560F0, 0x6D449D637D285320, 0x9BA7A2E71C73CDAF, 0x64D4F028C48F5257, 0x4D694132186EA57F, 0x00000077C5D52A31,
        // θ_1 = 1098794856311940590770191257682581100092226065827093763708441414701832241158925053692941835551006185515999472
    ];
    const THETA2: &'static [Word] = &[
        0xBE8D350344E094AD, 0x4A8BB45139276E70, 0xF852D327D151534A, 0xF6779FB872F849DC, 0x867C9F6B3A33209B, 0x000002370825868F,
        // θ_2 = 5201946801381664777301983228393529437880395230797698087089678874133194401130070656675786764848020894389408941
    ];
    const THETA3: &'static [Word] = &[
        0x4E7166454B576067, 0x39C9755FFE7CDB07, 0xCEDEEFA26B3B3C4F, 0x355ADC3A2EFF0E94, 0x4BA19873D13EC506, 0x000000F80A495D41,
        // θ_3 = 2275519256049335127229266017506865702060603557690969154409714025787417980162633928545387390247693013384388711
    ];
    const TRIPLES: Word = 41;  // number of precomputed optimal pairing triples
}

pub struct BLS24365Param;

impl BLS24Param for BLS24365Param {
    const UD: Word = 0x242320E612;  // u = 2^36 + 2^35 + 2^32 - 2^26 + 2^18
    const LIMBS: usize = 6;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x12F2A00DA956AAAB, 0xEC0C9697A30155D0, 0x23094D7349B2C7E0, 0xA7EDF26404B9295B, 0x4B8C8A953FFC76BD, 0x00001CBB89804F39,
        // p = 67479656764181278474421732199317328308893422823875032602687677168429621958340512859175223364248316210834746027: 365 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x3F40004AF40BFFFD, 0x9C95B44CAE28CFB2, 0x5F937803D3D82BE8, 0xEEFD2603B3B783E7, 0x3B0D43EC00E45192, 0xBD1D1CE6C06BBC9E,
        // -1/p mod 2^384 = 29107265843422996201716663855977596423743880793521050176249712806682278131750698094231990396420710983651266359197693: 384 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0xDA6AE6F6471EF473, 0x39A3B9A4B0EE2BA9, 0xAD5F530CB7754E7C, 0x5D5D990B47EBD822, 0x4B3366350FD0D3C9, 0x000009D360350A5E,
        // (2^384)^2 mod p = 23076043749608100024068597116744105551521511528508893157209614869796323581182066524593520098233213935343826035: 364 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xD6FC89EEE103FF00, 0x78242A4DF7FB0DEA, 0xE9070F19080365EF, 0x0000002359BF9D6C, 0x0000000000000000,
        // r = 17580664885396029032492284964022959053628906719660745906263920557637896138284848906240001: 294 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xD6FC89EEE103FEFF, 0xFFFFFFFFFFFA0DEA, 0xDA0B8CF400FFFFFF, 0xCB3CB0A956D24087, 0x6F5AD35321BE43AC,
        // -1/r mod 2^384 = 17139070350460752824252916569630819665708695967102040258519751818797458851085601660370329928009649450684874997366783: 383 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xBC110DFC40958558, 0x3B1AA5707479200C, 0x0E110101AEE99367, 0xBED33AA816C41769, 0x00000010EB82849B, 0x0000000000000000,
        // (2^384)^2 mod r = 8414689414656831974163347396243960720750210352197891169530542168040113675732484208559448: 293 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xBC54794848ECF479, 0xBA880E9FD8850E97, 0x9BF938C96E61406A, 0xFA0F8C836B7B0A08, 0x275FC9B002E5B7A9, 0x0000188FCA0E0CF2,
        // -sqrt(-2) mod p = 57684144016780676006065512354761223648696121175306876895746611351009337004077874603887676667548338970646344825: 365 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xE59264EAC9472702, 0xFE23ECD2B992FE77, 0xAFA65AD4D58FC7EA, 0xD646BEA92CB7CCE6, 0xB749DFC1801ED140, 0x000000031E1D9871,
        // 1/ξ^((p^2 + 7)/16) = 28601203763894782972195670881166244492908042254126401498553223979982334240075188099192877006491031263717122: 354 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x30931FFFA15EAAA8, 0x8AB22CBEE2CAE1CC, 0xF742C5B7B59432EF, 0x8B2D06975D6F0784, 0xDDD2FB1252FA249C, 0x00001CBB89804852,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x21C2E006A55AAAA9, 0x3B5F61AB42E61BCE, 0x0D2609957FA37D68, 0x198D7C7DB1141870, 0x14AFC2D3C97B4DAD, 0x00001CBB89804BC6,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xF12FC00703FC0001, 0xB0AD34EC601B3A01, 0x15E343DDCA0F4A78, 0x8E6075E653A510EB, 0x36DCC7C176812910, 0x0000000000000373,
        // ζ = 1886534308282038422473142501337321829080594563901341877565753709444347130032606436619758808296325121
    ];
    const THETA1: &'static [Word] = &[
        0xA15DDF4D6B8F3EB2, 0xCCC61512212EF6C5, 0x02B81DCED8046609, 0x2A6696AAB2DD0B3C, 0xA4BEED86ED006CC8, 0x00000A04350C8FF0,
        // θ_1 = 23524022867652321723542936466190373867850357615737872555776028564630288755763361043955852823679848039129759410
    ];
    const THETA2: &'static [Word] = &[
        0x4645AD5D8D9290E0, 0x06843D899C943B6E, 0xDCC9254F84059E1C, 0xA69828C9053D0E75, 0x14B73C9BB470AA6B, 0x000010A174BA9E25,
        // θ_2 = 39057877522828655516700685810848902110944414383853082193441115695089190725445832687575597192218479551610786016
    ];
    const THETA3: &'static [Word] = &[
        0xC4AC38744584D995, 0xEBAA8A15045E88BB, 0xB8DFE0183A8FB59D, 0x21632B7CED0ADAF6, 0xBF2F99469B05D1A9, 0x000018C64C341323,
        // θ_3 = 58184203709678830081246471255300638674294371387431403341817141468971565069520252151321477245824097410575817109
    ];
    const TRIPLES: Word = 41;  // number of precomputed optimal pairing triples
}

pub struct BLS24379Param;

impl BLS24Param for BLS24379Param {
    const UD: Word = 0x26EA12;  // u = 2^38 - 2^22 + 2^18
    const LIMBS: usize = 6;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x4B555A1AAA96AAAB, 0x0410B23317BE1A55, 0x90C05DAC88F0CE4B, 0x229F1125BFEEDAFD, 0x068D9E379C35D72A, 0x0555235628189CBE,
        // p = 820757709515291228678818881899423101872611607588250443824270222235057223137639331580864203395943211845043770272427: 379 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0xE34000BFFF4BFFFD, 0xB70D83F2EFE05C09, 0xBCA770BB2D12442F, 0xC6701F362F463462, 0x74E2080D0B338351, 0xA246517B4DAEF387,
        // -1/p mod 2^384 = 24976359292373568126820007214359702172682056394990086898496751188455080547882415302765459342472513194609730409725949: 384 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0xEB80CD346DEF6C13, 0x67BDD6650FBD2084, 0x79B555A7F5F5A5A9, 0xD55A8A4AB41A9A11, 0xCFC1AEC9FF82D560, 0x01022A8BF89CEF73,
        // (2^384)^2 mod p = 155216463390028712311510230316412676128572840535683769325129139754732312728372722493993081133576730357393569836051: 377 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xFABA034BBF3A3F00, 0x8472E1429A8103BF, 0xDBB6129D71FE8294, 0x0000FFF880189BD1, 0x0000000000000000,
        // r = 32588845883822842652436853441501632888315084823751143688429724826965630583993207444010434561: 304 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xFABA034BBF3A3EFF, 0xFFFFFFFFFF0003BF, 0xEDA9218140FFFFFF, 0x9E953ED59499FF3F, 0xB543699CBC0F06FA,
        // -1/r mod 2^384 = 27898979930777854309737618786398247213593629837264981358479985735137074298835848036004941444247835184481035360403455: 384 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xDA796773476C44DF, 0x3833DC10E41C0D6E, 0x19046319E2A84900, 0x4363D9B4BB58FB57, 0x0000F0563BD64A6E, 0x0000000000000000,
        // (2^384)^2 mod r = 30598425686969284307921716426637450429417448853563634610738833742386062434073045995451335903: 304 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x59A17002C766719F, 0xAC24B6FC0CD82049, 0x701083E8258F67C4, 0xC733A0E72628CDD9, 0x22800025E0A00D6F, 0x04B70EE330A91A21,
        // -sqrt(-2) mod p = 725715833573149983139096996291639650841627484543037603711326331353999476646466692750729018098238235660150213341599: 379 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xE409AAC11C864C72, 0x0926141BEA50E177, 0x84500AF6757347E4, 0xA0777309F7779FAD, 0xB11763E2FC5039AB, 0x00EC5B98856D965C,
        // 1/ξ^((p^2 + 7)/16) = 142104665284572141384425313609887237106834716103503164941753836594805120875747982900138945335857616602057991933042: 376 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x9455225AAA1EAAA8, 0x204AC81D7FE80A48, 0x009C955D6BD532BA, 0xD56D57C5001A0470, 0xF6C1C0A5CC1F0CB5, 0x055523562798A0F5,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xEFD53E3AAA5AAAA9, 0x922DBD284BD3124E, 0xC8AE7984FA630082, 0xFC06347560046FB6, 0xFEA7AF6EB42A71EF, 0x0555235627D89ED9,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x5B801BE0003C0001, 0x71E2F50ACBEB0806, 0xC811E4278E8DCDC8, 0x2698DCB05FEA6B46, 0x07E5EEC8E80B653A, 0x00000000003FFDE4,
        // ζ = 8957825601611815707118133037981016241292953669559791429616918034042820978655509394216775532705191034881
    ];
    const THETA1: &'static [Word] = &[
        0x53BDD2BF2CB2A8F9, 0xD93128471C5DC63F, 0x4C1AB3A940A4D4A2, 0x6BE3E6FCC4985B93, 0x384C8134BCBCC425, 0x01F4A3E55921A882,
        // θ_1 = 300998367074883163961935260160402306061616894057991450599214281095445896897865005503169503358335898610854102477049
    ];
    const THETA2: &'static [Word] = &[
        0xFEBD924F8C4BE52C, 0xFEE98C5075ED570F, 0x344DBD21169B4664, 0x89057209AE7378D8, 0x5C3A4DFA01AE2E27, 0x03117537533F32ED,
        // θ_2 = 472238404469337441947022678935129070295502652007652573168583995699082452994188006662627107388754825141742889329964
    ];
    const THETA3: &'static [Word] = &[
        0xA67BCEA77DA04F38, 0x7FFEDD1C74D0935A, 0x5E7ACA0439914796, 0xF96FB2938EC2155A, 0xD93B7B482A9EE06A, 0x032B82C0F5CFD9F0,
        // θ_3 = 487902097616765097876196318428755356036915586783363325757569367685916014879273651221813841407976488925171734826808
    ];
    const TRIPLES: Word = 40;  // number of precomputed optimal pairing triples
}

pub struct BLS24380Param;

impl BLS24Param for BLS24380Param {
    const UD: Word = 0x26221E1A;  // u = 2^38 + 2^34 + 2^30 + 2^26
    const LIMBS: usize = 6;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x6605556C16AAAAAB, 0x753C950000000611, 0xE64967C69E6F8848, 0xB58B9390B15B5BD2, 0xD9C55C361215655A, 0x0A2AE9BD97AFF1AC,
        // p = 1564941346639236247014177025335107150523211544536628202809680973186595271599320936211210207901767185500267967326891: 380 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x000000CCCBFFFFFD, 0xFFF16FE6835B4000, 0x4F4D6FEC3B9BDF2F, 0x635B232BAB3D81AC, 0xA55AEA03DB8ACE7F, 0xFB6B9844F3F09440,
        // -1/p mod 2^384 = 38697124652344500346972284733695519312226957820998620489306107181817545039224161094193519370098656926689760246759421: 384 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x266AA16191D9A0A0, 0x72B8C722D27BB9E5, 0x74B373348888F858, 0xDA4EE8EC4C236781, 0xFF82C30F6A77CE3E, 0x0830F0E4B979B16C,
        // (2^384)^2 mod p = 1260737333431735366130034845878295385705632112190411760246734654148623038893693267767043941296905654346539171684512: 380 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x5FB5BF0000000000, 0xFFFFFFFFFEB49E51, 0xA48F42C9A480FFFF, 0x0001ACF5BED84C9A, 0x0000000000000000,
        // r = 54612927308355058541362389145509626742038849761877290826158504181029718328820260850850856961: 305 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x5FB5BEFFFFFFFFFF, 0xFFFFFFFFFEB49E51, 0xFFFFFFFFFFFFFFFF, 0xC0FFFFFFFFFFFFFF, 0x3365DE1D65BD600E,
        // -1/r mod 2^384 = 7910863985103315146994266429785492971499914733633286152860417066571939068458123309692406151018468817659447423795199: 382 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x747E74E636617870, 0x0ADD34BA4C6A368B, 0x53C3F2F19D4B5ABB, 0x8ABE080B23B79EE3, 0x00012696C6A07435, 0x0000000000000000,
        // (2^384)^2 mod r = 37505520416661129784593188827831049260655767185376320481997626745322054081998735181399292016: 305 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x1B1DAD41EA8922CC, 0x97787CF5022A1171, 0x60476C1C3FF48CBE, 0x912B98EEF1E5188E, 0x21A184BB9EE3204E, 0x08EB950B4D7328C2,
        // -sqrt(-2) mod p = 1372951051951259661954450135642458330369916945717879228823843806416425487001036456360433902195901909596255023604428: 380 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xA1749527FAB53A6A, 0x7C8B527E7489FACB, 0xBE8F8E7E4C7B505F, 0x7CACB132E7818DDD, 0x4C5473D38A6D9C1B, 0x0524B364D5650E3A,
        // 1/ξ^((p^2 + 7)/16) = 791635916135132481248063953145967731746600899676556449080643940479625797150756092857101327060063555770113175403114: 379 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x9DC555F49EAAAAA8, 0x754FFFCCA630BD40, 0xE113607958A198B0, 0x0E58456A98F37F57, 0xE983CF1EF79F681B, 0x0A2AE9BD96CB2B3C,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x01E555B05AAAAAA9, 0x75464A66531861A9, 0x63AE641FFB88907C, 0xE1F1EC7DA5276D95, 0xE1A495AA84DA66BA, 0x0A2AE9BD973D8E74,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x641FFFBBBC000001, 0xFFF64A99ACE7A468, 0x829B03A6A2E6F7CB, 0xD399A7130C33EE3D, 0xF820C68B8D3AFE9F, 0x0000000000726337,
        // ζ = 16012435293047891386170424323557658074506215410226058215827110020266221198884502335094015300922391920641
    ];
    const THETA1: &'static [Word] = &[
        0x57F244C59F366D33, 0x9984D130D333D55E, 0x563062E205B4DC54, 0xCE721A7B9EB9D601, 0x35918E3E04C052D3, 0x063086D704FF8516,
        // θ_1 = 952660088779134283209245264147503475255748353688457022436265350883040539938953089406884647696011219588593829178675
    ];
    const THETA2: &'static [Word] = &[
        0x9BA1E7476CB8CEDE, 0x27740249ADE1396B, 0xC03CBAF2B8B4F253, 0x2FAF458C8B941218, 0xB5049055DCC6A2AE, 0x08702D6C396A00F7,
        // θ_2 = 1298756783835731794782156829008832840452421663707110794785337525511767475160886074984542511303706920709801649950430
    ];
    const THETA3: &'static [Word] = &[
        0x93655D6CB7B755F0, 0x85E3ADDF0F9B0E4A, 0xEA59A0B8230FAF1F, 0x9CBF8C0114CA7075, 0x6F85F2F9AA8B7CAF, 0x0284951D66D5E427,
        // θ_3 = 387540326942302775921764107099108958007008995712957462572866304832150093820612729831765766548517343558773371262448
    ];
    const TRIPLES: Word = 42;  // number of precomputed optimal pairing triples
}

pub struct BLS24407Param;

impl BLS24Param for BLS24407Param {
    const UD: Word = 0x29DA14F0;  // u = 2^41 - 2^38 + 2^20 - 2^16
    const LIMBS: usize = 7;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x66D55635AAAFAAAB, 0x2A6580DDF68AC36A, 0x6A6ED0A6EDD6B297, 0xF39BC6D8D67EA21D, 0x7A100E940B145AAA, 0x16306DE3D737E612, 0x000000000059CC03,
        // p = 231878091142580839055784432577665714624671864254867869839830044770116698155362475980165245822511076834193177513930985024171: 407 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0xD8730540002CFFFD, 0x9E2D34B89BA6283F, 0x297EE6C2BFE2357E, 0x77B10AEE9E2A24D3, 0x87AC0F790F7970D8, 0x59042953290557A5, 0xE6E30D78AB4C76D1,
        // -1/p mod 2^448 = 655537334061005015305751067278743461291021383269486587246630693404557408627615622741749557601285285198132386027935729275912811241603069: 448 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x867F39130C59FF26, 0x45C314450E379C80, 0x25AB4CC7A8C3EAF9, 0x6BA1A6B8FB9CA9A9, 0x56AE4A031D6684B9, 0xA57A41A183917A70, 0x0000000000130F0C,
        // (2^448)^2 mod p = 49214549680847899948318316490615151835172608938010614056405525491199035703567619065538897429717802163947675809061044616998: 405 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xEFD99FA3B6FF3A3F, 0xF6FC537749C159F0, 0x7B3926209B979817, 0xF6D88FD1E2DA7515, 0x0000000000000057, 0x0000000000000000,
        // r = 187890480474173934528010879496852688836381698909205914221975569678183725119579945790626212547133441: 327 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xEFD99FA3B6FF3A3E, 0xFFFFFFF69EFEBE6F, 0x8E94B81C47618140, 0x8ECBD901F1F38463, 0x80CA551D434FC0DF, 0x305E97AFFF5E92A5,
        // -1/r mod 2^448 = 137331356162096169206487080391135516107547796559751747388951294820334094977962526562832864700968914451306804942525322336593289930604543: 446 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x54EB932A2B3C09E0, 0x562D43A24FD4A19D, 0xE4CAC6FD97F16A28, 0x53CD2BDB38DDB1EA, 0xF709EEDDEDDE6785, 0x0000000000000044, 0x0000000000000000,
        // (2^448)^2 mod r = 147308335928772476832493637699608891433790024903362338753943243317513178449708389599478290247846368: 327 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xD80319FB10660B9B, 0x6F2FB1CBB85E49C6, 0xCF7C9BDCC00FA39D, 0x082E84F2CF1A6446, 0xDBE989BA6CD06D68, 0x3C9C20649C2AA3E3, 0x000000000029CCA7,
        // -sqrt(-2) mod p = 107936564836911230560382048695791411186270049637372341284340646288649849510976519951562735518601759902184372762839498492827: 406 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xCA032869983547B9, 0xFBED851DB46F5DE3, 0x4888D24113320FD1, 0x98CBBECF39790FC8, 0x395198CFB9A61B52, 0x7A95CCB486AB5FCB, 0x000000000041B7AC,
        // 1/ξ^((p^2 + 7)/16) = 169698943274585671818656956171598449647832279001001382807604787889586316185649830884010776676675722543645160496574955341753: 407 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0xC9915631AACDAAA8, 0xED3DE347B0B6F869, 0x49E755D5EF283AF9, 0x877A657922298A47, 0x6BF10CB4C989F819, 0x162F3A03D6F19C27, 0x000000000059CC03,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x18335633AABEAAA9, 0x8BD1B212D3A0DDEA, 0x5A2B133E6E7F76C8, 0x3D8B1628FC541632, 0xF3008DA46A4F2962, 0x162FD3F3D714C11C, 0x000000000059CC03,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x4EA20001FFF10001, 0x9E93CECB22E9E580, 0x1043BD687F573BCE, 0xB610B0AFDA2A8BEB, 0x870F80EFA0C53148, 0x000099F0002324F5, 0x0000000000000000,
        // ζ = 361528778755398276283748928877511701594440999108092991030596315653277971185399770717562014042504715671406968833
    ];
    const THETA1: &'static [Word] = &[
        0x328AB857C535EC29, 0xD5AACB62A0DAC75B, 0x61FB99F3B35AE042, 0xC14547F8B66DC45E, 0xD12F7EF12A101219, 0xE3AC91F8926B62E1, 0x00000000002D471A,
        // θ_1 = 116918474872949186881208153176392685672367971346930138102914438631037267642014624785138443606769153506039478367769209465897
    ];
    const THETA2: &'static [Word] = &[
        0x6CE17FC09854EEFA, 0x771FCDF23699BF3D, 0xBAFA1C4E23984AD7, 0xBC9FDDED1C5EBED3, 0x59CD4D3611E251EF, 0x45B9B52BA745E219, 0x000000000014853A,
        // θ_2 = 52988853116796847926875087460335877233102985599189967459170906898346006191154873180725547063787264862149296770616032292602
    ];
    const THETA3: &'static [Word] = &[
        0xEE208F0F3B69B28D, 0xD1516C006D407776, 0x817F0968CA121BAA, 0x02F7E069B9C32285, 0xCBA16A5D7E97AD9D, 0x1FFC7AD4E862BE41, 0x0000000000132F1C,
        // θ_3 = 49537940801514122976991767493095229320752063539576772953812468152838926536342415621964142815243785097980005660081529664141
    ];
    const TRIPLES: Word = 44;  // number of precomputed optimal pairing triples
}

pub struct BLS24409Param;

impl BLS24Param for BLS24409Param {
    const UD: Word = 0x291C1A;  // u = 2^41 + 2^28 + 2^26
    const LIMBS: usize = 7;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x0085560006AAAAAB, 0x5754850000015570, 0xAB90074BDF716962, 0xB2DD8492D4EF3D28, 0x814E3F1D3DE8777A, 0x1D1A7F98C35650E6, 0x000000000155DAC2,
        // p = 882753804058086392919026480425309939626818583099164863694069226414448856650826938850981407445603420216169058866447335991979: 409 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x000006003BFFFFFD, 0xE7FD2FE3DFA24000, 0x4F0B3A7D54FA49EF, 0xDA5A990A9ACCF5D5, 0x5BE8D77DCE689899, 0x7D9EE439A96D31D4, 0x5A9014D9DC863C49,
        // -1/p mod 2^448 = 257127200082027420536412362173527080891026381773013451865226446673716156327523879085269903302968342632306169174664538062020633136463869: 447 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x6E2F8E3595D5856F, 0x46051232D0513B2F, 0x66838725296FDBF7, 0xEEAEEE6105F1756D, 0x0B2F41543C875DBB, 0x8547D35807601726, 0x00000000014BB646,
        // (2^448)^2 mod p = 856563306573659894130959726352347475994612478436219312043062892686314517013064029097918535854897690155031757342003630015855: 409 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x05FD8F0000000000, 0xFFFFFFEFFD7FDA7F, 0xAB43C4B9F5E0FFFF, 0x500AF0DACAAEB574, 0x0000000000000100, 0x0000000000000000,
        // r = 547480533734584334469116462463434506683578807628735297207943842244250126734615056824438700355092481: 329 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x05FD8EFFFFFFFFFF, 0xFFFFFFEFFD7FDA7F, 0xFFFFFFFFFFFFFFFF, 0x50FFFFFFFFFFFFFF, 0x1489F44282E7BB4A, 0x8C24FB224F71D22A,
        // -1/r mod 2^448 = 397900071655418533710594025329592670084791344610898911862607330737625018346816955386812147876281064659815358437073847509260099139928063: 448 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x1FAFB988DA4C1DA3, 0x2454FC269D3B35FD, 0xA3F44AB0217C61ED, 0x2579228145B4B5DA, 0x34318D408E80AD90, 0x0000000000000011, 0x0000000000000000,
        // (2^448)^2 mod r = 36747266997017416538211697576066069384746569085535143417500491112459314057877917682256278369082787: 325 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x05B3ED66B8522F6F, 0x39D9A36EE984BA0A, 0x5EBF602BEC103667, 0x3C38CF21FB7A816F, 0x21DF3966CF57F549, 0xAFF4C58D340609D6, 0x0000000000C74DB6,
        // -sqrt(-2) mod p = 514651616332694376604239009232565740578115298075953120194909941572188340958829156874310683152927888487280634773929433640815: 408 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xE4E019EFF2C0FB97, 0xE7E54D61EAC5C378, 0x91B3AB4BBA46238E, 0x38BC816CF73A2E3E, 0x85633E7C1BC3611A, 0x65E0AF0D2FA94707, 0x00000000011A2EE5,
        // 1/ξ^((p^2 + 7)/16) = 728667502385304636965652327741592858563865808772776578576252594662966187067294730463422116593842886442690937788104058141591: 409 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0xFA455A002EAAAAA8, 0x77584525806E542F, 0xC0F18883CCF4446A, 0x031413BA22A58034, 0x770EC532B31318D0, 0x1D167E308B11361B, 0x000000000155DAC2,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xFD6558001AAAAAA9, 0x67566512C037D4CF, 0xB640C7E7D632D6E6, 0x5AF8CC267BCA5EAE, 0xFC2E8227F87DC825, 0x1D187EE4A733C380, 0x000000000155DAC2,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x031FFDFFEC000001, 0xEFFE1FED3FC980A0, 0xF54F3F64093E927B, 0x57E4B86C5924DE79, 0x851FBCF5456AAF55, 0x000200B41C228D65, 0x0000000000000000,
        // ζ = 1204106129626134970437565067837726423944945683777700433836432548341741593118307351390696380061438779458181922817
    ];
    const THETA1: &'static [Word] = &[
        0x2F50069FD1E44F66, 0x0896715F80EE49C5, 0x96FCD47FB5130D81, 0x2DE20152324F8D06, 0x054B02DF997C8EB7, 0xB94E7B4DCE16672C, 0x00000000009C6D98,
        // θ_1 = 403936472188695106671718503125890892458314585919370236147458695469745048999641097874984952670907414954423570793383059541862
    ];
    const THETA2: &'static [Word] = &[
        0xD3CC9B138D9A1DA7, 0xC000A2D7F3D4BDF7, 0x6E2ADF3C30ADC263, 0xC9A9288835E55245, 0x4C4BB9626D23A7AA, 0xAD3927452D97C632, 0x00000000007226A3,
        // θ_2 = 294766238006695278089914241703046947644152354668188755797030888523573549805186949987661092628358239397301276026805325274535
    ];
    const THETA3: &'static [Word] = &[
        0x3F0706BB309B72B3, 0x02072D14919599E8, 0x0CEEDA4F2E9834A3, 0xC0F379FE68382E6F, 0x541C252D7B3AAE08, 0x2BEA3270343E7B89, 0x0000000000F560F4,
        // θ_3 = 633629184684198395107600691660112776698725397012758964964570428915538528828062516794395615537960525435655419492312773522099
    ];
    const TRIPLES: Word = 44;  // number of precomputed optimal pairing triples
}

pub struct BLS24429Param;

impl BLS24Param for BLS24429Param {
    const UD: Word = 0x2BE215ED;  // u = 2^43 - 2^30 + 2^21 - 2^19
    const LIMBS: usize = 7;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x855158BFEAB2AAAB, 0x5EC245C91213A400, 0x8CC4D2E6132A4E35, 0xBEB2E2DA242509D8, 0x4BF2D2D6C54290A0, 0xA4B8236863BAEBED, 0x0000154EAE19E2DE,
        // p = 923097299551427583745295981330000651135919226203011939711022556132721789272372027181732819193853542180682035459488114846186252971: 429 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x5E0017FF4047FFFD, 0x640FDB356B50850F, 0x19661E11B96ECEDF, 0xFD89AC8481EA1920, 0xB7606475C324C45D, 0x701EEBD944759B12, 0x59E9A6B162CDE327,
        // -1/p mod 2^448 = 255281375029417503628723458238865169401808990591348671964996232165894294645749295109994526164243405782981317589787921315514983463256061: 447 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x35C59D76856B5DEA, 0xE298A49F2913E3FA, 0x40DACBDF64DA7A78, 0x551A33875C70424B, 0xBC1E65D141490A2C, 0x35DDC115A48C4C2E, 0x0000016DC1E9052F,
        // (2^448)^2 mod p = 61897255242253694309189329176527468291614914544101532964669722175943209746117363761579062105290163914562281028859921946687266282: 425 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x0F37786835FAF000, 0x4844CD5BA028127C, 0xD5A38137C094F6FA, 0xFA517E2A1DCCDB88, 0x0000000000FFC01E, 0x0000000000000000,
        // r = 35800986031440317801056367659858219402284359145199304959454240328172110063366811863250253429675906826241: 344 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x0F37786835FAEFFF, 0xFFFFF001FF28127C, 0x509FBF0FFFFFFFFF, 0x3134EECBE8A8004A, 0x59D96F5758978767, 0x9FCCC19925254BEE,
        // -1/r mod 2^448 = 453705874637219075762057050422331476396911068727865782236922585385811201738966501708940908329942560375386626555757207828862075265875967: 448 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xB49258F14963F2E6, 0x8AF0033607A5CB40, 0x2A936DD33BAF25E8, 0x59C907BCB6FD7C86, 0xB24437C3675A0E29, 0x0000000000B6E420, 0x0000000000000000,
        // (2^448)^2 mod r = 25601839572572184589890522659179443205029709763979873359439406211835047744552017693705790223549731173094: 344 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x8C3063CBB9DE5F62, 0x814636AA8B00DD97, 0x51948C4410184535, 0x918F4C27BA20B715, 0xB7F9CC9102A338C4, 0xBE6904FB5938BA54, 0x00000C683E175EAD,
        // -sqrt(-2) mod p = 537516567577552287280492577958373242535690936156547882022074870782762835922562829463250519703316876563469966133029442905008136034: 428 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x5CCF74D29309D9C6, 0x1D02BF9FCF348AC3, 0x03D639800558FC3C, 0xEA08507659AF6864, 0x26D59BA3E629108E, 0x09802B87F1473B24, 0x000010EC9AC67CD8,
        // 1/ξ^((p^2 + 7)/16) = 733208096104594514063847524804968830294972201380824568211763178543243641182544718774007764627734514964167020048693728201360923078: 429 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x1D815FBF6AE2AAA8, 0x2FC888EB81FDAD3B, 0x9A98294469FEDA42, 0x41C6400D54E78DC4, 0xC323120C66EA20D2, 0xA935E3DEC9309A97, 0x0000154EAE19E2CE,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xD1695C3FAACAAAA9, 0xC745675A4A08A89D, 0x93AE7E153E94943B, 0x803C9173BC864BCE, 0x878AF271961658B9, 0xA6F703A39675C342, 0x0000154EAE19E2D6,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xB3E7FC803FE80001, 0x977CDE6EC80AFB62, 0xF91654D0D495B9F9, 0x3E765166679EBE09, 0xC467E0652F2C37E7, 0xFDC11FC4CD4528AA, 0x0000000000000007,
        // ζ = 314870418713250550262940753140534902365144453389747392136060529225547972445956644730908324210577000993173334701637633
    ];
    const THETA1: &'static [Word] = &[
        0xA2BDB3A302EF624B, 0x0F201EEF89487E56, 0xEF5441DEC4CF5DBF, 0x3546E67C898BFC25, 0x44ED4AABF4DDB57B, 0xFF86D34E515AADAD, 0x0000021BB087EACE,
        // θ_1 = 91331843620288209781903789180028318575061976177003050811008283608639933911338139463424642955988853766189438763247542015974400587
    ];
    const THETA2: &'static [Word] = &[
        0x235A7E42D9FFCD66, 0xB182FC65BC37F075, 0xB9760443433CC4DB, 0x1380BF9753845F64, 0x170F9B9C8C73E6E7, 0xDFADAF2F5B41AF7D, 0x000004186E83C487,
        // θ_2 = 177426440168487933858342499799158302692783491901270890200029151782741484049943275268200616895669584515545544303267179436529667430
    ];
    const THETA3: &'static [Word] = &[
        0x819C473B8FD3DC5A, 0xC17FF58EFCC19D65, 0xC1F1DC275214E16E, 0x513D4BF7CC37ADE2, 0xA35D2375507CCD1E, 0xEAA9BD268D6B0548, 0x0000104929DA15F4,
        // θ_3 = 705548903921625096622046906738285646816457094250968251502735209696429608580298154837314603232129075454775467553570703852294102106
    ];
    const TRIPLES: Word = 46;  // number of precomputed optimal pairing triples
}

pub struct BLS24449Param;

impl BLS24Param for BLS24449Param {
    const UD: Word = 0x2DE314;  // u = 2^45 - 2^29 + 2^20
    const LIMBS: usize = 8;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x01540AFFF55AAAAB, 0x4C0A4802AEAA52AC, 0x6CC1CFB2171A0C0E, 0xB541A2D088DD5681, 0x6F77E160E234FF7D, 0xD6AF15C001E5F5C8, 0x554806E66E0546B2, 0x0000000000000001,
        // p = 968970722277278457749686956644274575382255409791603745176124611175458095136251459639039072858004732143057982305961041249453025259072171: 449 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0xD0005FFFA02FFFFD, 0x8D763C44805DC11F, 0x3EDC7EBD9ADBA347, 0xD72608245478AB36, 0xF6B37F6CB40D2994, 0xED1AAD6AE35A5257, 0xBE1C22CE932B4EC1, 0x39527D48CE1A3EB2,
        // -1/p mod 2^512 = 3002208484499537036590900436325890089741226570308497149471926026775048686797436332177844247735248731567118989486788941639521939594233025821952097297367037: 510 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x965AD97476766F3D, 0x945C7EEBBC8464F3, 0xD6E5B234E7D8C8AC, 0x4849EBF54638D306, 0xCDACB03B6C9BDED0, 0x9E1A86A8F3C8B5A8, 0xBA6691EAAD3B478F, 0x0000000000000000,
        // (2^512)^2 mod p = 529231331400416427932875396945306517084300373586773864693830273077726599025702805085043238600943005397353478339412900698044404747104061: 448 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xA02017E807FF0000, 0x505FF040DFA06027, 0x4F57B159B5EE437E, 0xCF541B7B31689452, 0x000000FFF8041BE3, 0x0000000000000000, 0x0000000000000000,
        // r = 2348256470633561349883402781216757984322993895880075391187468916374181726768075002202081748079325348133601281: 360 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xA02017E807FEFFFF, 0xFFF0003FDFA06027, 0xE800FFFFFFFFFFFF, 0x1EEECBF9BCD93907, 0x20C0D17D8B488283, 0x2808C2D82B266D7A, 0x4338512A0AE78C5B,
        // -1/r mod 2^512 = 3520596462616651943497141917417896085321554806572728194967238331927643871841619319903442052476784160499699637085536538505640651826304448413769372201385983: 511 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xE028CA82EC042E60, 0x82B4C29E408CF83D, 0x7F0CB5D705502BA3, 0xAA1B0846AB312874, 0x94D1F58A74DE66AC, 0x00000068DF150040, 0x0000000000000000, 0x0000000000000000,
        // (2^512)^2 mod r = 962089773294879143534752718621471244074477429945059970527372884959582827128076068749378078075334080812297824: 359 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xDEC940278383C9A4, 0x3704E588A82AEBC8, 0x46E36CF5B3EE8E96, 0x8372F8287F97890D, 0xC2D8E4B3DC906051, 0x60D4A850934D6786, 0x550C8C88C8C0ECF8, 0x0000000000000001,
        // -sqrt(-2) mod p = 968311070980190289756939203282904926483420929965091312576767325363194073842437943368138318551018566748152157758805292296248446758930852: 449 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xA4E5C30BD6358CD1, 0xA548F8F51AB3CA2C, 0xB56D226691B8AD8D, 0x3D32AC7B048A92F6, 0xDCA805DC2300AD3B, 0x0CA194313B91C01F, 0xE2C9B0B924BA80A4, 0x0000000000000000,
        // 1/ξ^((p^2 + 7)/16) = 643899193899837718299798744987340093586580029324633401695409206126891768921368342271020745702273860582691325883605909405356160414223569: 448 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x316446FFB57AAAA8, 0x7F110D9C9E2D711C, 0xC1BD29B0422D6DC8, 0x2933030483AB9B78, 0x4351A98AED277022, 0xADB82E60427AED20, 0x554806E66DC548F1, 0x0000000000000001,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x195C28FFD56AAAA9, 0x658DAACFA66BE1E4, 0x173F7CB12CA3BCEB, 0xEF3A52EA864478FD, 0x5964C575E7AE37CF, 0x4233A21022307174, 0x554806E66DE547D2, 0x0000000000000001,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xE7F7E2001FF00001, 0xE67C9D33083E70C7, 0x55825300EA764F22, 0xC6074FE60298DD84, 0x16131BEAFA86C7AD, 0x947B73AFDFB58454, 0x00000000001FFEE0, 0x0000000000000000,
        // ζ = 82620671174503950258785927657721868733894205776715395065252441343287535234486334816030760601646207311371253131680987217921
    ];
    const THETA1: &'static [Word] = &[
        0xE7670469AB2E0AA6, 0x91F7020AB0EE4CDE, 0x765F3CE3BDFFC2F1, 0xC65B4405369075E1, 0xB3DD130969B7C37F, 0x8BA25B25FD048542, 0xFF0B2B82DFA65248, 0x0000000000000000,
        // θ_1 = 724123393030606835254232170475607166911675471601154858289924201294911542637262411380759482887291330715002045198371090210031036361738918
    ];
    const THETA2: &'static [Word] = &[
        0x8951A6AA0BEE84D7, 0xD595B8BC51D17BB1, 0x99D4494933119067, 0xB09FDADF9218A526, 0x1D0740B166C56C26, 0x7B770EC24E882449, 0x00C321A7F2BF6AE6, 0x0000000000000001,
        // θ_2 = 729002864736766767373924387810119871712290403172994543174584072562143589420208019942348749246222684802132015986992597187546212276798679
    ];
    const THETA3: &'static [Word] = &[
        0xF23DAFA37BFFA1DF, 0xA90101EE0F0DC99B, 0x95C1FCB5E539AADA, 0xECF8528641D4B790, 0x60F008CF4BF80E33, 0x68102372F608F24E, 0x45AF2C68B9C510C8, 0x0000000000000001,
        // θ_3 = 924687266922464803540410288477559370994490511210938889924348317562582554826060353714277712351800339008623586057927873158705255760765407
    ];
    const TRIPLES: Word = 47;  // number of precomputed optimal pairing triples
}

pub struct BLS24454Param;

impl BLS24Param for BLS24454Param {
    const UD: Word = 0x2D2CD62018;  // u = 2^45 + 2^44 - 2^42 + 2^32 + 2^24
    const LIMBS: usize = 8;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x5600640055AAAAAB, 0x4F18A955028572C8, 0xB4FE45FC13686432, 0x73C76583F715F081, 0xF6F7B5CB0D9C0496, 0xB6A5C7EA85C28696, 0x3CA305553F1BF709, 0x0000000000000020,
        // p = 23431000015147886606534655073874821580216050779542810428419557178488523681880129640362724377076393670787671887130114615357426477071772331: 454 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x0000840302FFFFFD, 0x87AA60E36AF6FD00, 0xC107A5B247ADC455, 0x7037C7E4A92EA76C, 0x0FE69F04B8522F34, 0x951F695170E44A44, 0xEB1785B5895505BD, 0x16BCE4E6D62AD41C,
        // -1/p mod 2^512 = 1190878764455399800830740721424514758841849082989048186221765636911640620890401682125006910397558964981953561124778285306633867863482200981034608577478653: 509 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x0AED5E3A7BCDA4A5, 0x7FE76E021EEF79B4, 0xDDD926E19384F463, 0x57A4BBE1E7A8EC12, 0x96C206F96938C6A5, 0x2CF9477B378210F2, 0x83EEDC53045E528F, 0x000000000000000A,
        // (2^512)^2 mod p = 7642973373054093063051149770620962820533703724720205888362743894193461867547648778458782742390080551454674755088502415904792256747250853: 452 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xEB49FBFF00000000, 0xFFC6C9C79F44608C, 0x4FA3C8EFD97C0800, 0x9F26C93C46BD18D0, 0x00000CC93096E8C6, 0x0000000000000000, 0x0000000000000000,
        // r = 30028225129395762083420287445701740497922273567973605631384108484383045012057510245721016088302567108294737921: 364 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xEB49FBFEFFFFFFFF, 0xFFC6C9C79F44608C, 0xFFFFFFFFFFFFFFFF, 0x8E520C00FFFFFFFF, 0xE39F56D76AB50E96, 0x09F2B95EA0E5F2B5, 0x862E50183F6D1525,
        // -1/r mod 2^512 = 7027624470432744115187127224241805026536608440353058079647780463740769490408201262085897132696805102129837573397985861105769744103594312928436668659138559: 512 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xD7C019751EF9DF15, 0xCF552A7643287D2F, 0x70380176AFE7E524, 0xFCA84802F3AE505A, 0x3E9230D4875D4E18, 0x00000594516BBFB7, 0x0000000000000000, 0x0000000000000000,
        // (2^512)^2 mod r = 13103381886846744032699001672164733228032145942911797878431470188988612452460963750135742875532147952847544085: 363 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x1718957AFFD0BD91, 0x4F57BA0F1E5A755B, 0x062AA39536419574, 0xB20B5C121BCF0397, 0x1EE5852571D05A96, 0x8204E8E74A2B9AAD, 0x5C3A6EBB0CB0AC1C, 0x0000000000000015,
        // -sqrt(-2) mod p = 15525468933301011448628137306026934405186124118762578362406922264105508645512590674707546680548147648475328559924678825911635985342446993: 453 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xA28E0CAB21D1522B, 0x0072E4E62C0435D8, 0xF6DF180CC4D54462, 0xC32139B1B2D8012C, 0xA91B52AC6CC6A4B9, 0x482B50BE11180DAD, 0xF46B2DBEA10A41BB, 0x0000000000000001,
        // 1/ξ^((p^2 + 7)/16) = 1420795567812538414022364634519327802468868751647531649814558893427220034278420086226584095127479503114941400952045923319867569146516011: 449 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x4DFCBC0257AAAAA8, 0xA4357D7B00501564, 0xE84F56E9608F0547, 0xA8CB1CFDC80EE218, 0x583E9E5586323DF3, 0xE312CE8D889362E0, 0x3CA305553AB6B4A9, 0x0000000000000020,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x51FE900156AAAAA9, 0xF9A71368016AC416, 0x4EA6CE72B9FBB4BC, 0x0E494140DF92694D, 0xA79B2A1049E72145, 0xCCDC4B3C072AF4BB, 0x3CA305553CE955D9, 0x0000000000000020,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x0401D3FEFF000001, 0x557195ED011AAEB2, 0x66577789596CAF75, 0x657E244317838734, 0x4F5C8BBAC3B4E351, 0xE9C97CAE7E9791DB, 0x000000000232A12F, 0x0000000000000000,
        // ζ = 1452850312449646082200579359749360603308055042830115420224591729634662003109141671472370686362516653572857263806256072622081
    ];
    const THETA1: &'static [Word] = &[
        0x04D86DE5477E02F8, 0x19C7F94424716CD2, 0xF38F012DA889E217, 0x57249D49AB981168, 0x5323861C86D6718F, 0x0E2D2811E85064E4, 0xB6B8BA8997752774, 0x0000000000000003,
        // θ_1 = 2699301844691577063649823780243091764402434538541946889024478247870234689563966593918400227216516886471653370052847300043048192109839096
    ];
    const THETA2: &'static [Word] = &[
        0xB1B40ED8633FB126, 0x3570386DEBFE873F, 0x6A05739AFC4B1ABC, 0x3BC4C3815DDA68A3, 0xB7CB175BB8DFBE07, 0x0E283056FFA6ABBD, 0x15B5FF7E8E712A1F, 0x0000000000000017,
        // θ_2 = 16778932629532871963931572409707786228298652910610747506388761473426781474132393563616735301595753773159846853474549420591483039097270566
    ];
    const THETA3: &'static [Word] = &[
        0xD685E6FDA75224AD, 0x4EE44D694F09FA54, 0x78B856F699CE50B3, 0xBF1E60F36FF02D9A, 0xD41BD9FCF517B926, 0x89728065534C2697, 0x889B492FC011776A, 0x0000000000000019,
        // θ_3 = 18558823405539731451385222139665213644589993077316091949650235816915803601004281306934102488038502915406171763873393390503125678768137389
    ];
    const TRIPLES: Word = 50;  // number of precomputed optimal pairing triples
}

pub struct BLS24459Param;

impl BLS24Param for BLS24459Param {
    const UD: Word = 0x2EDB221A;  // u = 2^46 - 2^37 + 2^34 + 2^26
    const LIMBS: usize = 8;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x60056AA156AAAAAB, 0xDE0955000550AC5A, 0xF35A6A3B291E45E0, 0x6AD06D3429F87981, 0x2D8F52315BF4C053, 0x2D8D3EFD1C460880, 0x3102DE156263DFDF, 0x000000000000053E,
        // p = 975556721281951085845753317096746933040443911079864151514982671367686304011884983279763710894249178153055097274138078033224831906817419947: 459 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x0000BFAC0BFFFFFD, 0xB6DEF8ADCFBF4000, 0x3EC617E7FAD9643F, 0x13694968B36C0B42, 0x9CC5DFAE6761AB3A, 0x79AC801B7EB12E3E, 0x0C5FF561CAE19840, 0xABEAE787971E86C8,
        // -1/p mod 2^512 = 9004055071845448983813565683991086661812199289029097299960438062214600467930974632004633417238956843641489196230221135658311791619988553754847663601221629: 512 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x6440AAC4DCD848E7, 0x3351D57CA4D25A5A, 0xAD200F8AC20ACA38, 0xF31441DC669C2462, 0x112D03168A3E79E4, 0x46340A8406688C12, 0x5F5018364A56D479, 0x0000000000000190,
        // (2^512)^2 mod p = 291006103329327663116270467538901646166237468580565897169463018097576602279053472731955585166836232149790109208986646278238901583495055591: 457 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x9A1BFF0000000000, 0xFF01BE9AA98BE99A, 0xA6A27DDBC800FFFF, 0xB9618DE298B9E6F9, 0x0000FC85D5CC2C60, 0x0000000000000000, 0x0000000000000000,
        // r = 593060533753805855688066203794477930095288928943704499848781578240163419507978344013720493318367118350090240001: 368 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x9A1BFEFFFFFFFFFF, 0xFF01BE9AA98BE99A, 0xFFFFFFFFFFFFFFFF, 0x00FFFFFFFFFFFFFF, 0xAA15FF606E8961AC, 0xD3C77CF8C80BD380, 0x60FC21DC51B4EC0A,
        // -1/r mod 2^512 = 5079510936115631097094467635827729298858025855560941875205679312526031932516306522004544358831296384825544433742548264308833882051824875095477319068811263: 511 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xA2E239148F239516, 0x4A9CBB1C33BBF692, 0x3FC6383D7AB2395E, 0x810E9FAB5D4D9B13, 0x5EF13844F5BEC001, 0x0000C17C5115F2F5, 0x0000000000000000, 0x0000000000000000,
        // (2^512)^2 mod r = 454409199570584502837940873794564201970285253113497461626228698992284266349057817454682042505790022770810393878: 368 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x5374789AAE0D73EA, 0x0E5519E57E5B87AB, 0x6E060A8EDD7152F6, 0x7AF9F35FF4A06A80, 0x737EF60F89C82E8A, 0x2F086AC8623798A7, 0x5069294757B063E0, 0x0000000000000285,
        // -sqrt(-2) mod p = 469039280581595195737431149039765667287728095208645647001224471388509701620333388778259297128758957097590498288906425764784709522659570666: 458 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x429139B10DD29C8C, 0xC3EBBD141E10A998, 0x322635F88C7828E7, 0x82662905009412D6, 0xAC760C856BA71D32, 0x2BC09FF178A84334, 0x4525569BA265BE9B, 0x00000000000002B5,
        // 1/ξ^((p^2 + 7)/16) = 503895555793991061439250354389980503586972751770465879032865302471863930015559022570365373848869861470980783024379097770773306548224695436: 458 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0xDFC5EA695EAAAAA8, 0xEA355EC2B089981D, 0x97758CD703B19DB3, 0x37B7AF7894C9B738, 0x47B26BCAA5BEC61D, 0xAD5E2134DFA9C36A, 0x3102DE14E4582A5B, 0x000000000000053E,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x1FE5AA855AAAAAA9, 0x641F59E15AED223C, 0x4567FB891667F1CA, 0x51440E565F61185D, 0x3AA0DEFE00D9C338, 0x6D75B018FDF7E5F5, 0x3102DE15235E051D, 0x000000000000053E,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x401FC01BFC000001, 0x79E9FB1EAA638A1E, 0xADF26EB212B65416, 0x198C5EDDCA976124, 0xF2EE73335B1AFD1B, 0xC0178EE41E4E228A, 0x000000003F05DAC1, 0x0000000000000000,
        // ζ = 41661643864490769015976049367255692317162256430913772453281538947293161352955482086701781563293092627879860499853243014184961
    ];
    const THETA1: &'static [Word] = &[
        0x2873E8090491121B, 0xF5EE8CEDFB7AE0E8, 0x2863447024A398AD, 0xA595C7D62C7A847A, 0xB374AF456031094D, 0x2EB56CAD868C3FCD, 0x71B20E931A2D5B6D, 0x0000000000000469,
        // θ_1 = 820923725657624159564485226733432495261842624416058593733133727602963427635090951790875704732065380069945838512586050270995064753147154971
    ];
    const THETA2: &'static [Word] = &[
        0xE14BBEE5A9205285, 0xEF455504C9038F47, 0x01FA2B12733356AD, 0x02B79F0DF7CE2A48, 0x33DA1DF3C0A7CE4B, 0x165C07B3C6D59506, 0x67856425F40EB662, 0x0000000000000217,
        // θ_2 = 389152635915124524149983664883197271422465334268128381282461179458977727186960725878017654726563276631904507906005240644622121915000050309
    ];
    const THETA3: &'static [Word] = &[
        0xB2CFC0706FEBF154, 0x54887FFCEF5A7EED, 0xC76DB7E8551DD3F9, 0x3C80449A07CD0FA1, 0x80746879F02A1C7A, 0x294C35FE7A2A4981, 0xEDE7203EF1815375, 0x000000000000010F,
        // θ_3 = 197648751290620403126027565932778822263917453915869897915102685322104496407314632935662622342508580743119694329907939549383250256094556500
    ];
    const TRIPLES: Word = 49;  // number of precomputed optimal pairing triples
}

pub struct BLS24469Param;

impl BLS24Param for BLS24469Param {
    const UD: Word = 0x2FDB2315;  // u = 2^47 - 2^37 + 2^35 + 2^21
    const LIMBS: usize = 8;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0xFE002BF8000AAAAB, 0x504301656A9D561F, 0x4D9B87D0EB0E25A4, 0x65FFDFD6AF9672B5, 0x989FF1A5EFC86A77, 0x079E69AA4A6268D9, 0x397676354D40C258, 0x0000000000152D77,
        // p = 1008775994405257257452153821264578832626513455727217990313868690302373949214345525187679967047563210769536432875495213557091755780729943534251: 469 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x80017FB8005FFFFD, 0x5B98D4FD66035FFE, 0xE41F0433CB7FC910, 0x9A2A246FD6C0F01A, 0x3DDAC8438F0DD042, 0x2ED1E418BD2E8604, 0x6BDA3E575F6E03A9, 0xEE4CFDE05EDE8198,
        // -1/p mod 2^512 = 12480822930094662982371844929975557380922447332052862833127712510091212480295238299666478102078730289205546436840212766165802137715555726043748237620281341: 512 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x3D8206EB7E9BE3E0, 0x026764A63ABAA514, 0xA9D84AA77BE01FFD, 0xD6C0591918B71F75, 0x82D55EC381C26449, 0x57E9E107659D8F87, 0xBDFFE8B114D8B5B2, 0x00000000000CD074,
        // (2^512)^2 mod p = 610396792758159388814979642236655355111663256023453406202815294238321093156654126991633049724783328094452314448493778651122394117978130736096: 468 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x3FC9002FFFF00000, 0xEA0BFD9074F93A1D, 0xE2D5B7A1A7B80FDF, 0xCEC821081A8635EC, 0x00FE80FD9EF79DF5, 0x0000000000000000, 0x0000000000000000,
        // r = 153014573070217306731780409132153963697492051062275399844124575406787163006519223952556465751047887864842944512001: 376 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x3FC9002FFFEFFFFF, 0xF00BFC9074F93A1D, 0x0FFFFFFFFFFFFFFF, 0x26FC1A4254FF7000, 0x34957D6192F87E27, 0x078952F1607326A7, 0x7A124B0804EECE8B,
        // -1/r mod 2^512 = 6393400993653459228593157506433430920835454226842791787172217187102202127184961709820949275331801975329567183366624244976114548122462967567247923277201407: 511 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x3A7CCE2A1ADF6484, 0x8FA7C7E401B729B2, 0xFD08A6C70F9E150F, 0x9F73D4BD7C68CE9C, 0xD55640A56995D19E, 0x00B077A313C37BC3, 0x0000000000000000, 0x0000000000000000,
        // (2^512)^2 mod r = 106096907246152508521155562626816296533507578562479136849416439134157423784386533031760049921515436060015658493060: 376 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x183742DC2B7E1C13, 0x9B536D3CD919868A, 0x7603B4730E25ADF3, 0x22DF0FC4CEC95DD4, 0xA8C033F8168D1089, 0x1FCAD4E8090704B1, 0xFA0B185237ACFE70, 0x0000000000108779,
        // -sqrt(-2) mod p = 787353845890779059732692672991262708704190989744455354128259558549724295891866118743239385809997603692379380805871739142296030398252870147091: 469 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xE00A3EE708638AEA, 0x97080DB9B3FDDDF8, 0x65668262A9F451F2, 0x47B41C11401339A2, 0x9F6070271BAE5F74, 0xDD4A9772AE25A0C0, 0x8A54C669BA2C5C9B, 0x000000000008A707,
        // 1/ξ^((p^2 + 7)/16) = 412152110847363672412096326751663150401938937820368285643218780397682875610890956086122067361329251455704793156799262949856312679293553707754: 468 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x16011BC8004AAAA8, 0x8B21F967E2F8CCA2, 0x42EDC504B03560EE, 0xF7E110EFD93A0F57, 0xE69F1F9E12B3B50E, 0xFEA581032B3A71A7, 0x39767536FBFB134D, 0x0000000000152D77,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x0A00A3E0002AAAA9, 0x6DB27D66A6CB1161, 0x4844A66ACDA1C349, 0x2EF0786344684106, 0xBF9F88A2013E0FC3, 0x0321F556BACE6D40, 0x397675B6249DEAD3, 0x0000000000152D77,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xF3FF8817FFE00001, 0xE29083FEC3D244BE, 0x0556E1661D6C625A, 0x370F67736B2E31AF, 0xD9006903EE8A5AB4, 0x047C74538F93FB98, 0x0000007F28A2D785, 0x0000000000000000,
        // ζ = 21519114394468000827626965574834528162684483924123657263974353194089047413167123214061645245208991921461522139583892681392128001
    ];
    const THETA1: &'static [Word] = &[
        0xE333E3027BCCFD43, 0xF04BB92D84DB82C7, 0xBD77A4D7AAABA084, 0xE913AFF608925524, 0xBBFF1C17577A7660, 0x095861D103D515DD, 0x47CFFC5CE341AB7F, 0x0000000000120C39,
        // θ_1 = 859688329697066085615074501665380449910522945460575789460635325468348689746992704864953451452215947388022127494348060692049478507353254722883
    ];
    const THETA2: &'static [Word] = &[
        0x27E7D46799F7661C, 0x057F7E239CFFEB8D, 0x2457F94A51EE4947, 0x5B5BC7D7B69D9320, 0xE4B0F6B7ABB0471F, 0x0A5C3D7825DFA0E7, 0x51F0CAE6DF3534E5, 0x000000000000CE3F,
        // θ_2 = 38376590450952072977348745462540320754829277275260882760428798957700432806113117100506224976564459842935779346335415657644414582138152117788
    ];
    const THETA3: &'static [Word] = &[
        0x08BDB1DEE67C7998, 0x45712698950DB58E, 0xAABBEF94EB75E56A, 0x55393D43B39B0208, 0xC8E84361D01CCA26, 0xE9503DFFBB7D6081, 0x576FD86EDC9E4B58, 0x000000000009688E,
        // θ_3 = 448161737265467828063411094430032429111663791888564829436930371078359341446093949502204366181693087152661273095736908880077468884321963899288
    ];
    const TRIPLES: Word = 50;  // number of precomputed optimal pairing triples
}

pub struct BLS24470Param;

impl BLS24Param for BLS24470Param {
    const UD: Word = 0x2F2BDC12;  // u = 2^47 + 2^43 - 2^36 + 2^18
    const LIMBS: usize = 8;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x6A802D555556AAAB, 0x7BE4FA7D75650001, 0x07B5BC26D3AA2C39, 0xE1BCB7BF989BE8B3, 0xF8037E94BB95129D, 0xB01C425E2DD2F5B3, 0x897291A44189B4AC, 0x000000000026EFA0,
        // p = 1854683485092724706111127563301783028419512758858541243221795790258109486899907535844302837376039730296765322225682223674784612633211731094187: 470 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0xFF4197D0000BFFFD, 0x7F08F9640BB388FF, 0xF43D0BFE3D170382, 0x56D04F4B20FCC010, 0x3E99D557CA2ABA01, 0x1D3408B60B465C11, 0xDD2CAE827AF53714, 0xE966E65AB6DF79AA,
        // -1/p mod 2^512 = 12224252143104180083517236704629637561730434028906847595412285207542001706879791644260498671699056809210585588718769101450467299638381349624817649546166269: 512 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0xD70D6A623236A36D, 0x84E7B5D669215CE3, 0x6055A95E3D6DC3F0, 0xFB4713A9A40669A9, 0x56406F4500505CEA, 0x25E27B865DD5A416, 0xD8F5C407CE196709, 0x000000000020E0B5,
        // (2^512)^2 mod p = 1566103297944967914558524035712273954474041027513126527600546199097648671657544798370532856904493540241975711099673368565056011559024633226093: 470 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xEE5F9F780FFFFF00, 0x2D6696AC3CB8A665, 0x7252C13E2CE57052, 0xDB9418D8FB1C7172, 0x019E42E9884A95F0, 0x0000000000000000, 0x0000000000000000,
        // r = 249065083328000484534286357725044247464458081564621198850418405669093597349570349160088121556750642230794408427521: 377 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xEE5F9F780FFFFEFF, 0xEBA586CC3CB7A665, 0x2197D00000FFFFFF, 0x5A5886443B72C1E4, 0x2D600BBEA6F3E950, 0x1A7959B6010C5121, 0x7B5C220DC9BABA2D,
        // -1/r mod 2^512 = 6460881927077078090677650224581178130380256447649750369038083036531741968105652854743460128461696156414058626737612431648099940814740334547233068327895039: 511 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x250ADB443DF6D891, 0xE48D5F214C16F68B, 0x96C1F2DA69B5E58F, 0x87DB856C8D4F3E9F, 0x17FD0CDCCCF3646B, 0x014873EDE868CA53, 0x0000000000000000, 0x0000000000000000,
        // (2^512)^2 mod r = 197474688552661635325267329050580316484578106475585619674640483361566381892520723989723855602930949437024156178577: 377 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x6D2ED5C95AFB5CED, 0x1D636091E35F35E5, 0x629FAD5F9EAD232C, 0x487DE257A82DA872, 0x39B3DDC15576E6A3, 0xFDE7CABD8DD0ED4B, 0x4D8ECD8AACE4EF57, 0x000000000025F068,
        // -sqrt(-2) mod p = 1807194580162454982087138420968133850543767771438600144972606102229329028611992013112772136082216989366046048491036648818300618753359398788333: 470 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xB36AA34590B06F2C, 0xF223E06197C9FDF5, 0xFC0B2ADD1668BE9C, 0xD7898EFBC447BB3C, 0xA548E67C8AA3EC8F, 0x2DC8F7ECF0B1C81D, 0xE8786B5FDFD08C0D, 0x0000000000170424,
        // 1/ξ^((p^2 + 7)/16) = 1096355469695929014473670051086830692094690468737267264416127448557947663508135315295800199070030459013682357708684025878011094158947021516588: 469 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x6D813CF5555EAAA8, 0x4264A34C6D0EEFF0, 0x91ECCAE202626A6E, 0x152E8F924B2F4AAD, 0x597F9A2DCF436370, 0x6C886650C82814A8, 0x89728FEC4E39E41C, 0x000000000026EFA0,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xEC00B525555AAAA9, 0xDF24CEE4F139F7F8, 0x4CD143846B064B53, 0xFB75A3A8F1E599B0, 0x28C18C61456C3B06, 0x8E5254577AFD852E, 0x897290C847E1CC64, 0x000000000026EFA0,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x7E7F782FFFFC0001, 0x9CC02B98842B0808, 0xBAE478A268A3E0E5, 0xE6471416A6B64F02, 0xCF41F2337628D796, 0x21C9EE06B2D57085, 0x000000DBF9A7E848, 0x0000000000000000,
        // ζ = 37226478349221006899397971683023041157113896343273644410220399376215699171721166868448417201657813242884412098912400231276216321
    ];
    const THETA1: &'static [Word] = &[
        0x4FFC91AECFBDF793, 0x706ED28ACCA66AB1, 0x732C199E625B3279, 0x003460B217134E59, 0xCB991564A069CBC6, 0xF557D3B7D87D5DAE, 0xF36383EEE2CE17C9, 0x00000000001730AE,
        // θ_1 = 1104642915829858657559455026241028796423496063184771927754562674025320203756812108637971594564650449278716677823981510357763496089999646783379
    ];
    const THETA2: &'static [Word] = &[
        0x1BDAEFE0886B0C39, 0x5C355AFCDFBBB042, 0x41FE9B24D6D07539, 0x94E8EC5989517A39, 0xCD4298C6681C30DA, 0x61AA32D6055493D0, 0x781D2BA894693A38, 0x00000000000F3F55,
        // θ_2 = 726296116797731186539677965893929643058144201963798766342638272218399053999137665840565892164477910552689007534377925888779119603285918157881
    ];
    const THETA3: &'static [Word] = &[
        0x18F8620FB036275B, 0x90D1DC65B802CCDC, 0x94446675796F2F29, 0x3DC332341F75D61E, 0xF91CC050E9E97072, 0x41F0D082B1206809, 0xA68C59F6750CAA8D, 0x0000000000125C87,
        // θ_3 = 874630949166331883609752957303718932607518990574538957020669510678020898550230484303692587621624182785879404136651899275044191684014244243291
    ];
    const TRIPLES: Word = 51;  // number of precomputed optimal pairing triples
}

pub struct BLS24471Param;

impl BLS24Param for BLS24471Param {
    const UD: Word = 0x2F2CDA19;  // u = 2^47 + 2^44 - 2^38 + 2^25
    const LIMBS: usize = 8;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x0001854000AAAAAB, 0xE4AD55501AE80615, 0x1009E1E07A137794, 0x208677341B3522E1, 0x64DFD4FEC1F28DBF, 0x7B272075F943CA8E, 0x5FA7FE654CC42D0A, 0x000000000044153D,
        // p = 3243071072942176326442743477436936733963180846380406865573691056440059408390860823566729539052235282411819328309637445191260922225597684034219: 471 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x0001AF4005FFFFFD, 0x695F0ECBC8FFE800, 0x2D046F2238DA8807, 0x8FE2741A292C0842, 0x8242A7300DFB4D87, 0x0246384EBA72FE98, 0x71C0EBC9EAC9D12E, 0xF135E6BA389CBCEF,
        // -1/p mod 2^512 = 12633221680326400555836717189867298408815464291211863633207665618301943830411262671217938437304046914545397048161686248144454825136468693615551818990878717: 512 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x934438AF040506FD, 0x2DD4FDF797ACC2EC, 0xAD626DEA6F515239, 0xA415E1EE05A1E05D, 0x57EF1F6210B4F8CF, 0x7B16FDBB0F9934D7, 0xDADB0D58BBFC6457, 0x000000000013CC0F,
        // (2^512)^2 mod p = 943017899569817203854440361772324848500584410753697914989824396447744653653445160153842949106886809841734231764245214144889074959299205465853: 469 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x6E07FFF000000000, 0xE68C703E64208EBE, 0xDF1908723F0000FF, 0x95C3F0F03F7B89EB, 0x0287C63E491D8D6E, 0x0000000000000000, 0x0000000000000000,
        // r = 389459387909200262723740019149882105060597932341631301561407688697543176124508331004698404555695101926794959257601: 378 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x6E07FFEFFFFFFFFF, 0xE68C703E64208EBE, 0xFFFFFFFFFFFFFFFF, 0xE8000FFFFFFFFFFF, 0x59E52233B45DD0B5, 0x4D1D855994CDA585, 0x17A166B2A009B198,
        // -1/r mod 2^512 = 1237628309418677539253546870912467660779240181174813923219919593196794006108035325963948872303870430460408427617913592012385015341264699770302509359300607: 509 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x457381443A6345CB, 0xD5F445933FBE4B0E, 0xBDB226B20E1AC648, 0x1AB3F75A09507AB6, 0xFB1E325A69D9CD1F, 0x022A3F5004B84896, 0x0000000000000000, 0x0000000000000000,
        // (2^512)^2 mod r = 333228395530728413069216876243943828249159601273409256343582261099255293758241669164426557459615620436005795087819: 378 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x219A266BA649A02C, 0x32CB1B4A427B78EF, 0xE8D5B643712253FC, 0x13F0FDA49135D2BA, 0x3F88476298E41BE6, 0x106CF2B6C42F5A05, 0x1286BA2C2EDC715A, 0x000000000032C8EE,
        // -sqrt(-2) mod p = 2419092314672226392682500607221275373946667706739854628906888218731091399999523344694341042223266857383639780788534685172686425672863439233068: 470 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x13850420C75FEF70, 0xDE7653814E8A2E85, 0x0BABFB5013DAFB4F, 0x839A0450098BE8B5, 0x71400A9AF03F7EE4, 0x51C00DEEEA9D8CDE, 0xA68FFDCCBCCF1DED, 0x00000000002AF246,
        // 1/ξ^((p^2 + 7)/16) = 2045712774953059352239884901433575698299468996820562936492996133218574762005408355260371609279502999170558269487032224955441909951374857072496: 470 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0xFFF2A4C004AAAAA8, 0x982E96E9CC07DD18, 0x921F5CC75D06A4E1, 0x4A6853D890D743E8, 0x19515FE0264A1E7D, 0xE0DB9E846888180A, 0x5FA7FB8DD1971AD4, 0x000000000044153D,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xFFFA150002AAAAA9, 0x3E6DF61CF377F196, 0xD1149F53EB8D0E3B, 0x3577658656063364, 0x3F189A6F741E561E, 0xAE015F7D30E5F14C, 0x5FA7FCF98F2DA3EF, 0x000000000044153D,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x0007703FFE000001, 0xA63F5F332770147E, 0x3EF5428C8E866959, 0xEB0F11ADC52EEF7C, 0x25C73A8F4DD437A0, 0xCD25C0F8C85DD942, 0x0000016BBD96891A, 0x0000000000000000,
        // ζ = 61555937366286480392319684908967188946926173047739551301008586341332560132133866638590665143388356838377317065948205579036000257
    ];
    const THETA1: &'static [Word] = &[
        0x3FEE21D57232C8BE, 0x90F5CD0AE84C7ADE, 0x840355A55B5EF05D, 0xBAEB42B3F7BB6F11, 0x15C41BAE3FB7AF87, 0x51138BCF1B3551DD, 0x2857608C629413BA, 0x00000000003475A5,
        // θ_1 = 2498863653439951724728359009232669639849541346249814394155197866214953009633888492472286043937549321584895435499158463151110780660982733785278
    ];
    const THETA2: &'static [Word] = &[
        0x50E076A0619CB203, 0x6D1D15EA53D947AE, 0x0071675CD745B135, 0x6F93B3526C149D2D, 0xEEDFDD01CEACEC2A, 0x324A0E02402625B3, 0x4093FAEF019E51FD, 0x000000000029040F,
        // θ_2 = 1953753576838337798055634771814904781086973353500519785871937299590652098756734003441614016226319389518743783204746324626493354401046669865475
    ];
    const THETA3: &'static [Word] = &[
        0xB8F393C24EB3CC6F, 0x892F2A21DEC3164C, 0x69AA2892A3F1D1FD, 0x3A5788B71E1DDF11, 0x7F92345826EC1FF4, 0x9D39EA2248E8FC7A, 0x97D69D686CD9A4B4, 0x00000000000B81C5,
        // θ_3 = 548121869351133600638236208096321506165519131004363350156248058099993575065031351267322912511663418643531294716288969179356391314266139118703
    ];
    const TRIPLES: Word = 51;  // number of precomputed optimal pairing triples
}

pub struct BLS24472Param;

impl BLS24Param for BLS24472Param {
    const UD: Word = 0x2F2D2A241E;  // u = 2^47 + 2^45 + 2^42 + 2^36 + 2^30
    const LIMBS: usize = 8;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x05558C056AAAAAAB, 0x55000000230C4658, 0xAF7742C553B711CA, 0xF20CE616A408618A, 0x9B77BD4CE8AC088B, 0x898FAF68C067AF40, 0xF214C7DA03EF8821, 0x0000000000FF50E8,
        // p = 12161751143014221671436297123506603567878074074542107602981002769177185565641796115751621772238790060192044890362701135703987818360075050461867: 472 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x0001EC30BFFFFFFD, 0x34A95176F4000000, 0xF08E1053C2FF35D9, 0x8DFDC451B6391CF4, 0x78BD506F3E02E36D, 0x66DC043352FC3E63, 0x9BCF9E9430417FDC, 0x417D546990557385,
        // -1/p mod 2^512 = 3429967055960653884970055388660531933324542733178447398096076428781622215903770533026379329581727301928610217914437007827092156310699750243931371102797821: 511 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x2F704C65BD41C19B, 0x955E444BBC2DC45F, 0x61CA34E07BD52B79, 0x33F3F8F7A304C167, 0xDA70B9811539A4DF, 0x56CB1306F7E89AC0, 0x848D3C27CF3C18E9, 0x0000000000EAE21D,
        // (2^512)^2 mod p = 11188453452590693245976166114165766041835516684863626907626548973417195425532495412745753696113694293974213870305370157697802817061053125476763: 472 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xFF00000000000000, 0xD4D0C5975AA5355E, 0x4200FFFFFFFFFFFF, 0x65D81EAB74E12ED6, 0x0748E655A74CCD1C, 0x0000000000000000, 0x0000000000000000,
        // r = 1121227894397265149165419529382599969408653681451179080970791153497791296572246088845427133278392550971835364147201: 379 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xFEFFFFFFFFFFFFFF, 0xD4D0C5975AA5355E, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0x22E300FFFFFFFFFF, 0x12A481B5764E3F5D, 0xDB3F526C5548641D,
        // -1/r mod 2^512 = 11482915535521050195514929346303150850713057913315767470779005777898494191025179449732095051416070616291888252612004095880151295850215166472643386181419007: 512 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x781AF89A140B4B64, 0x657A58A4FEBD2393, 0x7B2D695DBFFF6D40, 0x4C8E49C6AF3B34B9, 0xF309CA0AC2AADE00, 0x000597A338F966B3, 0x0000000000000000, 0x0000000000000000,
        // (2^512)^2 mod r = 3362261838770456680189464686725524281414920153752299677471046206035455140394803040598533173004026881366534343524: 371 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xF933BF042D63EB1B, 0x6FA25C230978179C, 0xFA48899B6595D203, 0x61A08FBA273922BC, 0x3EB5EAD2A1A8E583, 0xD12D0D5C8BBF29E6, 0x63EAA8D5DA15DB1C, 0x0000000000C87063,
        // -sqrt(-2) mod p = 9547732687708783734718473470135826329382448907658748398436768930583970465597154817157067905744175883575458375245206310879731271997070069984027: 472 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x27110771A04FD81A, 0x11BBA3DC6C933FD7, 0x9C671E1FA329023F, 0xA10C98379F93965D, 0x863D6D8D976CA6B7, 0xFD5AB52006AFC121, 0x5DA36ED085C39D9A, 0x0000000000E174D4,
        // 1/ξ^((p^2 + 7)/16) = 10739411651398995741617438935220447429367711192370172126126125312354417419892290422930845973134291060746410841838245528708092116075408954218522: 472 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0xC556D425EAAAAAA8, 0x641E3E0A8E78FA37, 0x7B083A9B72381F53, 0xDFB7D7D102C83343, 0xA5895232DBAE987C, 0x9138A8D2D6F89076, 0xF214BE83B0108BE7, 0x0000000000FF50E8,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xE5563015AAAAAAA9, 0xDC8F1F0558C2A047, 0x153FBEB062F7988E, 0x68E25EF3D3684A67, 0xA08087BFE22D5084, 0x8D642C1DCBB01FDB, 0xF214C32EDA000A04, 0x0000000000FF50E8,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x1FFF5BEFC0000001, 0x7870E0FACA49A610, 0x9A378414F0BF793B, 0x892A8722D0A01723, 0xFAF7358D067EB807, 0xFC2B834AF4B78F64, 0x000004AB29EF7E1C, 0x0000000000000000,
        // ζ = 202257963696847294910432304797413130141154871241762014767715263623884574277327289362774679407857641586620215306079878568256471041
    ];
    const THETA1: &'static [Word] = &[
        0xD4810C6CA6D2738C, 0xEE28E83403FA71B0, 0xAA586AA288D4C44E, 0x2A658E355CA5A3E3, 0x7398E2E1B2D553F4, 0x559AF94146BF268E, 0x9F4FE19C25612ACB, 0x0000000000C2AA1B,
        // θ_1 = 9272668009522584702847919023591259663407709046289871043037808933456335072149829873300928065114453948505520343101088957473455794063388915692428
    ];
    const THETA2: &'static [Word] = &[
        0xAAC399182534D757, 0xF42845DD9247BD49, 0x2A877B8DD3D1AD97, 0x7F712CB308FB1E40, 0xF97DF12E12552313, 0xD7C365215F544604, 0x8BAFD6BBC9A186D3, 0x000000000021368A,
        // θ_2 = 1582073905838918000229466273229955285222552444810556957671076916424242943469645593153416773877029023378231289702864765818403751115183644530519
    ];
    const THETA3: &'static [Word] = &[
        0xFC64DDCA15C25E61, 0x1656F8E66AED6DD8, 0x3549A2478B5F442D, 0x059306E1B95E7AB2, 0x44B7571B852EE2C6, 0x9A5DDB91D7C7D000, 0x2588C4115C5DB81E, 0x0000000000624132,
        // θ_3 = 4680273103149045133913369170852169821767088382778161939161615108159978068800018180193291896410639783942400932536653403781376947876835952320097
    ];
    const TRIPLES: Word = 52;  // number of precomputed optimal pairing triples
}

pub struct BLS24477Param;

impl BLS24Param for BLS24477Param {
    const UD: Word = 0x30D320E4EE;  // u = 2^48 - 2^45 + 2^32 - 2^28 - 2^18
    const LIMBS: usize = 8;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x4AFDCAB04FFEAAAB, 0x78D88DA41EFB3653, 0xB1D9A29A4931815A, 0x15EEA83AA1171C6E, 0xE5CF608890492554, 0x5608709FF8421C23, 0x9266B9FC33C0346C, 0x000000001673E9C8,
        // p = 273796688105491985194758262629236279187966920855756418208091772197634092799171274411488282464383286349216943456303734043382903072815353784347307: 477 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x00C2A002CFF3FFFD, 0x44F58C9866D1A379, 0xA0AE48B35A8322A4, 0x47F16F8AF68E5543, 0x271EDE44FFF960C8, 0x2099CB9956EC7117, 0x8C16B844789D38C8, 0x9142AD18E404D4F7,
        // -1/p mod 2^512 = 7607907280278919791846035591609915781998802027724888620972364991643179355042580465227380268348308506861388325890521971791531072864617731909299435740594173: 512 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0xC8C1D470C5697AFB, 0x2DC2B9DEA8DA90F1, 0xDF5023E285B7D643, 0xE2D163084CDE5F70, 0x46AB7914D4E3A082, 0x1467895630199468, 0x61DBE520D97CB71F, 0x00000000068ADB45,
        // (2^512)^2 mod p = 79780287727674765030874073108499873837686190866194719886436679717860030146192865352869890178186189651519701043845749180601003617556455077018363: 475 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xA3AEAF8BA0EFFF00, 0x565B46A4CE889192, 0xC71482154BBD7328, 0xF4073217DA911AA3, 0x57F9B2F85E2B8239, 0x0000000000000000, 0x0000000000000000,
        // r = 13540651360807298940207979976791090829549086411195484639776171445329573246529211734340251022207134305242411171840001: 383 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xA3AEAF8BA0EFFEFF, 0x69ED7CE6AE879192, 0x68001D3000FFFFFF, 0x12F483B6C79EFE1E, 0x5136A4ECBC8A8D9D, 0x1CC46851EB8A0866, 0x80A17824B633D991,
        // -1/r mod 2^512 = 6736938472683504928053874971760255395352911906967839807284734062249845741596592243373358206855110359863643391186498977072470108533091231498732058699628543: 512 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xF4AC12F98F48A437, 0x946E5857AA9AC64D, 0x92E1F456FED270B7, 0xF169F60F56EA4C92, 0x96BB934180724A39, 0x57B734D7B6AEDB08, 0x0000000000000000, 0x0000000000000000,
        // (2^512)^2 mod r = 13500674169393452508263167761876468166643498502724095178421349050928264448809029858415179556395555488058838539084855: 383 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xF054DEA2B3CE5FEB, 0x899099290CC19519, 0xC1E7AE3907E6B63E, 0xDC813D1156DBC896, 0x9B5D02A3472237F2, 0x318AF1833526607B, 0x9BD3D4A38BBA3260, 0x000000000809DBCD,
        // -sqrt(-2) mod p = 98024248051698557991377127105598158727921208843124108052152670159570529300846313235804280532350409648606238033108969008425880007048558950637547: 476 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x9974D1F030CBB3D0, 0xAF43E67ADBECC46F, 0xC66C8DEEE31DEAC7, 0xD756CFB41E2E22EF, 0xD6A93C90D981D92F, 0xA624AEDD7EAD6D0C, 0x1EA910E63B15D1DE, 0x000000000F80A7B7,
        // 1/ξ^((p^2 + 7)/16) = 189043326165092693862353102239022273408885362048524024325246370787724232863711512251155038297744674894520629058843087613261142432896296092939216: 476 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0xC61D8A722FF6AAA8, 0x50AC6BB5B332771F, 0x2997DA06DFD578D9, 0xF9632BBF7E3AA53D, 0x3694610EFA785661, 0x292E9494FDDC68F9, 0x92662006959C1FDE, 0x000000001673E9C8,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x888DAA913FFAAAA9, 0xE4C27CACE916D6B9, 0xEDB8BE5094837D19, 0x07A8E9FD0FA8E0D5, 0x8E31E0CBC560BDDB, 0x3F9B829A7B0F428E, 0x92666D0164AE2A25, 0x000000001673E9C8,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xC270201F10040001, 0x941610F735E45F99, 0xC420E449B4AE0440, 0x0E45BE3D916E3B98, 0x579D7FBCCAE86779, 0x166CEE057D32D995, 0x00004CFACF120A47, 0x0000000000000000,
        // ζ = 3334989728940751073010757280928477797966051097609304003227886057975255380158560074521686011038787721811504271962532844677298913281
    ];
    const THETA1: &'static [Word] = &[
        0x96B83B33F842CD01, 0xB491C745EBBB745A, 0xBE6724889DFFB871, 0xC9E8475731A89967, 0x45C2EEFC2A4C4138, 0xD8E12B070E1CA64C, 0xB775C7388C7BBEDD, 0x000000000399061D,
        // θ_1 = 43872146550723260819812179071235377255444225882221424708078225161987407151674747846935352111558973977871904449189073702200077743211705650040065
    ];
    const THETA2: &'static [Word] = &[
        0x06F1197589A3B84A, 0xCCA2CC20AA22F15C, 0xFB7983E10A8C635A, 0xAF4FAB4ECA50D91A, 0x7AD34299C1696D6A, 0x6AE8860A88979803, 0x5FA7801753417488, 0x000000000BA5DCAD,
        // θ_2 = 142038321527872010773255515796181841702499838967218838422043996016614903898334045976710929386807874021039686295517277823704313796720250717452362
    ];
    const THETA3: &'static [Word] = &[
        0xB92167D0208ECDDF, 0xAD63DD2E7C258C1D, 0x9CCCE36708DB6E0E, 0x8D56499452BF6763, 0xAE28843558179602, 0x669FCCB96893D0E7, 0xEFF78D083083B333, 0x000000000ABC30CD,
        // θ_3 = 130907595119680805314863249061495953937777994924474848566779411764063076189962401430217300476441827187177080178313861643003240861577868460608991
    ];
    const TRIPLES: Word = 52;  // number of precomputed optimal pairing triples
}

pub struct BLS24481Param;

impl BLS24Param for BLS24481Param {
    const UD: Word = 0x302DDCE914;  // u = 2^48 + 2^45 - 2^36 - 2^23 + 2^20
    const LIMBS: usize = 8;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x5A00704FFFDAAAAB, 0x6330BF41BE290001, 0xA293ADBF8937C1A2, 0x83F4DBBE7CBCB3EB, 0x877FE83995380436, 0x62C0FCA30A9F4238, 0x26EF1CB0D4B9CBCA, 0x000000011480FF3C,
        // p = 3371779812699552560072791379998260416526946678082392481843250454337110427996153454909153064505613558530343376124700615896410933881016971513473707: 481 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x50035FCFFEAFFFFD, 0xA9EA2501FFFB9040, 0xAB2391374EDEDFF3, 0xD00CD573A8D6000A, 0xF77738B59F51C298, 0x66CD82A275ADBD32, 0xB8FEA1949BC3429B, 0x2BC6197444B9B036,
        // -1/p mod 2^512 = 2292621289156873777101201018571820926832430117430450741779278679000944286547614838499814143524939571170928455273616027825821636018931814233245767494008829: 510 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x497099A50424700B, 0x9822F55B9F320525, 0x6CF1863FAE802849, 0x2A3D6FC574C49500, 0xFF18FB03478025F1, 0x3D076B155C4FA6B2, 0x0CA833F386905383, 0x0000000035DB027D,
        // (2^512)^2 mod p = 656731836066971872479912603424516793624081761375418352433483267792569671148566034904461653908623573237788625903031700030086517594152187248013323: 478 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x573A72A3F69F0000, 0xFE5B11A6BDB373F5, 0x867F2D067D9842B3, 0x7987A6B388623D1A, 0x8FB383E0E1CDD06D, 0x0000000000000002, 0x0000000000000000,
        // r = 100921656129014210252357343490491563740575060866270299589153438443121290311494274388894462300762891969698925117440001: 386 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x573A72A3F69EFFFF, 0x664B1AE5BDB373F5, 0x4820FFFFFFFFFFFE, 0x79BB9CCEA4512815, 0xF66F8C95C5C120F0, 0xD32C6E4B07B54E62, 0x71E34CB184566ACB,
        // -1/r mod 2^512 = 5964792739228807368366919273182859586552471790502687821879117700564652550114560286555279013959540127614425439798005466464158178969110593657834166370172927: 511 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xDA2ED59E431FD53C, 0xAB26885F3B038350, 0xF8C1E4C40FF43D23, 0x85B7ED42FBB1216D, 0xA8667C8DFEFE6F00, 0x21EB3A682752C6D0, 0x0000000000000002, 0x0000000000000000,
        // (2^512)^2 mod r = 84024602746797021327226595883165059251527533585310747584885676177914395540836867304734856763422322224829093824681276: 386 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x074A49C731D8F880, 0x068D5C33724F3702, 0x02CF23ECC9699746, 0x4F0FE177CDE989E1, 0x4A72BAFE97874397, 0x0943A31F14D01A69, 0x75EA7307282183B2, 0x000000004A02E394,
        // -sqrt(-2) mod p = 902518054489853053126465804026794132730254077611815416351081756390454403291470988266429220536863554292980605097922840021817799995625338104772736: 479 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x791E8F80B89F83C4, 0xF81D80AE28C20D2B, 0x638D5721706C94DE, 0x0E564AED2F0B66B0, 0x12B02322B7909818, 0xC21688D920C95F7E, 0x0E4910C34D0B9D49, 0x0000000085506807,
        // 1/ξ^((p^2 + 7)/16) = 1625676011224816345225263966515207133057824555017606388237778729901145535420645254011661045311030845437740867160572432075298363517974638804042692: 480 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x6201EC2FFEFAAAA8, 0xC804DADA04143F9B, 0xA6D92828AE4B1AD3, 0xCA4EB0ACEF3BC40F, 0x7669E981B937C054, 0x4A7F643CAF0B2748, 0x26E959AEE4AE08FA, 0x000000011480FF3C,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x5E012E3FFF6AAAA9, 0x159ACD0DE11E9FCE, 0xA4B66AF41BC16E3B, 0xA721C635B5FC3BFD, 0x7EF4E8DDA737E245, 0x56A0306FDCD534C0, 0x26EC3B2FDCB3EA62, 0x000000011480FF3C,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xFBFF421000700001, 0x4D95F233DD0A6032, 0xFDDD42CB6D765367, 0xDCD31588C6C077ED, 0x088AFF5BEE0021F0, 0x0C20CC332DCA0D78, 0x0002E180F805E168, 0x0000000000000000,
        // ζ = 31950849885410492087754835747405989355111940505660829920372893557173827198656974327918298246752255969070026279304800313243289518081
    ];
    const THETA1: &'static [Word] = &[
        0x5034EA0B7A3C9B56, 0x69FF6009C7CBC74F, 0x8E01AE608D36C97F, 0xEAEA32D2500E40C8, 0x7E3804D8120C706C, 0x41AD9B0188C3BE7C, 0x64C6C478696F8C6C, 0x00000000D900EF1B,
        // θ_1 = 2646214160415068991029426097590899683849158980253680478059698670925395947610569028562004717284381235104632381361717911887870689214128780121774934
    ];
    const THETA2: &'static [Word] = &[
        0x0D70AB281E8A8B95, 0xFC780D51AF84D433, 0x95F9915560B5C3C5, 0x409299A813A33813, 0xAE8140E0CEEF3595, 0x25B533310C4390F0, 0xFD1D91BBFF5B0137, 0x00000000608181EA,
        // θ_2 = 1176824679529410095606598184420757799042914736634619711959092661606941682031319920480362957489664100572201297311944124019449144664700860444085141
    ];
    const THETA3: &'static [Word] = &[
        0xA748D26E34B7262E, 0xE95C19DFF592E294, 0x6977C0AD7626AEE6, 0xBD036F21A0FDD36C, 0xA69E5FF7E343B4CB, 0xE283E85ACCF8F776, 0x552567B7E5DDF54B, 0x00000000288949AB,
        // θ_3 = 494312790741178150046651559216749609638659992626387049493706655169660313963288332262056437366806501250770844775922399207973056048405239903495726
    ];
    const TRIPLES: Word = 53;  // number of precomputed optimal pairing triples
}

pub struct BLS24485Param;

impl BLS24Param for BLS24485Param {
    const UD: Word = 0x302FDD21E7;  // u = 2^48 + 2^47 - 2^35 + 2^33 - 2^25
    const LIMBS: usize = 8;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x0801D55354AAAAAB, 0x64351550BFF9FE0C, 0x9D87A19DFF52D848, 0x04B94BFC99D65217, 0xB9EC618FCC5DBA26, 0x3AC8AE2C4F8CA354, 0x69781120ACAE38AD, 0x0000001335BE57E7,
        // p = 59968588796413455065634401902957535131189125663697703924879898003795383915146372583700229874693836420841747579295744117163095131319119864765524651: 485 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x00047FEDF9FFFFFD, 0x2698BE5488D81800, 0xFC242C03EACEC9F8, 0x4959060AE562ABF2, 0x916272F8FBF2530B, 0x916091B4F132C181, 0xC5FD5F602EC1C961, 0x7920D938DA09E000,
        // -1/p mod 2^512 = 6344004594954943302985686559911327595483086500066006450473811212523599185716556235918761634363762128802069037737180766219328012410135828180349067403984893: 511 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x144D1774E3E8A2BF, 0x9F87C128EB1CCED1, 0xED8AA0B2E30C7B0A, 0x1E1E27B35BC8A1F2, 0x453545D9B6D607E7, 0x30E451FA4BAD59F2, 0xB1D4719BB0309761, 0x00000001923B0B52,
        // (2^512)^2 mod p = 4904933289357092318670471352254622832729437542881185904273799202301426529211004508885769000636078075095034163291223637019809438857391453514539711: 481 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x6C9F3FF000000000, 0xF0511918C0DF0C99, 0x568FADE2FC1800FA, 0xD8E1FEA10511B87B, 0x9DCAFB96434D85A4, 0x0000000000000019, 0x0000000000000000,
        // r = 1009336705219234236514829650143504757218565986111069421483799701747988609551581438082552130819441360377178849122713601: 389 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x6C9F3FEFFFFFFFFF, 0xF0511918C0DF0C99, 0xFFFFFFFFFFFFFFFA, 0x22400FFFFFFFFFFF, 0xCCB30F5611C8D2D5, 0xF1FA57120BAE1F2F, 0x19FA8C56DD736FB8,
        // -1/r mod 2^512 = 1360615126045698317841231308215866877456655187233448095166424387791724938644769786651487730866355693821167416918982927843690023082574840991436251886256127: 509 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x95740D14D7C02198, 0x78A931252494A8CF, 0xE032B3A2D1B92690, 0x4312590886CB77CF, 0xC7776D76C1B32593, 0x312204F3E8D98302, 0x0000000000000015, 0x0000000000000000,
        // (2^512)^2 mod r = 835004373719248524186110393044937120731614010797892981040776053559519659308082799578345623949100592250343422148223384: 389 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xB5D12121C348ABD0, 0x5110F196CEC3E056, 0x9241449AD5E183A2, 0x06A01A088D883A7C, 0x2D0C8E16665F3B6D, 0x17261587D7A7A5AA, 0xD7E6E163734EAE9A, 0x00000002AB23B1D6,
        // -sqrt(-2) mod p = 8330427861865864052102586528429198026267375306819832182363351366746687439904191739774711852116857820706760346000790321365226269715652316051844048: 482 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xA53121E9E3DE50D0, 0xE94C05A65EA46218, 0x3868B32B393A6C26, 0x69954D6FD6CCB8DE, 0x5C0C22413BAE320F, 0xB5E30978FCC3B541, 0x1EA52367C7D6AD47, 0x0000000E0D985B60,
        // 1/ξ^((p^2 + 7)/16) = 43870263383893658259309884249743716271598100400760189693089917878910626871242413346687722429143038793988391412989577610747117075377747627492659408: 484 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0xA7F4D54750AAAAA8, 0xF0BEC22C5F21F57B, 0x15B84730C953E2E6, 0x80494E8F80444A5E, 0xEE95455BBEA63313, 0xDD4B82DCA4ED8C7A, 0x692B38F385E66657, 0x0000001335BE57E7,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xD7FB554D52AAAAA9, 0xAA79EBBE8F8DF9C3, 0xD99FF46764535D97, 0xC2814D460D0D4E3A, 0xD440D375C581F69C, 0x8C0A18847A3D17E7, 0x6951A50A194A4F82, 0x0000001335BE57E7,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x3006800602000001, 0xB9BB2992306C0448, 0xC3E7AD369AFF7AB0, 0x4237FEB68CC903DC, 0xE5AB8E1A06DBC389, 0xAEBE95A7D54F8B6C, 0x00266C169363E92A, 0x0000000000000000,
        // ζ = 426128494115631043154213280268257912878826354458072352729705542291904272532463745880429257273181467172833307657733839281652655718401
    ];
    const THETA1: &'static [Word] = &[
        0x0B473BE84FF66280, 0x954A78E92FF06A59, 0x28641EDDC26892B4, 0x5470C2D3CE9F51A5, 0x75BC9BF35985330B, 0xE6083DBE147E7430, 0xCB999B3E37F209EA, 0x0000000C63E9690A,
        // θ_1 = 38679339592169836496386534949029766688345346996874420437968387691795086073189420784126891946294302520076254841038747293240364322709782610266448512
    ];
    const THETA2: &'static [Word] = &[
        0x57A329FBE6589E13, 0xF7731532F76B83DE, 0xBE44250DA7DB0764, 0x3398962D11FB1DB0, 0x5AB60CA7A60824D1, 0x60537B3226E201F9, 0x09D1E6942E63860F, 0x000000082766C7C8,
        // θ_2 = 25454463135176550595299160218142367455977466320233199578093185995373641561909047669460693854457962811118872911257391984605343943467163412524998163
    ];
    const THETA3: &'static [Word] = &[
        0x13FA4C8DDFB37E33, 0x4A347DF616C6341D, 0x0C451D8C2713B14E, 0xB80F036F45313A7A, 0x68280C54EC2AC7DD, 0x07833CE337F3D3C3, 0xB4AB489FCA0E8A37, 0x0000000AD50FA33A,
        // θ_3 = 33815622735400448325095632092546457010691163571518290969283352712535496823731783877362133043791565150953000029447286645155293788333705937896570419
    ];
    const TRIPLES: Word = 53;  // number of precomputed optimal pairing triples
}

pub struct BLS24489Param;

impl BLS24Param for BLS24489Param {
    const UD: Word = 0x3124DE13;  // u = 2^49 + 2^36 - 2^34 + 2^19
    const LIMBS: usize = 8;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x0040AAC40002AAAB, 0x8AAB88018ABAA590, 0x5DF5917A82DE7EFB, 0x10E1477648383576, 0x141CAA410C5D7691, 0x3CE425CC0E2B3BBF, 0xEFF084A5C01A5238, 0x00000155A55DFB3C,
        // p = 1066532796872659932296173695471873806871966123746885540116426150807627593829843489127654728837992471118583255324581424946952811570168120537656765099: 489 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0xFA0600240017FFFD, 0x7498DE45D2FFE4FF, 0x57F35A49F61E7D0A, 0x02302E616868C00C, 0x9DDF535B51465136, 0xCE3EC134ED146315, 0x65C58278C40D8846, 0xB91ADA9751A3EDB7,
        // -1/p mod 2^512 = 9694730150033087641424602564958787627662952135303505548721594641371667280116419290288475772066669663864933282627910364123597204658767273408341655768530941: 512 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0xA4F0B536C4BA388B, 0xE0C310505CAD64E4, 0x331D26FB0824FE33, 0xECE2B2095A9C81CC, 0xA7DC0A2066071A9C, 0x48B4DFD59CAB9DB5, 0x3ACBAC80566EB122, 0x000000A8089F009F,
        // (2^512)^2 mod p = 524558885033337394537889243673504161778087866768426467758101602307697940716010913670369040415382509841575473660313345262783501348602259639092525195: 488 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xDFFF17FF9FFFF000, 0x3F7FFD7FB8FF3CFE, 0xDD42A541C2A0D1F0, 0x2DD4911551F54452, 0x3004103481C2AA95, 0x0000000000000100, 0x0000000000000000,
        // r = 10094303905404794523437882625095710666733679872225288229607677041587957412282776455942553865953630098266201246442455041: 393 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xDFFF17FF9FFFEFFF, 0xFE7FF17FB7FF3CFE, 0x0120000FFFFFFFEF, 0x642DB41531800978, 0xDD3F3EF9EBF66578, 0x0BF60D97A62DCA5F, 0x02C7716E5DE10B4F,
        // -1/r mod 2^512 = 145551945617581373000647912802719711003597094317297955669396873485135283432779468225027920736707893488911382082083631578425158283948945083025661758537727: 506 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x176F2F9D1B908D88, 0x65398A772318D0A3, 0x0592BBC1B305534F, 0x32A0F0749EC4EAE4, 0x5F68A8C55AEAE2E8, 0x00D9513CA29568E4, 0x0000000000000091, 0x0000000000000000,
        // (2^512)^2 mod r = 5713421555502972943633001503199218384382307704541750400605239490661246702625399520221215829094896513112487965181906312: 392 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x1E5047E70E9E9E5D, 0xBB7F19C842042697, 0x27BD2104902F7485, 0xDDF5E7356B0482C0, 0x4ACDC0D6FEBFFB72, 0x8ECDF36AB5C3D9FF, 0xC9E074A513CDD463, 0x000000E61FE1AD18,
        // -sqrt(-2) mod p = 718390940692536736022502617403181249700490484468353411001214918424396202190947483070347656141911572140849560938163027878628305569456805662299168349: 488 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x68FEA312C2C6E38E, 0x9F74B34E91D7DB67, 0xBF0DD9ABC5BE5CD9, 0x7CEAEE85B4E66B64, 0x5A68E09B8DB8956B, 0xC9B27AA694C9F9A3, 0x977818382D357701, 0x000000F6655F9A86,
        // 1/ξ^((p^2 + 7)/16) = 769186324727942620629874408617533834091323575468856700249936847102867890465004320139492343684060030790290518030388584958912560270393345738501710734: 488 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x0544A9DC0012AAA8, 0x59B534EEC5FAC6D0, 0x7797C9D2126AC114, 0x34F682E5BB49D080, 0x14F332E755B5DF24, 0x851FB58DDB24D414, 0xEBEFAC90EEE3CC01, 0x00000155A55DFB3C,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x02C2AA50000AAAA9, 0xF2305E78285AB630, 0x6AC6ADA64AA4A007, 0xA2EBE52E01C102FB, 0x9487EE943109AADA, 0xE101EDACF4A807E9, 0xEDF0189B577F0F1C, 0x00000155A55DFB3C,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xFD7E0073FFF80001, 0x987B2989625FEF5F, 0xF32EE3D43839DEF3, 0x6DF562484677327A, 0x7F94BBACDB53CBB6, 0x5BE2381F198333D5, 0x02006C0A689B431B, 0x0000000000000000,
        // ζ = 5683108175122284197024508096604503486556167008497885406313918329634198529121750732245843695862327287760142185070683962404123362983937
    ];
    const THETA1: &'static [Word] = &[
        0xB31F985FA013A544, 0x4C06083DF158D145, 0xBE676BE2896CF18E, 0xCFAAB92454CE6520, 0x14C5F3155A8ED71C, 0xA997D274F6CED3CE, 0x6A53CB0059E4D187, 0x000001156EFF0F90,
        // θ_1 = 866077874359943150986320928710399615489835791974721187381435550881337535356657662016304255173119889656640527939197094170598480929503835802148513092
    ];
    const THETA2: &'static [Word] = &[
        0xDC28E0F5E73CFF40, 0x570F48A6F50694CD, 0x8471ED5D001A0832, 0x27C0DE3184CFF6FA, 0x1AAF4276AAFFE1E5, 0x3C413A266B28B711, 0x7294B1A5100F41C6, 0x0000000873A0C49A,
        // θ_2 = 26383994422655183173017227727127912796392512132898288177384983734674362653737824082696937316832131973075880192175132242192077640308627297829453632
    ];
    const THETA3: &'static [Word] = &[
        0x72E2ACDCD376A01C, 0xA30EF6A17A30F32F, 0xC114A94E37A684F9, 0xBEA0327FE357AA17, 0x8B2CB49110E5B556, 0x55DA1AFEA6183D18, 0x2D6F1CBF7A190F3E, 0x00000048CDFEB78B,
        // θ_3 = 227277866543228705192355461882615503472457742403666757519834278233027053833113811378731141737775750349471616431741400441870768963714646340613349404
    ];
    const TRIPLES: Word = 53;  // number of precomputed optimal pairing triples
}

pub struct BLS24507Param;

impl BLS24Param for BLS24507Param {
    const UD: Word = 0x33D02EF0;  // u = 2^51 - 2^48 + 2^46 - 2^16
    const LIMBS: usize = 8;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x80026AAAFFFFAAAB, 0x60182AC58554AAA5, 0x096BB0E2494CEA50, 0x4EA2437F71497A26, 0x266BFB7F5B5DF0C3, 0xC4F070D750CE6EC0, 0x1F1435D6147782F6, 0x07F8B2DBAA50C166,
        // p = 417500240084514267541508146332806856079693129399530688178027146538988972954595376511262397469889869989480968748582276953957430839744487548926322437761707: 507 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x0018BFFFFFFCFFFD, 0x83830FEAFFB2C000, 0x93B54A75B4CC07A6, 0x3D55CD4BD5CE1120, 0xAE32178738511D92, 0x8DAB10866A8331E7, 0x240F6D9587F89E7E, 0xB2D77907DE1DD956,
        // -1/p mod 2^512 = 9366699361425714042472073734466684529247358966470421672481296232304830775265886960929599477630562198801047257459432699232702116156611475444562114805301245: 512 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0xB8CFEAABCC45E88E, 0x84A56BE4E71EDF6C, 0xD9266A89038144DF, 0x503CFF81D703205B, 0x96A951E7DF712DA0, 0x4B21A5D6A3E6EB3A, 0x041587DB41D778C6, 0x02FDC8ED2230FE7C,
        // (2^512)^2 mod p = 156669562237157905218560951923474204674833949918281436522094069506076552848740662059767446002646501431856556426960517246856726810408987424453129182505102: 506 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xA000001CFFFFFFFF, 0xEF0005BA4FFFFEC5, 0x25FFACA39FFFFAF4, 0x0BAEE2588A02F375, 0x7E207A78D59E0B7F, 0x0000000000747902, 0x0000000000000000,
        // r = 300761600618735120932723513019450290126824412144375976557574775042970189988516287390724430490030057824796944316697149440001: 407 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xA000001CFFFFFFFE, 0x2F0005F44FFFFEC4, 0x1FFFFFA8FFFFF536, 0x9EFEB80ED0000D8E, 0x5ECAAD487214F6CD, 0x82E45462986C3545, 0xE7FB121F37AB9B15,
        // -1/r mod 2^512 = 12149817484415898446295976956913712753703056939980869424048918027222593410783613367107874565048667615288125060240701554962486253543062758900559942978109439: 512 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xE1424A923FCA01EC, 0xC8628AE22B112CBF, 0x15AFA2896E68B011, 0x57EBA5C727CD14B9, 0x30F57BB360927F58, 0x7DF469415D895CD3, 0x00000000006BAC13, 0x0000000000000000,
        // (2^512)^2 mod r = 278036454116463990903390135508711877690797120100391611440213969961802092525586470699125991592257497841127608520541599302124: 407 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x9CCE323184840D57, 0x706062915E47C70D, 0x9CCBDE1173B60EC6, 0x416FDC10DF9892F9, 0x993FE7255B9C0AD7, 0x3321C73FC1D24AA5, 0x3E918B4E81B0AC75, 0x06F3B29EA855E77C,
        // -sqrt(-2) mod p = 364102865342403480742192916900296084662927849069025144220959067375688708464971195611743320484178722608673172843911827159317702165566527023655157349223767: 507 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x22AA8F1C082B93E3, 0xA32903274DFD6101, 0x02131693443BD715, 0x3756F7C9323FCCBD, 0x51D1950E592F3D77, 0x56B90F92A83C58EF, 0xE6737968BBEEAF82, 0x066790A64DBA602D,
        // 1/ξ^((p^2 + 7)/16) = 335433549693020504392258216949454478783145350330122116006200203144253841074932923450735810757703286495273445857094105146252138861900852664200310110786531: 507 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x800CEAA6FFFDAAA8, 0x5CCFE9FB45B1AADF, 0xD2171829D9FEF8FA, 0x14EE52E6DB07CC77, 0x7E23880E2A9053D7, 0x07F2D10011F5CFC9, 0x447011E8195F3BD3, 0x07F8B2DBAA50BACD,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x8007AAA8FFFEAAA9, 0x5E740A6065832AC2, 0xEDC1648611A5F1A5, 0x31C84B332628A34E, 0xD247C1C6C2F7224D, 0xE671A0EBB1621F44, 0xB1C223DF16EB5F64, 0x07F8B2DBAA50BE19,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xFFFAC00200010001, 0x01A420651FD17FE2, 0x1BAA4C5C37A6F8AB, 0x1CD9F84C4B20D6D7, 0x542439B89866CE76, 0xDE7ECFEB9F6C4F7B, 0x6D5211F6FD8C2391, 0x000000000000034C,
        // ζ = 613762267820019533347522459349074648283449609000756214458797212212569588037301359540327041945699100939648940680171938813731514774972334081
    ];
    const THETA1: &'static [Word] = &[
        0xE533A80CF254F0FA, 0xD8AB79C82068B6CD, 0xC4D0B69771865607, 0xC220D76DD6A6F4F5, 0x751B1919F7D915A5, 0x9EF1700D56AAD6F7, 0xD691C58746BDBF58, 0x00C64CE6BC11149A,
        // θ_1 = 40569665808023981604229809787161506635921946697083374542392409073042330168159640539036741249670237215926353844778004948664169602627428852626398140231930
    ];
    const THETA2: &'static [Word] = &[
        0xA934A6614FECEB07, 0x8F90CCE35165820B, 0x0E4B10E26CFB2683, 0x85E8385A51CA119A, 0x6ABAD83863A3E827, 0x5D17ABFE32A585BB, 0x58411B0B0456585D, 0x06AFE5D66D423FD6,
        // θ_2 = 350231886905434892537620721829389963735388542537194541657100697884296510541623645522466117727364059083150716951469047107973396900028078433664341753260807
    ];
    const THETA3: &'static [Word] = &[
        0x2D8316D91D4F92A2, 0xD4E0D668B9D5B148, 0xF74C5ACC43604CF3, 0x09C0BBFBFF2B6301, 0x9A7305D62DCF498C, 0x3F47E672DFA12377, 0x7AFCEDD1B03E19FD, 0x064639C070827885,
        // θ_3 = 328612735570122961441925984681538444058619199970799388331589671060669041013590953300019409481256501216802694623951252919403022824561805687156610790560418
    ];
    const TRIPLES: Word = 54;  // number of precomputed optimal pairing triples
}

pub struct BLS24519Param;

impl BLS24Param for BLS24519Param {
    const UD: Word = 0x342D2B27;  // u = 2^52 + 2^45 + 2^43 + 2^39
    const LIMBS: usize = 9;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x555AB82AAAAAAAAB, 0x0000005707781555, 0x19D278D950000000, 0xD26663DAA1EE3A43, 0x2AA57A347D5F3A9C, 0xF14CBF896D9B1A6A, 0x628AC4F463EAC831, 0x28052CB432E9F0C3, 0x000000000000005E,
        // p = 1262429974064133895575948469274106045256581127243345390328250818820996773268275503484338380261959437004435448461057707561751705887018653609772502933272439467: 519 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x0030797FFFFFFFFD, 0x85A0000000000000, 0xFFFFFFFFCE8FE251, 0x92DE495F62C6565F, 0x645162578BE16A9F, 0x2D3525FC6B18B9E7, 0x7FD6F298C7E9CD83, 0x757048A0E96FC6F2, 0xFD58708DC2972CA0,
        // -1/p mod 2^576 = 244765766296198661550073261277859408871800541440509164665457724412383053110284193749908767295821866788492767751899099116815431059278403984975056230128622643015728113179951101: 576 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x6119F385EBA072AB, 0x3675AD4604F5E6D6, 0xD5AC0954028A6527, 0x7DBE6EE6875A579E, 0xBF098FBB260386C9, 0x380A0940CE266A55, 0xC679311740BD420E, 0x30B6A2BDB6A4A02B, 0x000000000000002E,
        // (2^576)^2 mod p = 619310493639782086770853239321119338808256629192485625810834352056495396643140625793987687068328132052705302143355854109615016645512259020607283482358477483: 518 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x0000000000000000, 0x4D776A8BF0000000, 0xFFFFFFFFFFFEF5B9, 0x80FFFFFFFFFFFFFF, 0xF5C9256D48D14F3E, 0x0000000114F6FE89, 0x0000000000000000, 0x0000000000000000,
        // r = 183089248368073641832876741887983706481236937165343460612108442655044911360065490747725364764481124801206678769715014061260801: 417 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0x4D776A8BEFFFFFFF, 0xFFFFFFFFFFFEF5B9, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0x7B6AE65B5C0FFFFF, 0xAF754AE7558CF8AA,
        // -1/r mod 2^576 = 169516174468355159922333336594578149579335736898020497119597709845892516214158078696524662609069159079043663379369820073743060405569973886130738848079819542467519244824215551: 576 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xF65AE80065E74323, 0xC8D2D6A37EDC17AB, 0x560754B7B85E9431, 0xB97EED2A5A016606, 0x3F2A45DC8896E1E7, 0x13C173E5CA2F4615, 0x00000000F8B81FA6, 0x0000000000000000, 0x0000000000000000,
        // (2^576)^2 mod r = 164417333475644523538447829527614526624048668596281459577336832504427061434122844757309723417138751581708747720582880066749219: 416 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x8F78587FC9DA2020, 0xD23CE2A01199417A, 0xABFB396B596F4B5B, 0x40641BDDDB34BD3D, 0xA0B40089188C690B, 0x70975C5C33AB6CC0, 0x8DE29FDC5CB5E064, 0xD4284F861B73D28B, 0x0000000000000018,
        // -sqrt(-2) mod p = 332898978290017535316008677266825562960368430389539159529777545181052180104655463429871233696998542965145870947626597881530920434727243799243979184217399328: 517 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x11C38CCFE81FCDBD, 0x9B58A45F0A150A18, 0xC1492E79A038E9E8, 0xFD0E4E9F8DA738B5, 0x284722B2D0C15EEE, 0x2E7DA0FACA74DE9E, 0x7879CE8A6ED52B22, 0xAF096D913B388B3A, 0x000000000000000B,
        // 1/ξ^((p^2 + 7)/16) = 156653309776341953626700277789724945766248469119779196391073980046453795377891439826075106384619353372129854492785479383777562280371130781310635359132962237: 516 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x557B092AAAAAAAA8, 0xF87FFC42ADD71555, 0x19D278D991EAD23D, 0x2A3E752AF08B0F13, 0xA5EFF792C961BC91, 0x92203027BD3E50BE, 0x6AC265118F341139, 0x28052CB432C6FA41, 0x000000000000005E,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x556AE0AAAAAAAAA9, 0xFC3FFE4CDAA79555, 0x19D278D970F5691E, 0xFE526C82C93CA4AB, 0x684AB8E3A3607B96, 0xC1B677D8956CB594, 0x66A69502F98F6CB5, 0x28052CB432D87582, 0x000000000000005E,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xFFEFD78000000001, 0x03C0020A2CD07FFF, 0xFFFFFFFFDF0A96E1, 0xD413F757D8B19597, 0xC25AC150D9FEBF05, 0x2F9647B0D82E64D5, 0xFBE42FF16A5B5B7C, 0x0000000000117B40, 0x0000000000000000,
        // ζ = 832713675404809429524312820829801871715624589568324870000837777695522122069617928295496292980209406501007368315216607948441808968871250493441
    ];
    const THETA1: &'static [Word] = &[
        0x5E5B8F1B6DFDEE6A, 0x0BE6CD5B5AD17DD9, 0x037B02E332183540, 0x0F3606DBE90ED537, 0x3645027BEF6B74A2, 0x36C559C06CB6C4C5, 0x1F546CA4B9A85220, 0xF47BC9675B7F7B02, 0x0000000000000034,
        // θ_1 = 710010654435889050845520195050822535837476203876054619648728272572678685278352241916153643671473234337664911346355503125235987189066244886544431842747870826
    ];
    const THETA2: &'static [Word] = &[
        0x3EBB554F2199CC51, 0xDD37A44BB5733839, 0xEC5512ABCA9F706D, 0x63626AEDA679C3AA, 0x44BA77FD1A39FA80, 0xF2D313F71ABA0C05, 0x0A27A83DD89D6643, 0x9D9D8B0FE5245F07, 0x0000000000000035,
        // θ_2 = 718868808773253612388432612856696290899289138562060350444411318838844178042250993283120353438985474149343472588515503377281178915316030622850060682633268305
    ];
    const THETA3: &'static [Word] = &[
        0xCA6AE3CBC00A1091, 0xD264E6F6BC69A89B, 0xE04A743CA8165244, 0x93E14E3391EC45AD, 0xBEB7969FFA4E4B2F, 0x7A4A359E36327FB3, 0x2EA41265094AD0BB, 0x9D3FC5FDEA4529E3, 0x000000000000001C,
        // θ_3 = 383654426449628458821604377896803721163702030382340004538203033514508334236480138909575814341254407790128059601898810416287244034075282657968586816592941201
    ];
    const TRIPLES: Word = 56;  // number of precomputed optimal pairing triples
}

pub struct BLS24520Param;

impl BLS24Param for BLS24520Param {
    const UD: Word = 0x3430D322;  // u = 2^52 + 2^48 - 2^45 + 2^34
    const LIMBS: usize = 9;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x555AF556AAAAAAAB, 0x0000005EEC2D0005, 0x021DA1BCCFB55500, 0xBD995FEAC6C38BB0, 0xCA335345547E0069, 0x99D19ED9FE595481, 0xFF5E35046247FFED, 0x55F2A2939437E776, 0x0000000000000091,
        // p = 1948633601027220100953639385873368671029843616387623380196965553176964816155656765241914104672270717650116500465942793125367007826785160154344822634023922347: 520 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x0032A00BFFFFFFFD, 0x6681FF4000000000, 0xF4802FFFC7AF9574, 0xAE5236263EC64EFB, 0x1A61CF1A25918AA5, 0x087BBDF1100CEA65, 0xA767F07605427F19, 0x8A1FCBE52F3635C5, 0x2EF17EE809CE19EB,
        // -1/p mod 2^576 = 45353577318391444718033575245439927249990858193297957214021841781281791674353948024243720082297172271508259586580591622513891752821863620921733216148321174848393187845734397: 574 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0xD8A1C06D23B22909, 0x2D5140AF3E6DFAD2, 0x5B9F34854963E943, 0x6BE8215405520467, 0x726330D74594D6C1, 0xDBEAFEA694C3FA0D, 0x3BE64F4A639B4BAD, 0xA15F7969C363C535, 0x0000000000000043,
        // (2^576)^2 mod p = 906774918298278189716666380351165932240492736833809382500752098429889642656830038141561504984532951837084064343669163271990620672780448302306857071771003145: 519 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x0000000000000000, 0x5D98DD366F1FFF00, 0xFFFFFFFFFFFEC33B, 0x20025721C000FFFF, 0xB2D593E2F7C1C6B5, 0x0000000187F607F7, 0x0000000000000000, 0x0000000000000000,
        // r = 259108197635212332232942396705967062526259527043239095941344686148291648657767760715844727291380869144233449973477773966049281: 417 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0x5D98DD366F1FFEFF, 0xFFFFFFFFFFFEC33B, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0x1EA8B2A000FFFFFF, 0x218C79AE9A85CF96, 0x8B3583A40D6FDCC5,
        // -1/r mod 2^576 = 134494639587842270105470049327127100708049122000185037149276834817499625805836940720517983410586441032375479753032401748289055092358634065975159778889792215814906361912754175: 576 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x383DE81151D0A5F6, 0x177F4DAE7BEBC396, 0x0080C5B9CC7EF2CB, 0x561AF81978E16B12, 0x1EF11197EC0C44C7, 0xD4E174D1683D3BFE, 0x000000007E362802, 0x0000000000000000, 0x0000000000000000,
        // (2^576)^2 mod r = 83432897149100816790235743315855737171846581391912522371512459004850566295083774742024000728623589397003093703706501526365686: 415 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x81C334ECD67F28B2, 0x393DFCD5C3704BBD, 0xA22FA352A56B8FB7, 0x63B95FAAD7BD659E, 0xB860156340CE4E22, 0xE9773EF426E95BAB, 0xB15ECC33BBC53B8A, 0x153290CB631272AE, 0x000000000000008C,
        // -sqrt(-2) mod p = 1878203314496928005064990573888818074069060886519584020018745428885915829774048587534230875519611874068226197516842316100435532598346749438736405761978476722: 520 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xE85714EF6E2875BC, 0xEEDF320F68028507, 0x28E1D199FF7F19FE, 0x0C9724F1FEB86D96, 0x2211B328A52ACE1E, 0xFCE1766AED090472, 0x963E19AAFFAB4625, 0x674F7577374CB074, 0x0000000000000038,
        // 1/ξ^((p^2 + 7)/16) = 756248048039499764320705385860147972620137349081219984211306909464922179572661328318928466171225018932163921384520166983373433987249070817313197326107964860: 518 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x557CB55EAAAAAAA8, 0xCCA7FCEBDA10FFC5, 0x07DD89BD1ACB3864, 0xB605EE1DB2E03C32, 0x159F8ECD983C7495, 0x1A632E626DF4F428, 0x32C621A7BC3366D8, 0x55F2A29394043ABB, 0x0000000000000091,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x556BD55AAAAAAAA9, 0x6653FEA5631EFFE5, 0x04FD95BCF54046B2, 0xB9CFA7043CD1E3F1, 0xEFE97109765D3A7F, 0xDA1A669E36272454, 0x19122B560F3DB362, 0x55F2A293941E1119, 0x0000000000000091,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xFFEF1FFC00000001, 0x99AC01B9890E001F, 0xFD200BFFDA750E4D, 0x03C9B8E689F1A7BE, 0xDA49E23BDE20C5EA, 0xBFB7383BC832302C, 0xE64C09AE530A4C8A, 0x000000000019D65D, 0x0000000000000000,
        // ζ = 1230739948421569702802780327881005246550142790611479853068056721477322759256338643153897386846592732973439407566737595645277072592684093276161
    ];
    const THETA1: &'static [Word] = &[
        0xD5EE92891782C160, 0x4F03AFF25E278AEC, 0x31B7AF4D49F49E63, 0xE62A95DDEE9AB909, 0x0DD40C854D3F3C69, 0x1B222C399994B986, 0x444B253D91B63E66, 0x66E9F97229359036, 0x0000000000000017,
        // θ_1 = 313769623960615169449005226466732235631439262642169155562343342012169576486069724514531695495390969581631968965112566054559107526224336529339811110966182240
    ];
    const THETA2: &'static [Word] = &[
        0xEAF307ED53BCD2F9, 0x4D9B4E7883909AF1, 0x1F60225C08C12978, 0x4BB219F77D43F9C6, 0xCE5BFE2C5327EAA7, 0x5999734079DFF44F, 0x146440DC4C2C5F5F, 0xA3AF4EF38853A921, 0x000000000000002E,
        // θ_2 = 625332033287848833083490060477676801403091180617622854447029372430788338400954569252583742264414967452481129793308591995658658772949038190028391770023056121
    ];
    const THETA3: &'static [Word] = &[
        0x35C337215A55074E, 0xDF1E699B09E1F266, 0xE16FE86107AE3D13, 0xB2129F80956BE4B9, 0xD63EDED3AF20A436, 0x4AD96FC069A49040, 0x83DF0E38CFF2645C, 0xE1072683D15D9ECB, 0x000000000000007C,
        // θ_3 = 1674353852389571137752709025993147624775158003744629665314129109287498795798607691171282634912786803237860259121026166992817627294205933169234305388310234958
    ];
    const TRIPLES: Word = 56;  // number of precomputed optimal pairing triples
}

pub struct BLS24529Param;

impl BLS24Param for BLS24529Param {
    const UD: Word = 0x352B27E5;  // u = 2^53 + 2^43 + 2^39 - 2^27
    const LIMBS: usize = 9;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x002002D552AAAAAB, 0xC15551560AC21528, 0x83DEE69514F6868A, 0x41E009F236EB84A4, 0x7054EC19C9AC2BB9, 0xDF1F0CA3861DDEAB, 0x38F940AC65C13092, 0x3B63B77A8AFE381B, 0x00000000000158E4,
        // p = 1183805288231960247766314803880211940517056995289793669129570766430880928616857008705106275490083388721038333000002582911122451603535748455375136164475292002987: 529 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x0060197FE7FFFFFD, 0x66B409ECE0060000, 0x0E10FC669EADA9D1, 0x9B8A93E230D58CC6, 0x123DFF0166BA0BF7, 0x5E9F139052B17CB6, 0x692E9CD845D71C0E, 0x8D091E8A6D4A2F76, 0x0A18B7220E63FF5B,
        // -1/p mod 2^576 = 9754618660355371624420494992786692311705216554256624179807091052904959794455432888012220548983674057976003233577609287628268346513048748653727791084176932717204571540160509: 572 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x0E641A7C6E933166, 0xDE6B8605F9685BEB, 0x9BFFE60CEB49FA5A, 0x453715D13DAB1613, 0x61B7BB1D6DADE3C0, 0xDA62F13AE4F39E57, 0xF783E381B706FC34, 0x0C35C691B81C83DD, 0x0000000000002ABF,
        // (2^576)^2 mod p = 146722281670155033949122386580531662969653816861737243531193553304362552330233917605139869163407926951519255089323091427631992801828497602260571629235006026086: 526 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x43FFF00000000000, 0x48D99EF9399394A0, 0x9F7BF78000EFEEF9, 0xA1941FDC78C0A3C2, 0x529024B1C1C74BB5, 0x0000010221F8C94C, 0x0000000000000000, 0x0000000000000000,
        // r = 43683881902075074151233881116409445954912543187125038658373151302236759048856714543119565184135591814554439311863274369187840001: 425 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x43FFEFFFFFFFFFFF, 0x48D99EF9399394A0, 0xFFFFFFFFFFEFEEF9, 0xFFFFFFFFFFFFFFFF, 0x6794F8A51F34000F, 0x5EE347181575FACB, 0x2375ADEB91781331, 0x47285C6CEC3E8ACC,
        // -1/r mod 2^576 = 68747862070736185308299354610097557877794668649702842002505581433184481009754069512595459197455040980998020745758269293712382338934470240766795133435302075197135990160359423: 575 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xC6465E37DEE0C975, 0xEF83C472F92A7ED3, 0x7D7A457B5F0EC4B7, 0x034E54806126733C, 0xA7D1471CF0B0C285, 0xF5BAFE9497D3C7DA, 0x00000004DBD35FBD, 0x0000000000000000, 0x0000000000000000,
        // (2^576)^2 mod r = 822238389672146590981211727787046677083979994538864488622324009195718664799491925948681482555057793310854231180439913909766517: 419 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xB16BA41A9A8A4DAA, 0x4643D87B8829C80C, 0xCF287C45F8210EA1, 0x1EFDC4279B924EEC, 0x09C453FAC806F24E, 0xFE9C5BAB354B6349, 0xB1FCEE16C3EB458D, 0xB2EA8BCA9849FA38, 0x0000000000009F3E,
        // -sqrt(-2) mod p = 546592068673545592738013576752999712367468558158951204828858577259911694157175814838440223869858880492559898084043343064473392943796953914536303825573412228522: 528 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x441ABDD49821F85B, 0x7C79382A05A67E61, 0xB816B14CA6AB3452, 0xFD9C2452E08B6B09, 0x291525FB536BDF6F, 0xD4C68CB9742C30F6, 0xC59C82D89D61C825, 0x1DCE9F5D9A9AF13E, 0x000000000000943E,
        // 1/ξ^((p^2 + 7)/16) = 508827872066827561316132818602756475634368648280086541343701719294919336281750151168476896114262489362964839382398216178396418985035797620091604052149270607963: 528 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0xFF6013D542AAAAA8, 0x8DBA896709A11747, 0x87162859069EF473, 0xDE23811BA4C26619, 0xFBD78C92C1E2A213, 0xC0EC71681053B09D, 0x82A61DC937DEAAF6, 0x3B63B77A4A6495B7, 0x00000000000158E4,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xFFC00B554AAAAAA9, 0x2787ED5E8A319637, 0x057A87770DCABD7F, 0x9001C586EDD6F55F, 0xB6163C5645C766E6, 0xD005BF05CB38C7A4, 0x5DCFAF3ACECFEDC4, 0x3B63B77A6AB166E9, 0x00000000000158E4,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x005FF78008000001, 0x99CD63F780907EF0, 0x7E645F1E072BC90B, 0xB1DE446B49148F45, 0xBA3EAFC383E4C4D2, 0x0F194D9DBAE51706, 0xDB29917196F142CE, 0x00000000204CD131, 0x0000000000000000,
        // ζ = 393877685606243269247293788344290026518025407704239763421814193767774266325404266675943437084617335505877911470683714397881717744324543606947841
    ];
    const THETA1: &'static [Word] = &[
        0x16C5A30BD0743AEE, 0x44E4CE02CB99A5B8, 0xA874EF9150C990D2, 0xF2980058130D9013, 0x565D110077D30FEF, 0x0D8FCB0D5FD57D27, 0x867ED19C15722AE9, 0x8796A0698869A38F, 0x0000000000014D8E,
        // θ_1 = 1144899820477744638705053453619760295723440277622626641015573898769608462058105302411769260208880904070590979085677574206937115842659500470825107775652210424558
    ];
    const THETA2: &'static [Word] = &[
        0x421031D6CF7B9692, 0x1F926F91033D5376, 0x42FE3526C03D7D09, 0x5EC6EBADF1A71C07, 0x9EDA0516B5DC94F0, 0xD0DD6F6BC0EE1328, 0x0B78E61BB244A870, 0x0D425CF64EB991A8, 0x0000000000005AF5,
        // θ_2 = 312201502090988405430268138636951500977350996746642630528426156291228313637339613712557127216131924896727302956346680236422032232774724941818180301609787692690
    ];
    const THETA3: &'static [Word] = &[
        0x45AA18B1C7BA3175, 0x3CC2A4F3F1FFA491, 0x7B880902312DB593, 0xD2E8CC09FD4276CA, 0xF55DC51AE3103492, 0x562191041EF5B515, 0x405E993980A1803B, 0x32FB2FADB2E65FF7, 0x00000000000103F4,
        // θ_3 = 892265472223724552687769424585732885059219433915771496549486426036101775088229051008440489913530873800500080050570575429810970824925071436618446292888969687413
    ];
    const TRIPLES: Word = 57;  // number of precomputed optimal pairing triples
}

pub struct BLS24539Param;

impl BLS24Param for BLS24539Param {
    const UD: Word = 0x36DBE7EB;  // u = 2^54 - 2^37 - 2^25 - 2^21
    const LIMBS: usize = 9;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0xD816D69FFF4AAAAB, 0x2B25FFE3D94FA6AA, 0x206B2F3A455CD551, 0xC7E0668E1473D236, 0x75DE62DCE51E27B9, 0xB4538D8DAAFEE3C2, 0x80144952B3EA94B9, 0x215CFD5EBC6E2FB7, 0x0000000005553AA9,
        // p = 1199618793977078799499101051383417430258109593031943975615659060176619289431180120449448101043063182818585980044979120607434324999941640114114214642472045941271211: 539 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x80BFFF9FF99FFFFD, 0x3ED7DE2385149CC9, 0x3A6826B02BA3477B, 0x29D2AEA53478759F, 0xDC6D64B501BDF8B6, 0x16DAFEDE95115BE6, 0xBD7EF8018AF12EDA, 0x1235B04EA9A016B6, 0x012C673760502716,
        // -1/p mod 2^576 = 1133710346541351457438108398020394705508486078664638704557395479705914255397083238202025623305814564195926629609768027832760412392878858836574511695139564421834424753061885: 569 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0xEB7E6B8264B06B7A, 0xB4D8A99EE7E40D43, 0x56E3EA10FE192402, 0x1C6BEB862BA9CBA3, 0x98EB6E75F2DE63F8, 0xFD90115E90ABA359, 0x1D9175C6D40DBCA5, 0x052686F8D1851DF2, 0x00000000039F191C,
        // (2^576)^2 mod p = 814635616819584713891359622840944998651274933855730071652724659189591086873272450216461972030367698479966516801543711873074129418474956129531984720393675748699002: 538 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x2C1B33AB9BF00000, 0x721C4E7E67F1AD49, 0x33C97F283C1B39CB, 0xDAD9809B8157561E, 0x0686497256B82C48, 0x0000FFFBFFC300E7, 0x0000000000000000, 0x0000000000000000,
        // r = 11090001697663078528099690670034484254594308608613961377914098902750131360493179350744238819125395082335902717137932137282802810881: 432 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x2C1B33AB9BEFFFFF, 0x207FCD7E67F1AD49, 0x0FFFFFFFFF000200, 0xE1B52AF44ABC902C, 0x2DF7F8A9C09FC63A, 0x4E3A344D216869CC, 0x1D4A17634DC80575, 0x8BF97E693906F5EE,
        // -1/r mod 2^576 = 135234259125129418602668624877843450982938026195915532756121766814266418369043599846532197965060178445428769034780457246395550891717297608968977575651247833401912314023641087: 576 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xFF892C5CF9691FA6, 0x48650E52737BD432, 0x319B881C79D160FC, 0xF8207C42C00E706D, 0x9581815F04D54A90, 0x1AC07217E05A0142, 0x0000DA02EA1F179B, 0x0000000000000000, 0x0000000000000000,
        // (2^576)^2 mod r = 9444899373639599802502541806737510947574964657076721995777555266427883835511984076205409751174537884018101957276533096784390070182: 432 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x6D4DD86C9C64C420, 0x6E8C63AF441C9390, 0xEA441B8A861D946B, 0x8B650013F4F968A6, 0xDF978800F4AAE378, 0x76CCC336DD4773F3, 0x1D5F22264FF9FBB6, 0x5F8B14BAA6D0272C, 0x00000000003413F0,
        // -sqrt(-2) mod p = 45760531681511636218731116878660847165239115343936291100900776592021212835364112413841568612863785598311795004777996610590014450894628126949157729431264472384544: 534 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x66486A51071E11E8, 0x125E771B43455861, 0xCF7E45A743C45EE0, 0x510437E858DC3387, 0x03D0B76C9BB8CB9B, 0x9AC84C07F86876DD, 0xEDA7F0DB5381D83D, 0x1EB4525C1DE84964, 0x0000000003E97D70,
        // 1/ξ^((p^2 + 7)/16) = 880003347733580033679377408997242185187151205721456909828186213293908630523452949808396869961686895137319732664917361462247157421723839096643337146244693135069672: 538 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0xB884C65FFB0AAAA8, 0x6CB7990A128DB046, 0x208869F0A8423EFF, 0x34CA15F656223693, 0x68E04E8913B5AB64, 0x6B07EA75197BC0ED, 0xEC563C9B70BF555B, 0x215CFCDEBEAE5176, 0x0000000005553AA9,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xC84DCE7FFD2AAAA9, 0x4BEECC76F5EEAB78, 0xA079CC9576CF8A28, 0xFE553E42354B0464, 0xEF5F58B2FC69E98E, 0x8FADBC01623D5257, 0x363542F71254F50A, 0x215CFD1EBD8E4097, 0x0000000005553AA9,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x0FC9082002200001, 0xDF37336CE360FB32, 0x7FF162A4CE8D4B28, 0xC98B284BDF28CDD1, 0x867F0A29E8B43E2A, 0x24A5D18C48C1916A, 0x49DF065BA1959FAF, 0x0000003FFEDFEF20, 0x0000000000000000,
        // ζ = 199778185458930944127951526842911844878482565119378578751608737393617828587955192969010828982005349960582046750084354964498491311418690370034204673
    ];
    const THETA1: &'static [Word] = &[
        0x0FDA0C284E870769, 0x941CED4AB7E07147, 0xEDD6545A7589A9BE, 0xB0AD3BB2A7FAF29A, 0x9F6B1B2605032CAC, 0xB1F7272B9FDC1709, 0x7D4658B114E42D3D, 0x2B780D59541D442D, 0x000000000076F5DE,
        // θ_1 = 104529820381993011914008936211190163383488225895155303954114206604943770717495750294148678086577670708419952795717526445638064034421423838334635361318556295169897
    ];
    const THETA2: &'static [Word] = &[
        0xFEE3B6ADFEF60552, 0x4E4F4470C37D7F2B, 0xA7B6E8A512E1F5C8, 0x5CE5AAE566F593EE, 0xC63F0BB75A706CC9, 0x3DC2C7FD79C686B2, 0x117D81B4C7036557, 0x25AA7A62BBB8FF20, 0x0000000004F84EC3,
        // θ_2 = 1117969239435841605694457673611557690457240924808756817211995241867686125131366426362220207262917404909321924751650592467091268190967530339254158145869121882293586
    ];
    const THETA3: &'static [Word] = &[
        0x76F8A31B550E346A, 0x4B617C84D5CA9833, 0x64FC6E7FEB1FBBD2, 0x6FA6886561785045, 0x9A45D85F9792C7D0, 0x15E546DDFC96E34E, 0x2D2CC41CA26EC349, 0xF255FF59C35AC34F, 0x0000000002B5121E,
        // θ_3 = 608997209749567067264615347417182532119934285396182592198527940113458208371543221382641289315664372834414448147965080468498355795922319226599381524717913657717866
    ];
    const TRIPLES: Word = 57;  // number of precomputed optimal pairing triples
}

pub struct BLS24549Param;

impl BLS24Param for BLS24549Param {
    const UD: Word = 0x372D2BE3;  // u = 2^55 + 2^45 + 2^43 - 2^29
    const LIMBS: usize = 9;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x01800D554AAAAAAB, 0x55501562ACB55200, 0xD8DFB8DB6A77AAC5, 0x22344F7DC932BD7E, 0xFC4C398E8992B7F4, 0x7564BBD3FC7A7812, 0x17BFEE8B92FDBDE3, 0xB867AFBA7EF14316, 0x00000015985DD85E,
        // p = 1243582234031224989345546168986735336968086287660501257103917890489538816040066130091469114976028307223933607207877229780961477158092235444846119664607958957787097771: 549 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x018077FF9FFFFFFD, 0x06F5FA6001800000, 0xBE85A035A5CC253F, 0x6DD49A474531B8F2, 0xE849634145E51B99, 0x9C6639D84C3B2467, 0x20EB4359FF07117F, 0xDB14EF44D3B4804C, 0xC639A21F755F3614,
        // -1/p mod 2^576 = 191512113269737374242667090093371499988600753537341943886122084412604126557483632405832577165744285077048282291627030036277203474714373596815962330877167362135961701974015997: 576 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0xE69E1866DC89AF36, 0x96E6B7617183D207, 0x38F5DD171D82DC2A, 0xC1B4FCC825120897, 0x61A0B8E464231340, 0x95B61BD3FF31C81C, 0xC35F8D90AD502A56, 0x3FC72E9DE5AF5A61, 0x000000119E6DC207,
        // (2^576)^2 mod p = 1014601504309012942552331718513033584335241792823133503526584666219344815009782925255171344655913707770851555979917734523662836318975773448557516100706929344059649846: 549 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xFFF0000000000000, 0x1ADD9A793F6B004F, 0xF60000FFEFEBF6AE, 0xB39906CD53B82B9F, 0xED1EFE50805F83C9, 0x010282BBB1C6F65F, 0x0000000000000000, 0x0000000000000000,
        // r = 2867058873240878879213666453753587282305081810636647307112541774657224874882796806327565975921306913701407936108373318733433332039681: 441 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xFFEFFFFFFFFFFFFF, 0x1ADD9A793F6B004F, 0xFFFFFFFFEFEBF6AE, 0xFFFFFFFFFFFFFFFF, 0x6EFF10000FFFFFFF, 0x5907E3FD86474E46, 0x038AAC0115E7386B, 0x59AF270B9D187C5A,
        // -1/r mod 2^576 = 86646978919850975354405430708100534313375007661278351535662138021898727868666464818925081732024117142662478918609707981340934878140703910955966002364837690374433048623054847: 575 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x6BFA20DEA2113009, 0x4D1D6D070DBDF4EB, 0xCF1AA2D3B3554983, 0x5BB1BB3F56A2077E, 0xAD679AF0F5B69E66, 0x9B5D855F021B0D9B, 0x007CD50DEC26B7F2, 0x0000000000000000, 0x0000000000000000,
        // (2^576)^2 mod r = 1384474315713123735503436020903100789872837514260878890506502556622965485871527674883847656622459948124082321888429187966781409538057: 439 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xCD2FA83EAF35B15E, 0x7E4E627B778C836E, 0x76F2C7D1F39CAF72, 0xA715AD796D8A08CB, 0x5C4D36596CB61DE7, 0xAF639974A3B862F5, 0x8450225E175E06BD, 0xE6194353D25C6ED5, 0x00000000FAC1703B,
        // -sqrt(-2) mod p = 56406395624966702464072028902268381952283747850410011202493755074494638185450243065465746746139739575563086325282165126186343947166023325688762755951925575210611038: 544 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x119BA5EA09677E14, 0x5997CF938C45A848, 0x85A87FD0D87F038A, 0x36D082699B8FB82C, 0x9DE461D23EC535D0, 0x366CB1C550AFCC72, 0x537A8A0E13A6C7D3, 0x734CFBC908E271E4, 0x0000000386E5EB14,
        // 1/ξ^((p^2 + 7)/16) = 203103039970831917784785345111642780361871577191337025987222858758190334445806907849473681455604171642981418921151118131146146070168966356587349279936797022894915092: 546 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0xF2805D550AAAAAA8, 0x4C071C42923579FF, 0x299C4910E2A8CE71, 0x52C5AD0B3DCB660A, 0xCB63337D78CC1451, 0x5E332C9B1CF994CF, 0x7D55A371B8F5BC05, 0xB866ACE6FAA57540, 0x00000015985DD85E,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xFA0035552AAAAAA9, 0x50AB98D29F7565FF, 0x813E00F626903C9B, 0xBA7CFE44837F11C4, 0x63D7B686012F6622, 0x69CBF4378CBA0671, 0x4A8AC8FEA5F9BCF4, 0xB8672E50BCCB5C2B, 0x00000015985DD85E,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x077FD80020000001, 0x04A47C900D3FEC00, 0x57A1B7E543E76E2A, 0x67B7513945B3ABBA, 0x98748308886351D1, 0x0B98C79C6FC071A1, 0xCD35258CED0400EF, 0x00008169C225E6EA, 0x0000000000000000,
        // ζ = 103422775228920517458734295433405317682630005863918443145994082898456497746238569186553541395306615141692613233778033819260892120769329275044647403521
    ];
    const THETA1: &'static [Word] = &[
        0x4C0853DEF2B2722C, 0x77A8F62FB22C7730, 0xA098A920EF75DA1F, 0x55323C1D1BE925DF, 0x148C944313216B93, 0xFAB88D0303093F2C, 0x6892C60B2D14BCC5, 0x83B9CDFDDA268A78, 0x00000012FBFB5437,
        // θ_1 = 1093231947669324438980074754841779740107535354096844281913411374263077982957785908580216066449272559483782941857396738406153417495939758881016139446374274056487858732
    ];
    const THETA2: &'static [Word] = &[
        0x1C0F8D95AF93112E, 0x1CCE5070B64F1C87, 0xF3C073A374D0285F, 0xA08CEA1D640E9C04, 0x95E640782CCC5B54, 0x525DFB8B4B4D6A61, 0x715539AF7198047C, 0x27BA83668DF8F008, 0x0000000319C33C45,
        // θ_2 = 178553484174383901597507428596089787836692807488861980791753393763708152175005343043985921899825617527932208513121573937901231635735488226674361596209647688904544558
    ];
    const THETA3: &'static [Word] = &[
        0xBBA48F4599C4D4AC, 0x85B613A250318246, 0x711E39C56890918E, 0xB5C7A18C2B0FB86D, 0x6D9506003693F4D9, 0x74F1F44F04DD268E, 0x331C3682E227E13A, 0x7109CCF4337DB6C7, 0x0000000B9FE7077B,
        // θ_3 = 669416430957387684945017636722134592233859174690916815706268012215027588972042510019525593898039912825064775595302385628281892898469466505901541397437351828549588140
    ];
    const TRIPLES: Word = 59;  // number of precomputed optimal pairing triples
}

pub struct BLS24559Param;

impl BLS24Param for BLS24559Param {
    const UD: Word = 0x3828EC;  // u = 2^56 + 2^40 - 2^20
    const LIMBS: usize = 9;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0xA05555FFFFFAAAAB, 0x566B000B55554AAA, 0x6AC8800133551F55, 0xDD0DDC3FE6AFFFA2, 0xD990431F4E436A65, 0xB3AC50B62BAEB4E4, 0xACEBD0D07D2B6A75, 0x74E933ED8B37D73B, 0x00005558AAB9757B,
        // p = 1258179441593609014195385092040293313511753779130602420718602282121893083552345937255869591378233448413424128449018522453861794422429454835978519575113537088587862551211: 559 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x330002FFFFCFFFFD, 0x251FFFC6FFF70000, 0x01397C89D7000390, 0x5F551E3A47E94CCD, 0x7864156D5729A1C9, 0xD93BDD185105C445, 0x0C565BAB98238A52, 0x35020FB51B22A78C, 0x10FCFD249FC6623D,
        // -1/p mod 2^576 = 16412920468466877283220340995634853205749254387835355431264676525379153265084905193887781361761623056714476422843366153533514206828180933657532949574072585986848458789617661: 573 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x39EF50D53DA45B2B, 0x0D878A501B41A426, 0x31DE9139BEC6422C, 0x6C6F762B44195545, 0xD7BA0F839E3743E4, 0xF99B83203AA661D6, 0xE6162B6930C323E9, 0x8E56B1F757EE0F1B, 0x0000191B8F06A91F,
        // (2^576)^2 mod p = 370138015742666862391209206466778263624912526821472282862955410633768532907236633260227654346135888935261392840213392159907154343409258138161583879722395747072801528619: 557 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xFA40003FFFFF0000, 0x3F7CC000BA0033FF, 0x803B9BFBB7FC1B7A, 0x014606180C207D8D, 0x9C27280C207F9E7F, 0x0008001B8034803B, 0x0000000000000001, 0x0000000000000000,
        // r = 726927454379788347375532521479642249055205988392574883870098342409333891113269454238245238352461141183318498054725734182423795848970241: 449 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xFA40003FFFFEFFFF, 0x3FFCBFFFBA0033FF, 0x0000FFFEFFFBFFFA, 0x01F2C400413FFF40, 0x30BF270C1512C1C7, 0x3B597B76BFFC2EAF, 0x8CE341F06D508923, 0x27D9F1EF3964E6A7,
        // -1/r mod 2^576 = 38501757303406181177637615928931165662302053640213113781038545081119453104599232692830158158551342795195533963625896384265359571651365007556707886983857658830300597660418047: 574 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xE09B1C51D097A870, 0x852E91F4B65A6AE1, 0xEFF3A6A5CAB9621D, 0x08487619329213D8, 0xDEFE65569A7DDBF3, 0xC0CE845F478D7856, 0xF904860964E7E103, 0x0000000000000000, 0x0000000000000000,
        // (2^576)^2 mod r = 707014397510204206526765538894167806118489361110943334139073380971141604860827327321000268844856769865380861463255675992580098589436016: 448 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x709A782F4471BD8D, 0x8E964DB66BDFEC10, 0xB445BA1F6BD574B9, 0x317115919994A5CF, 0xAF69AB00033A8AFB, 0x5B9C9E5E38FA49DF, 0x97DAFE26DDF6C440, 0xBFD0902893227EA1, 0x000008DB7DD150C9,
        // -sqrt(-2) mod p = 130575983060116476099432029848335048815534276583110301008631997776177884979143542898043111664981669453743396366614896562693810647158881937485369624315207820594587483533: 556 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xFEF4E598382EDB75, 0x267CD8B1A7E450C4, 0x1FE4A5FB8C6CB4D4, 0xFE48ED72F6F872F9, 0x6A6500FD9E064AA4, 0xEC894B07AF1E9018, 0x156BDAE2F80BBE90, 0xAC3292358AC994D7, 0x000004ED4AE9B91C,
        // 1/ξ^((p^2 + 7)/16) = 72632919127106270638852868679533887025504863221741701880441050745822149756474199822103386982180752120464437561410765905268792984563434372306997207184237973548896803701: 555 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0xE25553FFFFDAAAA8, 0x42E6FFAF555DCAAA, 0x6A50440FBF564C95, 0xEB4ACDBD9633EAE6, 0xE3675019591EC436, 0x28DB2262FF6F3F93, 0xD053127D1F48D142, 0x72E921ED44573840, 0x00005558AAB9757B,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xC15554FFFFEAAAA9, 0x4CA8FFDD55598AAA, 0x6A8C62087955B5F5, 0x642C54FEBE71F544, 0x5E7BC99C53B1174E, 0xEE43B98C958EFA3C, 0x3E9F71A6CE3A1DDB, 0x73E92AED67C787BE, 0x00005558AAB9757B,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xDF00010000100001, 0x09C2002DFFFBBFFF, 0x003C1DF8B9FF6960, 0x78E18741283E0A5E, 0x7B147982FA925317, 0xC5689729961FBAA8, 0x6E4C5F29AEF14C99, 0x0100090023704F7D, 0x0000000000000000,
        // ζ = 52381442667149567829356853242578904631522248972230158637440870972877153163710391988823224760793526001225941527466638437895890021645173074179554630696961
    ];
    const THETA1: &'static [Word] = &[
        0x2167C58BA246916C, 0x7C2278BDB2D96927, 0x628866ABF2F0ACC9, 0x7E542F36F94A8F78, 0xF13D7634C00EBB2C, 0x532540273AF00116, 0xC6F85C91C9026728, 0x05123DCA42C9BC80, 0x00001844748A1F78,
        // θ_1 = 357751046961597685277165602061283948586483370477365028949280101313655491151207869194861247527281422005977015820323889028776970752655425776558762526666843754141357347180
    ];
    const THETA2: &'static [Word] = &[
        0x6710218BFFEFA2B0, 0xF65E2E232DC13236, 0xACFEB6645CA49D3D, 0x08EB49B1C6D7C340, 0x533F80DAE8B03F84, 0xB47F3762F7647E4B, 0xDB6B0AE9E48EB032, 0x954AA440CC636E6D, 0x000016D59FBB43AA,
        // θ_2 = 336626665365265059870242958883030232577160657379491331914337038635379993114536870882095103994326136927606746587492820479500831782138742610173182073047528700449867670192
    ];
    const THETA3: &'static [Word] = &[
        0xD2E15C910B48DCF2, 0x1B87143B3774164A, 0xE0E71BFE0F509E39, 0xFEA9663631313877, 0xC4BBE289BCF7D9D9, 0x87B875CA18C3C32A, 0xCB731FBB31F2F290, 0xF7DCC28764AC9A74, 0x0000310F34CFECA9,
        // θ_3 = 723235666702420083329051688585657414661767935541483011824654707670145018101137490782992242508394841251350373818135450013830406403263543254014798869854761137963182644466
    ];
    const TRIPLES: Word = 59;  // number of precomputed optimal pairing triples
}

pub struct BLS24569Param;

impl BLS24Param for BLS24569Param {
    const UD: Word = 0x39D2D5E2;  // u = 2^57 - 2^46 - 2^43 - 2^30
    const LIMBS: usize = 9;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x05FFE7FFEAAAAAAB, 0x550154F55BC00C00, 0x8D84A2A352AD53D5, 0x52A08A556E779BA8, 0x5D947558CF88DA05, 0x0DA03C46EA243D25, 0x69C6A0578D43213D, 0x7623487AFECFEF6A, 0x01537682FAF97F99,
        // p = 1281120365467903052552765927850222218659551723063893977222658315344294090455329931312346687599028489548457122260253188623695457238650113044803378849384668669397904392891051: 569 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x05FF27FF3FFFFFFD, 0x2C7028800C000000, 0xD92FD72A1B9C8E8E, 0xD3133290BCB0DE88, 0xAB706C65B17761DB, 0x7C05BE7681E6C448, 0xE90465F73DC3A050, 0xC485F69C0AC3E65B, 0x9608D8795ACFB6FA,
        // -1/p mod 2^576 = 144953540081687018233991158672177294041606893097643580346120192800957645326168544270035350804450731183593564508576942651222024118166264797514649214522724109727868669822763005: 576 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x76CF05C4A915E9DC, 0x7E4902DD1DEDF7CE, 0x0D7752F828660B37, 0x478697E70D7BAF08, 0x835592A712CB3824, 0x4777348D35889B53, 0x37EBB3FDC31AE2FF, 0x7EE5A3D091521D23, 0x00ADF0B9108C46BE,
        // (2^576)^2 mod p = 656444246417653358996395572073643874483653460061886547293552779306681089221479241953185231349131210655086865806419799078558030455542437310659227352961672316738748584159708: 568 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xFF00000000000000, 0x2EDDEAB9F887FB7F, 0x0000FFF008FE222A, 0xA43982ADC4233009, 0xB3512952CEFB0457, 0xE08C99249774C330, 0x00000000000000FE, 0x0000000000000000,
        // r = 185254579184477414162164454874212075220723481986716413012429855967316825583901459303379922585401008374380291467612225645901755406562099201: 456 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xFEFFFFFFFFFFFFFF, 0x2EDDEAB9F887FB7F, 0xFFFFFFF008FE222A, 0xFFFFFFFFFFFFFFFF, 0x0D8000FFFFFFFFFF, 0x78D8DEDC249A5328, 0x63D39142737389EC, 0xBFE9B1C363E9915E,
        // -1/r mod 2^576 = 185413620562028981014716276697982601027053633084993702472368675377447948973658254345417750866095613499072905796256153942658639608823832280504561853918093413803972464799121407: 576 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x99DDC8937D8F067E, 0xD4C77D858BA5DDCB, 0xFD43D4C3C91D8895, 0x87923ACBB0C3170C, 0x5E249D490B7C09A8, 0x5F8E91C64B74312B, 0xDC59C605308F1C98, 0x0000000000000092, 0x0000000000000000,
        // (2^576)^2 mod r = 106744076425086368264851492314979646825149205058379721634370753388574082691240109006740094771695749408365687645164975988100414046838130302: 456 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xC90689782F05ACF8, 0x395594221C77EA6F, 0xCD2A9311D34C9D2C, 0x17A4EFD62FCD9B20, 0xEE06D72E71AB23F0, 0x3222418491FE45A4, 0x585253D7821B1C2E, 0xE481B67F8EE6D1DE, 0x000AA3E1893D1DA3,
        // -sqrt(-2) mod p = 40155564628884608468696585977010567559448988880628813689811357996091865505343703848613066354218160831195313333676490118327337345995410256049772095218383373246129408158968: 564 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x0590F3647D2AD0EE, 0x5B3C3A20B49F47E6, 0x9852CAF8F3888C69, 0x99AEACF31926E095, 0x753FB6826BCD4C1E, 0x49DE0761F48E81B5, 0xDB55475D411C91E2, 0x61FAC03A59E87A79, 0x00E596593A77990E,
        // 1/ξ^((p^2 + 7)/16) = 866453839706961537155006874913520584813819865825788170824005250924090525522159797395658628161297404637360039951991352300360673294349700135152953120014211673517685480280302: 568 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0xC9FF57FF6AAAAAA8, 0x19B12374FEBF7BFF, 0x20C4CB05D607406D, 0x91D5B5B26D3D4B56, 0x426E14543C829886, 0xD785C6BEA45DF92D, 0xE3CAB903CFA6F554, 0x7B3074E4F2DD041A, 0x01537682FAF97F95,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xE7FF9FFFAAAAAAA9, 0x37593C352D3FC3FF, 0x5724B6D4945A4A21, 0xF23B2003EDDA737F, 0x500144D68605B945, 0xF2930182C7411B29, 0xA6C8ACADAE750B48, 0x78A9DEAFF8D679C2, 0x01537682FAF97F97,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x1E00480040000001, 0x1DA818C02E804800, 0x365FEBCEBE5309B4, 0x60656A51809D2829, 0x0D933082498320BF, 0x1B0D3AC422E321FC, 0xC2FDF3A9DECE15F4, 0xFD7969CB05F975A7, 0x0000000000000001,
        // ζ = 26683332673567236605435738183611861809407858344320659699153248814730225236354619832940467126668968773159041197094575875004289827467035652128998398151884801
    ];
    const THETA1: &'static [Word] = &[
        0xE16665A34E4DEB0A, 0x96B571C5D8E56C9D, 0x4CCF65B23BB3B44C, 0x7563C83C09AF4215, 0x7062588A4CE44DEB, 0xBF21D33B4CE54F89, 0xC7CF97F3240FE87C, 0xCDC354A326188F9E, 0x00882F583A792A50,
        // θ_1 = 513956846419477111706447931667790631059008697572218127277954947803326396010180785726063401198701021407037937793450479530467847834519766981034026017870892062959615165197066
    ];
    const THETA2: &'static [Word] = &[
        0x091CC718B3DF961D, 0xDAF6AD409116949A, 0xA74A867A009FEE1E, 0xE90F3A047CAF2723, 0x64358865BB7A1E11, 0x678F89CDE63E106E, 0xCE2032502A40C6D7, 0x9AA0CF17A02AC8BA, 0x00D0991B851EE41A,
        // θ_2 = 787241301362868245080666289170936871380267519931990256789609046539013627197820997510589819577436548557016841133640954152391278077128051191794238879122968293061353931773469
    ];
    const THETA3: &'static [Word] = &[
        0xC2AC02B4758B05FD, 0xC91C05A0765982B9, 0x5D050A864FD8F60C, 0x1FE209FB74ADBC93, 0x914F3DB16D1CC0F0, 0x05AEA17EB97A16E8, 0x1BBA0865688667A3, 0xF88A85B52830BE71, 0x01400AE22F3AEB41,
        // θ_3 = 1207828421432156851989921315953192917104952930987964726397706637633052826636429409882492830348485977253637425036076628907457893299771581105188743938838373282860174783743485
    ];
    const TRIPLES: Word = 60;  // number of precomputed optimal pairing triples
}

pub struct BLS24571Param;

impl BLS24Param for BLS24571Param {
    const UD: Word = 0x39363327;  // u = 2^57 + 2^54 + 2^51 + 2^39
    const LIMBS: usize = 9;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x5618002AAAAAAAAB, 0x0001BC1618001555, 0x108A495550000000, 0x8AB9564D2EB9108C, 0x2B54DBAC5B2FBCC7, 0xED569432ECC510F6, 0x1FA8490BC62E099E, 0x9472EBA9F5F37E24, 0x04F865386FC766E6,
        // p = 4801972400451511284316028742139990988208277383299740241782909543805803857000117973070379896434554851553557129083513937832098442840826009513442059697983290084159694683417259: 571 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x06D8017FFFFFFFFD, 0xFFA0000000000000, 0xFFFFDC625294DADD, 0x5687D60FC88E005F, 0xF0FEABA21351173D, 0xE51BB28F54C20E84, 0x210D1871A04F04EF, 0xE14563EF96EA4E93, 0xBD807B71A24615CB,
        // -1/p mod 2^576 = 183084284967683112618961633404010336546949630637820187429816824216894019819769150875033288125188489067659071861669081836343618786190964539133395376202075959293335679986040829: 576 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0xB9AB9B0087AC4064, 0x246F9C153118F137, 0xE8B2DE6D3C38CF3D, 0xEEC7290F85A9F722, 0xFCB375850571A587, 0x5FFC3F590D1EB38C, 0x9A11FA3A3FDEA6E2, 0x3F1ADD197621994B, 0x02206BA3ACB6093A,
        // (2^576)^2 mod p = 2054622382844521691065704288764001966722343805231201082334908795614633631915661016598483418871789241489427875371016325166496305195895122568804188709581761770024308646363236: 570 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x0000000000000000, 0x319EDBFFF0000000, 0xFFFFFFE4EABE3194, 0x00FFFFFFFFFFFFFF, 0x2C2CCC99C6DC2480, 0x7DA56785B18A02CA, 0x00000000000002DD, 0x0000000000000000,
        // r = 533129521076415720698643390455901924559825231578784059530122365627080352961073410036387493029717056792852561692822957282068509075041157121: 458 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0x319EDBFFEFFFFFFF, 0xFFFFFFE4EABE3194, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0xD1DE236C000FFFFF, 0x8E9480AF56C96ED7,
        // -1/r mod 2^576 = 137751525584287897192530022168499510002110519554498820634787161411763558283863629795370196999514991861862511962409256614416359124267940064541881336383812550559728021907963903: 576 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xD1433B85537BA5C6, 0x9A6A7A6EBB902030, 0x1283C1DC42D917EE, 0x1F6DC7C23F2A9728, 0xDF2A2695B96A5CA2, 0xF65A6FA501DE564B, 0x3668F28FA8386495, 0x0000000000000034, 0x0000000000000000,
        // (2^576)^2 mod r = 37950095145838837969176388532932410056366958273415807326143604164214800078153925942943155363953398379464715441323399121677076402869609926: 454 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x7444E0AFA677D827, 0xBAF834535CFBDE68, 0xBF0228C3CEF5D0A2, 0x0A475516339C3E97, 0xC44298F8022052F7, 0xED6BFD816BE46FDA, 0x8925640EBDF9BC0C, 0x76053F7248475AEE, 0x014A0E5304C6514A,
        // -sqrt(-2) mod p = 1245618769481274610445497480876866574463814083039927480829982444662658298410486577845505472677336056638212663628092848184104577940150232645958822181833933391975018783037479: 569 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x94E2EA817C35B467, 0x052956EF5F362AC5, 0x155B22B1430C413B, 0x4CC265077E1FAF35, 0x9F6081B8581448A1, 0x89125D179D6442A1, 0xA24DA99852E1639F, 0xDC7C8447B3A36DAA, 0x02F28D5067B14767,
        // 1/ξ^((p^2 + 7)/16) = 2847650926270144021950483762667276647872551710196286303805867501937532266188732229351476713891920108669766327059975979908202070741700078796990563257218244086756320805762151: 570 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x5AA8012AAAAAAAA8, 0x006CEB0CF7FF1555, 0x108A78D2373986D8, 0xCDB561454A72105C, 0x230DF187387B7EB1, 0xE425FFCBA852E8F0, 0xCD1C5F9C44F827F2, 0x81E2CB83FE9203F6, 0x04F865386FC766D9,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x586000AAAAAAAAA9, 0x0037539187FF9555, 0x108A6113C39CC36C, 0xAC375BC93C959074, 0x27316699C9D59DBC, 0xE8BE49FF4A8BFCF3, 0x76625454059318C8, 0x0B2ADB96FA42C10D, 0x04F865386FC766E0,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xFDB7FF8000000001, 0xFFCA688490007FFF, 0xFFFFE8418C633C93, 0xDE81FA83F2238017, 0x04237512915A1F0A, 0x04984A33A2391403, 0xA945F4B7C09AF0D6, 0x89481012FBB0BD16, 0x0000000000000006,
        // ζ = 87636862895842189899762522201988012921159838433474133495688743182002602236962455963926106689769751196967964672466775864561126506730935153871152664906039297
    ];
    const THETA1: &'static [Word] = &[
        0x0643E97BE3495E90, 0xF5A481B4E10BE134, 0xC2F4ED5522AFFD0F, 0x3F4CAA42C5FAB99E, 0xA8462A7378385733, 0x1F815D081FE84674, 0x5FA2CC9770EF8D6D, 0xB8CFC0B79BF6F034, 0x0170C3B6E888F118,
        // θ_1 = 1391703403252414972860521433503826659255386240489946317828781886307661075416967406186942975296084614467610435017825548180602297464227054144306048819231246377505390605196944
    ];
    const THETA2: &'static [Word] = &[
        0xDEEA86F14547E2D9, 0x67D8767FD97218AA, 0x24D14BB76CCAEB41, 0x0B33AB6EEB2FEDF3, 0xCF858FDEB66FB0AC, 0xCDDFEBD20C6C79F3, 0xF4C409F5D1245568, 0xCC6C54D683267C54, 0x01B0760ED1BDEAFF,
        // θ_2 = 1632092181713977974520241678004602122080659492679887543477664107926570002288334869270999709259860839628274461337977844827499212926261066935394392120677365360561966128030425
    ];
    const THETA3: &'static [Word] = &[
        0xD2BA9228C128947F, 0x60E0426AB8B536B5, 0x7B87AE6DB4B08C52, 0x9F80A31AF131E90C, 0x3821992688CA64D0, 0xC6B91FAB383AA14A, 0x6B62054E1AB0C5A7, 0x077F6F9A86C03FED, 0x03735F14E7E56430,
        // θ_3 = 3333810518871957695786895381097291071254048926580413033386420122505820688817509982378733606393241530177996820427644163485002296907335728564481182282099328190124504052700287
    ];
    const TRIPLES: Word = 61;  // number of precomputed optimal pairing triples
}

pub struct BLS24587Param;

impl BLS24Param for BLS24587Param {
    const UD: Word = 0x3BC8DBE2;  // u = 2^59 - 2^56 - 2^37 - 2^30
    const LIMBS: usize = 10;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x07AAAA9FEAAAAAAB, 0x55105554BED556B0, 0xE489045BCD4A7F7F, 0x5EFC9D3681A1CB62, 0x795C35B0CF4F1360, 0x8071A5A90289CB32, 0x993B18C0E3A72821, 0xFBB7AAE360CCFC33, 0xBD4DC497F571C1D7, 0x000000000000059C,
        // p = 355349349406638081364203632644423617721601284380674668338320269781478639563629994237904333133587247239916579873526778353363868440846374773939777363398461556306115777285723957931: 587 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x14FFFF9F3FFFFFFD, 0x0C1189120C000000, 0x3F5C3378B48E3F00, 0x25FF6544F7A96789, 0xB12F6A5B1663EFEA, 0xF11067A77C3473D9, 0xE7B36F3B4DA0BD35, 0x712808FA1C17CCB0, 0x61E0728436BC13BA, 0xCF5505542D509F5C,
        // -1/p mod 2^640 = 3695079889402457073872873204130946186656065837421631662663869340021495082494276277368886331891427105575882111296846673245115636580593820060051591559151400121040384987354644780868094727211188221: 640 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x5A2FD2E8A97F5D0B, 0x87A607F5666B11E3, 0x471A84E3F3218A19, 0xB82438425BEEF075, 0x6DCFBC6424C8989B, 0xDC7EC2420923F0BA, 0xE0A2D6732E6725CA, 0x2EF97EFD03691C48, 0xCFBEB81ED72CF25D, 0x0000000000000387,
        // (2^640)^2 mod p = 223540062114201732024137785660195409856424664196190873754380830302629022694468092544561412478426682974941772698844059739845476641149360236577893188123214892439425819412315200779: 586 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xFF00000000000000, 0x558DAE54A85F7E7D, 0x0400F69F00ACD6FB, 0xC97CA8F7D6B38707, 0xB260509845D36D77, 0x55E7DE36CAA4102D, 0x000000000057F6B4, 0x0000000000000000, 0x0000000000000000,
        // r = 4190071399659366999395565603522237475857861111348834199289511540038793735517954698047196675855499064622440469639371910542041625283254361784321: 471 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xFEFFFFFFFFFFFFFF, 0x558DAE54A85F7E7D, 0xFFFFF69F00ACD6FB, 0xFFFFFFFFFFFFFFFF, 0x908600FFFFFFFFFF, 0xA98A3D323A75A5BB, 0x1C89BD64FBE1B54A, 0x2AE16DC7A42AC08F, 0x7C9D2F111536A365,
        // -1/r mod 2^640 = 2220874892694260418148497374943700225816754384209699249452463168318351970780969944449514358141996510450401755916238756746290410735517235329004796260778065563542238379439301540367861501172645887: 639 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xDB02D20A3EFB37D6, 0xD84FCA67DC950AAB, 0x1918EB6C4EC0A70E, 0x99A5CD15C1892ABF, 0x64D3790B4C7CF016, 0x952560511359FFD5, 0xFC2C7F2F8A0BA5B8, 0x000000000040D29A, 0x0000000000000000, 0x0000000000000000,
        // (2^640)^2 mod r = 3087770067625003669514451119912714645628915078543711156757811054838598996871824852200224304050935639780145445388981580059199783928185554155478: 471 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xB951B6D6AAC925FA, 0x5F08D12CB3367081, 0xB98FDB464D502607, 0x59578B6CD227EAC9, 0x6E50463C8A73F2B4, 0xEB59A39BE1805106, 0x784352DEB55E0E02, 0x2FAA336E72C52283, 0x82CCF9789D499F51, 0x00000000000001EF,
        // -sqrt(-2) mod p = 122554919764733321371629327838857480302048538567326075219660735237901091472717463796057112082701327286507041395182247456787871747662445016882193675382761562035574281853181961722: 585 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x1E4B623E8BAAD596, 0xDBB5BB5CE1A0A77F, 0x562E2EFF9EFB8254, 0x2A51A18BE39A1046, 0x517190E029FFDD6F, 0xA1404F1C872E7ABD, 0x27D126418D0B3090, 0xF5BB63104B20124D, 0xF7638C64BB784CC9, 0x0000000000000302,
        // 1/ξ^((p^2 + 7)/16) = 190683420018303345544102658454724828996118509720804505035193161912152197876077385848097886744825592216502181524873196198251502863680521628255323546224931187479757217065343833494: 586 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0xD5AAAA5F6AAAAAA8, 0x998A4943BCD5466F, 0xCCB6441F44B780D4, 0xBB61B7AEF0EF7307, 0xBCBF34BC7E31E5E6, 0xD1B2C2541EBF757A, 0x2B3F1D245C6A9C3E, 0x352EA52C08B34859, 0xBD4DC497F56CF25A, 0x000000000000059C,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xEEAAAA7FAAAAAAA9, 0xF74D4F4C3DD54E8F, 0x589FA43D89010029, 0x8D2F2A72B9489F35, 0x9B0DB536A6C07CA3, 0x291233FE90A4A056, 0x623D1AF2A008E230, 0x18732807B4C02246, 0xBD4DC497F56F5A19, 0x000000000000059C,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x1900002040000001, 0x5DC3060881000820, 0x8BE9601E44497F55, 0xD1CD72C3C8592C2D, 0xDE4E807A288E96BC, 0x575F71AA71E52ADB, 0x36FDFDCE439E45F1, 0xE34482DBAC0CD9ED, 0x00000000000267BE, 0x0000000000000000,
        // ζ = 2113484666968027095875730056594006283095247252214220228665110353256513870758623579694625928261501152629042234999683509494837453142468775948236947726356111687681
    ];
    const THETA1: &'static [Word] = &[
        0x71C8589BF8FFAB3D, 0x8F400C557DBE4727, 0xB6977396F8CCEFBF, 0x0232C962F7B72C5B, 0x2306767D0D4E30AE, 0x80AB088E06E84AA4, 0x65AD28C5BEF1EDA2, 0x2F4D18AFBA8A405D, 0x2E479EF776E9BC7D, 0x0000000000000135,
        // θ_1 = 76469806531529110721550761712811118104383110592515404593002411673888405885072097985950758673835004795679249351742127374477272487926506186420063109855553924608697868345222867773
    ];
    const THETA2: &'static [Word] = &[
        0x728B2D6F470F926B, 0x7554B1959AB247C9, 0x0AB97E67FB25A2C3, 0x89759989F2FE946C, 0x8D7DE252073ADC0C, 0x75736EE8EC61A911, 0xEFAF996A7F644180, 0x643FABEADFA54D17, 0x506CA25CCD2CD503, 0x000000000000055F,
        // θ_2 = 340157002757475631328467534851041239768242443071822301355148225726540779414916628149982130501102906087490851219375774707280531826751091095960811091234288412715205049867092071019
    ];
    const THETA3: &'static [Word] = &[
        0x1E2FF5E192A5341B, 0x8E12D3E729257B06, 0x1924F631D7E7682C, 0x037DF3F9278590FB, 0x1E1A3C403803BBD6, 0x74216D3BD5AE5756, 0x0440716D0820FFCB, 0xE87FB15411E80A0E, 0x95FF68AFA03A91FB, 0x000000000000022E,
        // θ_3 = 138155281948428897131362605909729036103310097714645733663047879849313802794023735113262189888164047384780091557097688006482681974669906362331463746953988811290960461117388043291
    ];
    const TRIPLES: Word = 62;  // number of precomputed optimal pairing triples
}

pub struct BLS24589Param;

impl BLS24Param for BLS24589Param {
    const UD: Word = 0x3B352D1C;  // u = 2^59 + 2^53 + 2^45 + 2^28
    const LIMBS: usize = 10;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x030AB5555AAAAAAB, 0x556B0202AC56AC00, 0x4F2921545AA207FD, 0x6631F724D8D03E52, 0x0E1ADEB865D65BF2, 0xEBEEF57B1DDD74F3, 0xD5B58279C67AEBEE, 0x2F7B2C5764B677B9, 0x11E29F19E058C391, 0x00000000000018ED,
        // p = 1578232571345335457892979288862132960164513484451731978077050763912096324535345042631216936764945661579403105414872950906751725902769812586366929894690340231778538858374266268331: 589 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x186060002FFFFFFD, 0x7D76DEDFFFD00000, 0x4019891BBA371B1B, 0x3B50E9E0232277FC, 0xAC5024D6C16813F3, 0x2FC5E9E362ADDF32, 0x255D93553BC8D32A, 0x1043C4360A8CC4DA, 0x870D3680B94338FA, 0x617D7C3746BE607B,
        // -1/p mod 2^640 = 1737473209752838897314141461991691734850130427177373427332183693810047491486910492487724551455002357224541128850543861949660091619507771193243016143319646293091695518866246149828453845184806909: 639 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x59EAEEB599CDC2F0, 0x962EBA0CF7451E02, 0xEE63A5ADF470B4F8, 0x0DF9EC2911C7BB3C, 0xB3385EC289E9665D, 0x488CD8CD21FBED62, 0x07FC56099EE7F761, 0x6E76211FE429FF1C, 0x4EF45CF93F25DE49, 0x0000000000000A1C,
        // (2^640)^2 mod p = 640167359711545916461713154708894958587576378158629756577528360157629509463144680445882671139594327929364576115648034866669253353894385935390333835560403311431068056044430017264: 588 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xFFFF000000000000, 0x6F7613BBCFE5F7F7, 0x100FEEF9E3B90971, 0x1B59EAFC7A68E074, 0xF2FE1CA11BE5112D, 0xFBC004992BF77E67, 0x000000000121F1F3, 0x0000000000000000, 0x0000000000000000,
        // r = 13811276040157672723890104586261073661361831773543517165791261653090546874552882102707024012255197833092368508203026100554978239485570554265601: 473 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xFFFEFFFFFFFFFFFF, 0x6F7613BBCFE5F7F7, 0xFFFFEEF8E3B90971, 0xFFFFFFFFFFFFFFFF, 0x110E18180000FFFF, 0xEEFF9C8F28DDAC6E, 0x903F86EDA66E9ADC, 0xD64AE26EFDC36E11, 0x1E01C5FBB00B15A9,
        // -1/r mod 2^640 = 534784467260869757169664161069185645495230806729407143631512992321224249572483819544747723683428465466250164864355417852358449260753451198110902485817513586005084214097924416486388474191020031: 637 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xB99456BBC75D86C5, 0x16793602C26EBC3A, 0xAA1DCC35FD26BA26, 0x10B681F641E67155, 0x69117614C7D085A0, 0xCEB62BF232C20A91, 0xCF80E14E479ED358, 0x00000000004FE3E2, 0x0000000000000000, 0x0000000000000000,
        // (2^640)^2 mod r = 3805497014844089196919885532581318613456548044051441662077592386495840837719310426721523761528026609261736619164456092098794087090277100390085: 471 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xCF0C0000D48A9EBC, 0xFCD50EABDE29B0C3, 0x9EED7F835733EEEC, 0x7D5B7551E9008734, 0xABCE3798897602AA, 0xAD9A687C74FA12E8, 0x5AA9195379D56A9E, 0xE1C7F9FCDB0ECF55, 0xD8A0683967390922, 0x0000000000000979,
        // -sqrt(-2) mod p = 599985513968987260605163317385789788805372084018738738393087253303092277793105264749575913077724544394286390360053926517839507776407775780428311003711975840025162645660053970620: 588 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x8DF2A9D4E1606DAA, 0x7626CBF68EE59FFE, 0x66F8919DDDC5DE65, 0xCDE39AB8F9F9A840, 0x0420B9A31E4E9A9A, 0x81C6038EC1A1180E, 0x9D807B1D94525D8A, 0xE04B5451287E945C, 0x64A5E5613359EEEC, 0x0000000000001729,
        // 1/ξ^((p^2 + 7)/16) = 1466519189857437037407647136984524697844339268221718603171493511251383622126172949645770402240342316851521523833432401576864644357125738168550841539600681995402917538433113025962: 589 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x0F4AF5557AAAAAA8, 0x57C46B6298869C00, 0x11219775A2592E83, 0xAC4C6CC0C202647E, 0xB2CABA7245270DF4, 0x84CD81990EB40DF4, 0x9DF01031F142EDDD, 0xF61EFEDE31D9621A, 0x11E29F19E0465BAC, 0x00000000000018ED,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x092AD5556AAAAAA9, 0x5697B6B2A26EA400, 0x30255C64FE7D9B40, 0x893F31F2CD695168, 0xE072CC95557EB4F3, 0x385E3B8A1648C173, 0x39D2C955DBDEECE6, 0x12CD159ACB47ECEA, 0x11E29F19E04F8F9F, 0x00000000000018ED,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xF9DFDFFFF0000001, 0xFED34B5009E807FF, 0x1F03C4EF5C246CBC, 0xDCF2C5320B66ECEA, 0x2DA812231057A6FE, 0xB390B9F10794B37F, 0x9BE2B923EA9BFF08, 0x1CAE16BC996E8ACF, 0x00000000000933F2, 0x0000000000000000,
        // ζ = 8086545436418124693792336753407752113774327642221589793834122504813404420312896887579647057068615390066325122717592372024482929146208877054747718578651678113793
    ];
    const THETA1: &'static [Word] = &[
        0xE2D03BFA7FD721E0, 0xD4AADBE4479672D0, 0xA91396C9F43376BD, 0x53C685751B0DC627, 0xD09FF9E9F6C856A9, 0xB650DCB1834F934F, 0x227AF74F4990D422, 0x3282CD2D1A667E8F, 0xCCF42E3FC1EA2E4C, 0x0000000000000038,
        // θ_1 = 14048515424804808124546739492409428426517527139715588985498795734266852801439053136005951458504470927679738133348146166271027670078638485427119433450075880342184498125753229792
    ];
    const THETA2: &'static [Word] = &[
        0x04B5C405EA6E2D7E, 0xA9BFAB71A77E6591, 0xA66328F7B76680B8, 0xEAE73533D9727D72, 0x854721E24DF2AAAB, 0xA07C578CB72D7624, 0x8AD9955A7359E12C, 0x3E612FD15320E91B, 0x1F5C05DCF1B25645, 0x0000000000000484,
        // θ_2 = 285944241559688822178034919200485465976168514869653780211044830917279286095113579238782005080357801269463457046678817092648726218125249404787036068405912039670396824704273755518
    ];
    const THETA3: &'static [Word] = &[
        0xF9A57465BE454133, 0x8B1103D49C6151D7, 0xFF7C81E3D1208463, 0x00EF1C0B0DCCB7A1, 0xB3E23CE5C2E36A66, 0xFBBC0FBB83DD5924, 0x5019FD84B97D5E0E, 0x40DE47E82666372F, 0xA2B4DEB918172D4C, 0x0000000000001294,
        // θ_3 = 1176460585772395718034560337075849342865436880727569134743486699804328011031150215109059087473131751042948711876334343816641530345034368834752063236788127921258042495794218877235
    ];
    const TRIPLES: Word = 63;  // number of precomputed optimal pairing triples
}

pub struct BLS24600Param;

impl BLS24Param for BLS24600Param {
    const UD: Word = 0x3C38341A;  // u = 2^60 + 2^56 + 2^52 + 2^26
    const LIMBS: usize = 10;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x05B5555556AAAAAB, 0x55B66000002D8000, 0xF37FDBD4BAAAA4FD, 0x5EEE945EB6369A67, 0x2B7296FD8E5AED13, 0x08DEB2EF7E079061, 0x323C0D61C912CE94, 0x27175324C26A5D26, 0x4AD1576B7943E016, 0x0000000000A24F62,
        // p = 2630891641635230856040005721089105809805056190256522361070588777642919032297127477253095385828756192715308494334331373251707739315156817119752310442025560315904020669350162914257579: 600 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x333000000BFFFFFD, 0xFFF666FFFFFF4000, 0x4885CDD53FD70F8B, 0xC0858C2170A121FC, 0x0A150C0FF69AAC60, 0x98A7AB4987CF7D78, 0x902EA62B2ED28D01, 0x4AAE24C0BEE4436D, 0xFAA72B46CEBBBEE6, 0xA9B255A2DFFC8A27,
        // -1/p mod 2^640 = 3024338859901762084362193554072420825387486622505782292262142145230873528011855172403108000479254517642388685701915465610435650302754975236471413896764026148844179463832058765964907055526445053: 640 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x0AA6D04A679B05C8, 0x43D157AF7E2AE817, 0x84AC685C4416E823, 0x2160CE8F24D9E76B, 0x639FD3AC709E8FE3, 0x389B628E45D35054, 0x8D4FEB4FC0E8F969, 0xB69D2438C1BF311B, 0xC5B61944C88050DC, 0x0000000000564AAA,
        // (2^640)^2 mod p = 1398705550730422173956292554779330077490410790565369696539569445653740924308375877549377694083603027823730146634518334072212996454175038542204238146422356464494962998892277228307912: 599 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xFFFFFF0000000000, 0xCEFF92D39FFFEEEF, 0x0020D4EBF5BEC989, 0xD6FA76AE01FD79C0, 0x52581311C1677ACD, 0xD39762901EBD2F2C, 0x00000001AC2CD418, 0x0000000000000000, 0x0000000000000000,
        // r = 5221308723111636156738440186087748473058881966767311307244592814458610687500040370214844916563188524739665692446472038242815321850710892772065281: 481 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xFFFFFEFFFFFFFFFF, 0xCEFF92D39FFFEEEF, 0xFFFEB4EBF5BDC989, 0x00FFFFFFFFFFFFFF, 0xB0E8200033300000, 0xCBBFD3F2B3648704, 0xF024A86343D6D44E, 0xACAE5366887B63CC, 0x5D01584F5EF86495,
        // -1/r mod 2^640 = 1657542763206845478736255058572785890054546090557248802280514681920062194852985438582626927991128400772916374674713508249765783445790823569542343214511605802529905243786342285492228096123731967: 639 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x16AA026FB1F99DFF, 0x15509A3D838B2D3E, 0xE03D6C71D72A4B3E, 0x1AF5282223214C58, 0x97E004A254A90DAA, 0x04386225EEF4C96C, 0x9EB1A41841D7A017, 0x0000000045BEA7E0, 0x0000000000000000, 0x0000000000000000,
        // (2^640)^2 mod r = 850490505524671553186093976271751034352433397001581027440416764488115655072234830480199991537394339804011689922074805799415522343260791181516287: 479 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xE62069CC4DD8CF28, 0x444BBA8D21EBD04F, 0xCA01942F65670C27, 0x56823F81A6D9BD6E, 0xFD72633AAB5DF817, 0x1DEF835B2D0457A7, 0xCDD9B2AFB1D6C4FF, 0x41142E42A2AB2E23, 0x329517E7875CC4A0, 0x000000000052B114,
        // -sqrt(-2) mod p = 1340353736286163670549770949216948292933277851528185165727053825473855663669856144434821408730914347216313031730845678312794227615513599194457116879014841258694797321574830350847784: 599 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x759F9E98ADA8F82F, 0x70AC07FF5C54DDD4, 0xF4D3F3866A8FA195, 0x3AA8FECC76D7C7CA, 0x8A5A0F3C4928329E, 0xBA4A208E2E42845F, 0xB195038DD8D0794E, 0xE8646CED64D7F430, 0x831B2DD5639D9A88, 0x000000000056FF70,
        // 1/ξ^((p^2 + 7)/16) = 1410151442700264368056105088802891461230242356104042159031737211233932446142916599725096860598929472144291975977118593938298486786895212953566335198805420216575862454755296063060015: 599 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x279555555EAAAAA8, 0x5136A7FFFE0C8000, 0xCECD77619AE13B15, 0x26306C233E808965, 0x2A34D5FD53E8CBE7, 0x503CBBBF51C46074, 0xDE5874F59F77B95A, 0x4A815E8A8EC1A2BC, 0x4AD1576B40306650, 0x0000000000A24F62,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x16A555555AAAAAA9, 0x537683FFFF1D0000, 0xE126A99B2AC5F009, 0x428F8040FA5B91E6, 0xAAD3B67D7121DC7D, 0x2C8DB75767E5F86A, 0x884A412BB44543F7, 0x38CC58D7A895FFF1, 0x4AD1576B5CBA2333, 0x0000000000A24F62,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xEF0FFFFFFC000001, 0x023FDC0001107FFF, 0x125932398FE4B4F4, 0x1C5F141DBBDB0881, 0x809EE0801D391096, 0xDC50FB98162197F6, 0xA9F1CC3614CD8A9C, 0xEE4AFA4D19D45D34, 0x000000001C89BCE2, 0x0000000000000000,
        // ζ = 6419508737753580651263689850051056023920247592205020908995542040151324945134695891028187546490226476926899410242463347982328593970753384369096344499922134070460417
    ];
    const THETA1: &'static [Word] = &[
        0xAC19C059510E544B, 0x4CF9D06F4BFCB8DF, 0xD93E288F8197C198, 0x60EC0BAAB6885A30, 0x6821A930792DC8AD, 0x5F8F39F369FA67C2, 0x65D795BCD295AF68, 0xB5F56C4D9FF9FE34, 0xF788323DAEA19D8A, 0x00000000004FD535,
        // θ_1 = 1294014349876364029526476306881187956865802328818313737650615442136029556919287121524571101984948142026123319252524016106241850856735167077628239705536402076140125056520716169401419
    ];
    const THETA2: &'static [Word] = &[
        0x4CABC9E22C88BDF4, 0xAAE26CD74526AF48, 0x7F427D5CEBC66978, 0xA943A874D31B1EEE, 0xC20A1F6A6ADC2071, 0x38473AA9AA8F5472, 0xB35150FCCF6881AB, 0x91ABFDF873C5F603, 0x6C93B1218E50A4DB, 0x00000000007BD2B6,
        // θ_2 = 2007054159901948661788414888816391999405892787202301206283500248243817307212768427945934988209265224297341690947230196301863002266178449639352629175996578869111294273616861920280052
    ];
    const THETA3: &'static [Word] = &[
        0xF519EB6810542E95, 0x9C60DCB3A9C0C558, 0x732FE0EEA83930AC, 0x3361D94E4672A94D, 0x2BC56DD8CBB71C7A, 0x1328F160EEB9ED5A, 0x9C1EFFC368358EB8, 0x95BE54EC6E92EB76, 0xC6BFF5A959E15EA9, 0x00000000002A4718,
        // θ_3 = 685281503345404174516443345888376305447154581100386031681511002221106711387818737600934395613061012201585103140833417230064522723436670810077543701687280133294031230016608372272789
    ];
    const TRIPLES: Word = 64;  // number of precomputed optimal pairing triples
}

pub struct BLS24605Param;

impl BLS24Param for BLS24605Param {
    const UD: Word = 0x3C3BE813;  // u = 2^60 + 2^59 - 2^24 + 2^19
    const LIMBS: usize = 10;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x080050155502AAAB, 0xC8ED0D200A1DD000, 0x3C3E56E5B9753E94, 0xEB6CDF3F02BC5158, 0x33BB41CEA4F99201, 0x52E48C2329E7E35B, 0x8B214A68B9990754, 0x54D0FA7CA0F565FD, 0xF83DC27E6758C82C, 0x000000001338BFFF,
        // p = 79760659115828793352343723893789739640830265057533735161529073613712773250902156077334346511752278393639326136032175758555205248500213939724252715880734915042355375626155543754877611: 605 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x81FFFFFFFD17FFFD, 0x846E2190000002BA, 0x2D24655643F32194, 0xBAB1465D283EE1F4, 0xC4DA0350E1155B38, 0xAF6ABC16B818FE8E, 0x7577B114D4FDFB3C, 0x1C245D1CD060395A, 0x0A09800B15299B0C, 0x1B58F0DCFD7DB238,
        // -1/p mod 2^640 = 487386733950494097622395234739059459316452731333232883831586847585351747268582712581557439313078817695819185409473954655270857623917525672478906650989156057019119816593233806079545818643693565: 637 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x7DB54C1D8AD7DC1C, 0x205F4CDC9601E612, 0x9D259573B75A48FD, 0x07673C92DDC5BFA4, 0x97D80CFF5C35853A, 0xC941E24003AE6FF6, 0x5A22E37941D011E9, 0xB8EB46D18FD724A1, 0xE9B44AD8172CF7BB, 0x00000000001924DF,
        // (2^640)^2 mod p = 407560907222766409348448289071350330139962523683883950949367097982446205498895965650249758152902110257613586578749310196386788090055263504582715969795981065044432265454229636242460: 597 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x473FFFFF1E87F000, 0xC69437C3A1000057, 0xA24EEB6642E49C58, 0x25F5EBE094E83412, 0xE7D6262801381C93, 0xB95800012B50BBFF, 0x00000019A0FFFFF7, 0x0000000000000000, 0x0000000000000000,
        // r = 80007000926106654781931243267508524658382651527476298566103049957736396440981151799767452388735545346290051493142314144548759639979404054851747841: 485 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x473FFFFF1E87EFFF, 0xFFFFF354A0000057, 0xE82B58100000D13F, 0x0028EEB0FACFB20E, 0x5C3D76071607FA4B, 0x9B4BFA513541C094, 0x70A6BD9C553BE438, 0xA0CD22FDD17F825F, 0x79E3E08561F9519D,
        // -1/r mod 2^640 = 2172330261428107997974556673726981199616579700343654028156858845196728461165169638921667334533171654938955800361761192678548898089457511649617664523337757894559147052405340141158089128522285055: 639 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x5892A09EFEC86422, 0xF8DE486C7E5AF58A, 0xB2F09BDEAD323BF6, 0x49F92B231CF8D967, 0x4B131D53DFA76E0E, 0xA38061F660815CB2, 0x965E2163C0BD5C71, 0x000000105FD1549F, 0x0000000000000000, 0x0000000000000000,
        // (2^640)^2 mod r = 51116409454534717705987281521658278708030280870139114133761436693691976736500176696618304013335058990021706489039386731459945575805791847842341922: 485 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0xA0BEB1FC22C15773, 0xDDF53A23CC529239, 0x8819D83E8C52C30B, 0xE494B51D179BA2C4, 0xC7DE531A64334D28, 0xAD94084292D22E14, 0x14D6D7A08915320C, 0xBDE14BB3FE99A2FE, 0x5CE75BC2329E78F1, 0x00000000126867E6,
        // -sqrt(-2) mod p = 76383599523491659335341632642745837635483822339595947307314449641953620207210244937369827686265569695354152552770197675865987911285412153166779170641065295679581219286830835558340467: 605 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x97DB0C6A89F20AAA, 0x2B25CB0DC560132A, 0xBB493AFA88532C5F, 0xAB86D0FD713D8327, 0xB7F11DFCD8BABE00, 0xC8D637077CC88600, 0x56D8A392D7E74A60, 0x6815B9F2F387A1BE, 0x88E844FE9C899033, 0x000000000110E460,
        // 1/ξ^((p^2 + 7)/16) = 4423320348798630787894153572570608177316429930992598998421070294461344954306525839670650472785746679228635735623140258715222119007478374313476322226943228889566822443934195058346666: 601 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x3FFC8F155312AAA8, 0x2D2CA5450AD7CC5D, 0x57A8007F666CE55C, 0x7C808836EAAC1DA9, 0xE4E4C20DC5D666E5, 0x094E0C659E377B76, 0xE9FD07297D141B4C, 0x13B86B161ECD5D0B, 0xF83DC2799928C82E, 0x000000001338BFFF,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xA3FE6F95540AAAA9, 0x7B0CD9328A7ACE2E, 0xC9F32BB28FF111F8, 0xB3F6B3BAF6B43780, 0x0C5001EE3567FC73, 0x2E194C44640FAF69, 0xBA8F28C91B569150, 0x3444B2C95FE16184, 0xF83DC27C0040C82D, 0x000000001338BFFF,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x6401E08000F80001, 0x4DE033ED7FA301D1, 0x724B2B3329842C9C, 0x37762B840C0819D7, 0x276B3FE06F91958E, 0x24CB3FDEC5D833F2, 0xD092219F9E427604, 0x208C47B341140478, 0x000000026717FFFF, 0x0000000000000000,
        // ζ = 138362687828912077534076028321873527139639613148498699219875422682075600595062024124416571081541207096307920684674328407243783209133383778144280836401303509844623361
    ];
    const THETA1: &'static [Word] = &[
        0xF854C55F34D1213F, 0xF5E280CC32FCF4C2, 0x1D86B361EA73958C, 0x12436066CBAA5072, 0x0C91CA6767F324D9, 0x12CC0DA22610CD6B, 0x6B1BCE3567F7F9F7, 0xA7FC5CF2BD5D0750, 0x01D4D53D758297C0, 0x000000000C097952,
        // θ_1 = 49947749822668697600140993527267534354801781382200514732324660777175264086993685494122408868545874951672117942490526935927134401470741803893157778407613484440512420742171855154127167
    ];
    const THETA2: &'static [Word] = &[
        0xDC0ABBA98710DFD0, 0x5D8EA2D5B83B3C59, 0x44A5643038706B43, 0x55BD69C74181A99C, 0xF13B000D1CA34ABC, 0x6D703C90B84C3B4C, 0x64E042CF395F22B9, 0x615CC625926A7D2D, 0x28BDB9E2D77908CE, 0x0000000006C71AA1,
        // θ_2 = 28124379496991528743701684741000254283355262316364326502097100850657932642062515013229678230463049092824621401910659781283462178422071242552358164853286620920455876714321334502481872
    ];
    const THETA3: &'static [Word] = &[
        0x358150AF7C665801, 0xCF00228A016ED04D, 0x3A8B9842AFB1F211, 0x86EFCFEFA33EB56C, 0x2BADE876C1646EB3, 0xDEC9D3106A80776B, 0xD284C41423D0FAAD, 0xF6C50702C06403AE, 0x3DFAF615C9C1C5FE, 0x0000000013028D8D,
        // θ_3 = 78882176470760245487153434241822302278665184018342759107213742400350171942976112540521185927391874278123844128105722815565173469492655028839201135094257352374249697977095751530338305
    ];
    const TRIPLES: Word = 64;  // number of precomputed optimal pairing triples
}

pub struct BLS24609Param;

impl BLS24Param for BLS24609Param {
    const UD: Word = 0x3DD92321;  // u = 2^61 - 2^39 + 2^35 + 2^33
    const LIMBS: usize = 10;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x5FFFFFD8AAAAAAAB, 0x0155554B80001221, 0xA846C219517B3850, 0x62346AF9A57E2C7A, 0xC1278D46E7A22CE9, 0x5B8F651B40EE04CB, 0x4DF4552C95B34BD6, 0x1CA3789E7EC4C398, 0xADDA8675FEBAE390, 0x000000015555242A,
        // p = 1416364867782471407955201470610971526664881731525149439664791912015183266358959695604804941049676914910555514916358588608881857642751870967067271630196791604117547831408287424778513067: 609 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x5FFFFE9DFFFFFFFD, 0x804B364800000000, 0x132E6F9097FFC2CF, 0x3C6A42AC05607D78, 0x11623D3D919AE3D4, 0x6240FE01AB0618BA, 0xC15BF49BA1281707, 0xC15CC99DEC460ECD, 0x1B3C67DAC4843A6C, 0x113BEB822786FE25,
        // -1/p mod 2^640 = 307146038867841236378566061947947031636043116481176353937988663209814684816042373263988367221271606209635272896795027560119701056720883719500894679064485213605155806545856346459420215220371453: 637 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x8AD8BACB2FE9DA93, 0x6C46EEED4A9C3FAF, 0xD5CD67C18CCC1693, 0x73082C2BD4C7122F, 0x85A29C6E6DEF3A0B, 0xFA57933CEEE7BFE2, 0x890E94FA4DAEF213, 0x6120E2216F350C68, 0x68CF4BECDE9B3EF9, 0x000000011B6F9595,
        // (2^640)^2 mod p = 1176121581133839415005373263966172313637685309270036816957655399141818014303639594587722117089170808038167838219264618715710920967049237466059594620860044670189263661400844771768523411: 609 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x0000000000000000, 0xA00C890BF471A8F0, 0xFFF00000EBFFFAE6, 0x687E4120135BE0FF, 0x50DAED6C7C5B1944, 0x7CBBF50815B28EBC, 0x000000FFFFE28001, 0x0000000000000000, 0x0000000000000000,
        // r = 799166223675947251649141961666326475191794513230066448710598107433341944908516380052968796860939628092984739502464402189408361076366856568596070401: 488 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0xA00C890BF471A8EF, 0xFFF00000EBFFFAE6, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0x50EE1C373D350FFF, 0xDCD48A1FE21183D2, 0x04847AB991A4F1E1, 0x97F467F469C10254,
        // -1/r mod 2^640 = 2708141978612601966981982729552327908845220878787861065416682566267386900678098588124604746984212433040234352857823382485416072239443173357282187996681098659753757387717920229664099849075687423: 640 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xF923E4712F38520D, 0x734FB9B7FD4355D5, 0xD8D1997F4AAB25DC, 0x9C3AECB80986C843, 0x6E68554233538DDB, 0xF98BCB3D2518AD9D, 0x9F5B24F3AA9981AC, 0x0000003423DF95D4, 0x0000000000000000, 0x0000000000000000,
        // (2^640)^2 mod r = 162768376460011367945753161758742098463042711433441564094060597148368632307013196185035557834414817218362771044980603150736127599146779027772559885: 486 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x6AFCD58EB3D69D02, 0xF29227FD915B5185, 0xADF647C051892404, 0x89C238AE5186C2FA, 0x4418B2725D36C679, 0x2C80BE07DFD6EFB4, 0x40C411CF89069B80, 0x4F974EF1B302D788, 0xAA5CB44D7F029606, 0x00000000131E3563,
        // -sqrt(-2) mod p = 79330447593656747795075252024599642746119131138637215269779345050984957303310214137513592965782365518128378041361661113230416106461964605902148498151099214976818245736515430086253826: 605 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x8902CA807D6B7C99, 0x7DC8112CEE750FE5, 0x1ECF58CF83C50A88, 0xE3C839127769DE4A, 0x1BA9855C7AFF678B, 0xBB77290EB80A533A, 0x6D207F82EF724E80, 0x43B59765F4E93E04, 0x5893EA10FB437C89, 0x0000000081883403,
        // 1/ξ^((p^2 + 7)/16) = 537495231821489782142436948493600482232545367090437760368781299408755628918327545799919603739111278352142161324341202537039547262986308192454678025382631823806407295855480584692006041: 608 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x9FFFFEECAAAAAAA8, 0xF0F10D617FFF3891, 0x9FEF8A43317B89E5, 0x74DD835449E3781E, 0x363670CD08F9ADA4, 0x6750672AEC0BD7C1, 0x26C0AD9C8912BDAA, 0xA24282BB75ED0366, 0xADDA8635FEC32F8F, 0x000000015555242A,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x7FFFFF62AAAAAAA9, 0xF92331567FFFA559, 0xA41B262E417B611A, 0xEB88F726F7B0D24C, 0x7BAEFF09F84DED46, 0x616FE623167CEE46, 0x3A5A81648F6304C0, 0xDF72FDACFA58E37F, 0xADDA8655FEBF098F, 0x000000015555242A,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xE000007600000001, 0x083223F500006CC7, 0x042B9BEB0FFFD735, 0x76AB73D2ADCD5A2E, 0x45788E3CEF543FA2, 0xFA1F7EF82A711685, 0x1399D3C806504715, 0x3D307AF1846BE019, 0x0000001FFFFBDA00, 0x0000000000000000,
        // ζ = 1842751445040540456702975154488125368626398653316400468092052907767599843667096987848982910649798836924143033703746835419192934468061898778032192087990999577358499841
    ];
    const THETA1: &'static [Word] = &[
        0x3912091ADE7A0707, 0x8201D17FB0259CB7, 0x73EB353F84EDD56F, 0x25D4054D6E55AED8, 0xC7396E26183FD39A, 0x13965FEC01F0692D, 0xD2197B58F4A91CFF, 0x5BBB16AE4B0CB75F, 0x31028F4E5C7878BC, 0x000000002D58A0E4,
        // θ_1 = 188164783668373643898246569642386527517239052449712241802081558075337384415372210010723820363235740409641013049484312598935350280868949597660933778309434207138950164416625917799565063
    ];
    const THETA2: &'static [Word] = &[
        0xDC6C6185261BF225, 0xF89C97CA98881E2C, 0x8B56B0B9F551F4E2, 0x014182035FEBDF1F, 0x1BFA7859FDFDBC8C, 0x5E3964332EE91378, 0x9C3CE2BB658D7C97, 0xE8B409690D3977FC, 0x5206514E61C3B5D6, 0x00000001318B9DF8,
        // θ_2 = 1267865307910926137954492526980884820520702244644755805497600026465338360595242592662837917169332357259978690887555106566561715415113903672357412100962907004467006789859919222022074917
    ];
    const THETA3: &'static [Word] = &[
        0xF836620AA6504A1B, 0xB1772B96CE41C1B5, 0x14788A5EB7E31BF6, 0x224842483349E78E, 0xB565EBC7A3FB0A5A, 0x7BB2F79A1A001157, 0xD2AECA685B6CF10B, 0x68D5E98DBA162970, 0xB24DC501DD8C840D, 0x00000000A122E444,
        // θ_3 = 668637567297937774704776500154163739337696605062467544532992029228014341470697059258753443976747419844919700410313969754502639013074160773907142066031991442168837473193608516532718107
    ];
    const TRIPLES: Word = 64;  // number of precomputed optimal pairing triples
}

pub struct BLS24617Param;

impl BLS24Param for BLS24617Param {
    const UD: Word = 0x3EC532EF;  // u = 2^62 - 2^59 + 2^50 - 2^17
    const LIMBS: usize = 10;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x12AC00015554AAAB, 0xAF98401AAA950AA0, 0x4C9814A246AAAB8B, 0x82788B1008421940, 0xA719F8BD34CE2952, 0xBB5F45B1A423BD7B, 0x476F057F4F88B68F, 0x09F0081DF2BD336A, 0x9AF73AEE61101E2C, 0x0000016830764F4B,
        // p = 382620449263420667035873637621258133900986052043025115610748968497552452529326410409377050196109321379566875692962972198860522008450071306491507236686122836994194158455287407278315317931: 617 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0xA823FFFFFFF9FFFD, 0x8B9FFAB81DF00000, 0x9CEF5CC2C1B33171, 0x33EC97533B6F7E4D, 0xF999339A38646DEA, 0xD2C741DE997F5A5E, 0x804184AD3ECE5609, 0xD75DC5651BA1B063, 0xD1A440A0D923D916, 0x3FA0FC7156FDA2C0,
        // -1/p mod 2^640 = 1133995541728619891613954633831685067314467179628054103024287547423139762101428654529271665668802464482390373009412136546787070376408082226173180935763829624542169972708511080205427400657993725: 638 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x1C8A49CD39FB80DA, 0x15B0908C377B6918, 0x1375C298A0CA227C, 0x007497D2163C8A88, 0x5E6761F223A5EE0E, 0xE0105730E0E05426, 0xE0D649E5EAA638C2, 0xA27B52BE28852CC5, 0xFEA91361FD47F54E, 0x0000009DFC308A27,
        // (2^640)^2 mod p = 167823794449572389517646591152071852064029364743318564057035076400691137442231018288879901951513664487764406013124444479642096282130613770468584499842079290369365667568851778993592697050: 616 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x0007007FFFFFFFF0, 0x9773F1FED9D5FF80, 0xB5E8057134088474, 0xA73AA819F4F199FA, 0xCA68B6DFA4E87A68, 0xDC36ACC4DC89B658, 0x00005829116EC2A0, 0x0000000000000000, 0x0000000000000000,
        // r = 70454955611662225822183160675003847721762614465107482196952279668437704598211679741414670088651508223906174000104990583998540366909833703448589107201: 495 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x0007007FFFFFFFEF, 0x985401FED9D5FE80, 0xEA68451B67C82474, 0x33720CA3CE117FFF, 0x44317208C732F344, 0x20CF9C8F5D0B6B12, 0xD0CD2A1BD71626E3, 0x21A667E7F67E2664, 0x7F8554C0628AE24F,
        // -1/r mod 2^640 = 2272680426123464664033927820323805005848252369326298971694623143932014012862705417181359778037736043505295764011824009883186079927035060242664518133644580485483868871853658092171726570007822335: 639 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x475D8E69CEE605A5, 0xC2979659B3B0F382, 0xB1D079315A5E89A4, 0x30F10D6DBCAD0D02, 0xAB0D8AF2260118CB, 0x5A4BDF68644C4EB8, 0x5DD528E737363605, 0x0000129DC1F8CADE, 0x0000000000000000, 0x0000000000000000,
        // (2^640)^2 mod r = 14877497199004076955435994655115380412275699116684596301479858010497642775301908865760295051049552495500979264731025680550015781947127329504729892261: 493 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x8A9824C88D9B36BA, 0x2052C3F2EB34C6BD, 0x8FB9B9D26563ACB6, 0xD077E93AC68898C3, 0x1FBC86562AF089F7, 0x818E3B88A05D0241, 0x67B86622BE9BB79E, 0x877588D3365C767C, 0xF791288C97B1531B, 0x000000D153D08E13,
        // -sqrt(-2) mod p = 222363471266918700467243919675275748214786485196420265960248243922770854481820793813224285273342107706609229466897722352853529365671569333140388466704313627194767570841819627592965895866: 616 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x23EB689A326741D6, 0x19805F8AF5B1DFC1, 0x4B570AAF592AF4A3, 0xFEFB102D9F21E520, 0xD38AB4E55BAF4724, 0x2A06932700B196CF, 0x9BD408B921E206DC, 0x7B47FC46B57EA235, 0x5924F3D68BD76E20, 0x0000000A43723129,
        // 1/ξ^((p^2 + 7)/16) = 10902628343341363775414698589814098531720287077419766181593990906982085595673149025899775220405039094291457381500051264175170862412414304344735643858252228713863138729468367814061933014: 612 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x8293FFF15550AAA8, 0x799141E52C188AE0, 0x0B497104305972F8, 0x3AA2388F369B0095, 0x5DF581A3C2013F45, 0xDF9E585E6F3F58B3, 0x9869C9BAF0AD814C, 0xF5379183DF360FF5, 0x9AF71459A8271D90, 0x0000016830764F4B,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x4A9FFFF95552AAA9, 0x1494C0FFEB56CAC0, 0xABF0C2D33B820F42, 0xDE8D61CF9F6E8CEA, 0x8287BD307B67B44B, 0x4D7ECF0809B18B17, 0xEFEC679D201B1BEE, 0x7F93CCD0E8F9A1AF, 0x9AF727A4049B9DDE, 0x0000016830764F4B,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xC80C000800020001, 0x9B037F1ABF3E3FDF, 0xA0A751CF0B289C49, 0xA3EB294068D38C55, 0x24923B8CB9667506, 0x6DE076A99A723264, 0x57829DE22F6D9AA1, 0x8A5C3B4D09C391BA, 0x0000134A5C74804D, 0x0000000000000000,
        // ζ = 284380942235772342147944213287260514736499208870890014610884071527795391712257871755656621477274321219782905875716282860603160740729142759036978877688287810745081659393
    ];
    const THETA1: &'static [Word] = &[
        0x9F4EE3DE8E262299, 0x3165B4BB26F79792, 0x329CC1393493F1E5, 0x4F2C6FDCCD31EB17, 0xB29C306F21981057, 0x9ACFB9E2863A129F, 0xE8D3DB696FD4E2ED, 0x74495BAC4EB2F487, 0xB254628AEE3F091E, 0x0000007F442F4F9C,
        // θ_1 = 135191984100032597240344046787153875134563991638793027376321104396988306456067801187697361472779369003790796753931133431211679102598005265811623850380657158655153836778312171007123006105
    ];
    const THETA2: &'static [Word] = &[
        0x38A92E870DFC236F, 0x8E5BED58F937D66C, 0xE1D8305244C89001, 0x1B880FD09E547A8A, 0x845C0B7928AE5DF7, 0x6156A9936E182BFC, 0x92775D273F01AF71, 0x596170DB3F387A20, 0xE46B6CA9BEA9BE9B, 0x00000151962F46B8,
        // θ_2 = 358610200796847420029151550671742132873815303002442221214551986061949573314169006128291831360001006229080693672480699944075607588687850707250077619657622491936424107097885050067675259759
    ];
    const THETA3: &'static [Word] = &[
        0x3754FA6BAAF654FB, 0xB81CCC3344DDAEED, 0xAE70B441D7556D1C, 0x8A1988CDA53915D7, 0x7B8263BA52FC3CD5, 0xD7030C15701D0A45, 0x17C6CF2E9A538BB8, 0x33AFFB085023DA07, 0x90D53B4D16CA2693, 0x0000004B88EF1261,
        // θ_3 = 80238908165512981845317379154271197583227540354079024535454921689142546906662400850195040723534939577672727490048919541864013514979254495898546835349803424444071424201742064187851822331
    ];
    const TRIPLES: Word = 65;  // number of precomputed optimal pairing triples
}

pub struct BLS24619Param;

impl BLS24Param for BLS24619Param {
    const UD: Word = 0x3ED3DBEF;  // u = 2^62 - 2^45 - 2^37 - 2^17
    const LIMBS: usize = 10;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0xEAD54AA15554AAAB, 0xB2667E8EAA97ABFA, 0xD41A2B198B77BB2D, 0x5E9F64E60B5B0861, 0xB64C5C461F45DDEF, 0x71CC14184A498409, 0x862DBF2ADAB60092, 0x6EAF5A7AB8827CA8, 0x406C08E5C7EC8DB2, 0x000005553A903C76,
        // p = 1450249730223518966892899335762858182712479937991117500224106364963828069818243476903984250670238467063077771877795542560794750158897235359279165323260848333806038575431689658901307108011: 619 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0xC0179F9FFFF9FFFD, 0x66694B4746848480, 0x179961384217566A, 0x125F5FE4211C7825, 0x8D1439220B778611, 0x9B19FE7906D4BC14, 0x1BBC857AD80A77FF, 0xF55DCF25EAE7B776, 0x767789CC4F9FCAFA, 0xED53615DA1B72298,
        // -1/p mod 2^640 = 4229626693409572067094023062437841339409171194560339167296447607001098369918443253208880524980534616889089034045845186842715814955376053711888301544025652369102533198780582030398318793308372989: 640 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0xE065153220B2D2A7, 0x362DBB592EB41501, 0x8BD82FB25FBCAC1F, 0xF904A65165774877, 0xC21C308F0A463BDA, 0x0C021D56CEF3DC25, 0xE46C77584C67F05D, 0x0770B8A40D7B752F, 0xF06DF0745F129DDA, 0x0000025F2A5D59B7,
        // (2^640)^2 mod p = 644977316055320634852509134958052242571667023348456145791038074257503448857956832869103464650148599159662808509869982624210251363995293962550549177316209149838597042273314522847178314407: 618 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x9F479FFBFBFFFFF0, 0x885C584ED3E5767B, 0xEF57FD78CE97329D, 0x02AEC6DE303281D2, 0xC5E9FD154080C341, 0xEBD04945EF7E76C3, 0x0000FFFBFC070DBF, 0x0000000000000000, 0x0000000000000000,
        // r = 204574377557983637663645497549308557510087677164191292781039217604072448097880511222669921040975690547616771496599578993062584483271825379194233159681: 496 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x9F479FFBFBFFFFEF, 0x514057CE53E5757B, 0x2B200E0DFE7D2F01, 0x32E0D91576056028, 0x20AA757556A272C0, 0x09A88F92ECD7C9CB, 0x00CFEAE09FA46625, 0x7456960AA6EC1900, 0x59E247242911D9C3,
        // -1/r mod 2^640 = 1601913856403638465696212307779239835055804536771369168706609596462701896130840737589764759584797313040568456985207556356548313558298790162021778372176653100584944404927338120577717036593971199: 639 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x68841BEF97BDF964, 0x4578AE5799D6D4F5, 0x3C186778E51FFCB1, 0x3B7F52A2DCBAFA28, 0xCCBDDB17A322FBBE, 0x992D27BBB4265D7C, 0x1B872A7879888CAB, 0x0000E064131AE979, 0x0000000000000000, 0x0000000000000000,
        // (2^640)^2 mod r = 179325956698556246896169535361487609816036618006895634453675872980741757363212929540495993626542429929618737608073145245351705635862758295644634216804: 496 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x91F7E53A046229B7, 0x3CC5C36190EE0B9B, 0x0734A2C01FE8F6C7, 0xF8F9A62C2E925D80, 0x00FEF923AD0B4129, 0x6431EC0FB22DDD83, 0x24872D9FA3870C9A, 0x82125256B00C4165, 0xEA7B50D2E4F81C1F, 0x000003D747AFADE3,
        // -sqrt(-2) mod p = 1044514757076202443674295968164197312653630018978326961238817834971628850035332643361699652915482875670712157698878854956922773801980771181186485555042724751372312580386980198484887611831: 618 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x5F7702CAE4BD7BB4, 0x6AE847C39533B94E, 0x2950F10D06408C6E, 0x44E935C1F699EF3C, 0x9652FE83FC996934, 0x82CB2CF366699333, 0xAB1D4C3435D8461E, 0x9DA216E0FE03F913, 0x5BEB7DB2D2E9CBC8, 0x00000314B85ED08E,
        // 1/ξ^((p^2 + 7)/16) = 837838524399205940340681658992576729024201048523880832123962279188344074389571461057058341524812837251416478873698652897658754232274113501029047963226411699634926430484054402842348059572: 618 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x68B50A515550AAA8, 0x32209C1A3B3595F9, 0x1C32B282226D9A79, 0xDFF7ECCF2AC39D92, 0x5DAFB10E530B3C2A, 0x6A0F3D7AD39C0286, 0xCC60D91A1B96CB86, 0x3DF090CAE6511062, 0x406B88E80A2804D7, 0x000005553A903C76,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x29C52A795552AAA9, 0x72438D5472E6A0FA, 0xF8266ECDD6F2AAD3, 0x1F4BA8DA9B0F52F9, 0x09FE06AA39288D0D, 0x6DEDA8C98EF2C348, 0xA9474C227B26660C, 0xD64FF5A2CF69C685, 0x406BC8E6E90A4944, 0x000005553A903C76,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xC110202800020001, 0x4022F13A37B10B00, 0xDBF3BC4BB485105A, 0x3F53BC0B704BB567, 0xAC4E559BE61D50E2, 0x03DE6B4EBB56C0C1, 0xDCE673085F8F9A86, 0x985F64D7E918B622, 0x00003FFEDEE2446D, 0x0000000000000000,
        // ζ = 943425570775103725882226119911210523778329046984578071907313087627526406979805332246661922091667447053263722911003898326776189568156723511045661012188245429796103913473
    ];
    const THETA1: &'static [Word] = &[
        0xEDD048CA9CB753C6, 0x035A1113BDE22555, 0x8CBEF7FFD95F112E, 0x241D028404098E9B, 0x5955FB5677C9CFD4, 0x7B3B32CFC8F78AA4, 0x3D472A8D7B072A24, 0x7250828537800D4A, 0x838F844450021C8F, 0x000001D4C03BF6BD,
        // θ_1 = 497942840222137334841871536798257559288194966012399568994451443353537373979013155966488803184250471323784266830989986428767675512874587024624128005087194754819567007720195644334934545350
    ];
    const THETA2: &'static [Word] = &[
        0x50964F231024166B, 0x743C0FE45FE0B675, 0x60E86EECFC5147CC, 0x87AF830518ED2455, 0x024FAF5E6E5EBFB8, 0xEFC3CD4435442622, 0x98134BD7C4175C71, 0x861053E37CC751BC, 0x91E4289806703859, 0x000002C180E3FE6F,
        // θ_2 = 749439403427723370441726115165270188394860012472322661737010656614191085947774904166353148608610200043110697957347212330091086467564416245608697434064591787769608570189139284358162814571
    ];
    const THETA3: &'static [Word] = &[
        0x026EC8CCA97F7490, 0x68B33A30DC8FB7A8, 0x354D22FF4C419842, 0x3EBB5CC221187CD1, 0x480FC1E056FB99D9, 0x99E83981E7672AC3, 0x36C068F76AC8A910, 0xBBD32349EFED0984, 0xDF2FA0CC2381BECE, 0x000001967CB503B2,
        // θ_3 = 431801524169125875159534994827351888413987981908193934975107588027877636880178029583682576386096623676399910728308606200597739921747286474280249192966576698912357481158815577273505117328
    ];
    const TRIPLES: Word = 65;  // number of precomputed optimal pairing triples
}

pub struct BLS24623Param;

impl BLS24Param for BLS24623Param {
    const UD: Word = 0x3E3C3A1A;  // u = 2^62 + 2^60 + 2^58 + 2^26
    const LIMBS: usize = 10;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x1C05555556AAAAAB, 0x5E85550000E00000, 0x5FFC8F17FAAA8EAD, 0x9493DBD0DA7AF1ED, 0x0347E5B0C0398A2A, 0x622EDD1AEE747342, 0xA83849A4ABD11AE7, 0x594CF7CD7702D52E, 0x1442C37A1A81D0A2, 0x000050E8775D21B7,
        // p = 22002355516370388161593017819559738558054474398071672293459363134443549336627024678911202971636828446945284119364766162691499113402132404433552482026793514914771728649318529694523972037291: 623 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0xFC0000000BFFFFFD, 0xFFD0BFFFFFFF4000, 0x871E53AEAC1FC02F, 0x334B3A771AD83A3A, 0xFAD9A5661F17E6F4, 0x0E5B8C1D86999301, 0x0D422E5F07D4F570, 0x23D4736B08AD0582, 0x707EE26ED6A38E81, 0x16E2D93042473EBD,
        // -1/p mod 2^640 = 407877317489483789498350133174471345765405688120198764972605706836858661386547857923825724225369912486542627066233793990789226362132994421467899927172732290297171693177853715404829794565619709: 637 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x633A1199BEECD5BC, 0xE0E5319CE5652144, 0x4B80F8DE71A543DA, 0xA6AAE2F789055D3C, 0xA8A43F0FCAAA30B0, 0x99C45B9613350C62, 0x0E65D4631E1D63A9, 0x410536BB16CFA50A, 0xC184D53FA5160A4B, 0x00002D5CBAAF3291,
        // (2^640)^2 mod p = 12335923394857198391710143635766912091801116129816227360414764911395024729608383038124897475909251301175024195091198412209702166847278584665240732356462074428431678031262232508761010656700: 622 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0xFFFFFF0000000000, 0xFFF5A9FFFFFFABFF, 0xFDB04EFFFF704BFF, 0xE9D80000303BFFFF, 0xD51800CFBA660007, 0x70E88F233D7C0DA1, 0x0008CE6B08645AD3, 0x0000000000000000, 0x0000000000000000,
        // r = 1801657964927371421157716798245047078304415442268128747486870609826300850432168572546791914349119681038639051218534624915078295437589375844397046824961: 500 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xFFFFFEFFFFFFFFFF, 0xFFF5A9FFFFFFABFF, 0xFD084EFFFF6F4BFF, 0x00FFFFFFFFFFFFFF, 0xB2000000FC000000, 0x3F001F17AC000071, 0xFCC19AEB7805BE3F, 0xF038B305CAC2AD5C, 0x48914BD3BA6FE284,
        // -1/r mod 2^640 = 1293301555573222478118719926726191528393222944439184193753832504185487276657237738082888756779144474592217448929295430457709679059391515040756426249652307501365635739568973429938215143098810367: 639 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x36764DCB4CFBB7F6, 0x78D63F43652CE573, 0xFA08EAA003B22276, 0xD6B4B6F7643BDAE5, 0x072CB55DD518E367, 0x2847CCD26EC506BE, 0x12BAEC17DC81A97A, 0x000196E7C0513792, 0x0000000000000000, 0x0000000000000000,
        // (2^640)^2 mod r = 325185526420881074101660337983514429732855550954332255424365882024488459944258586815207561354764814342279471336709120023725011374249443823621861259254: 497 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x84AD097530E42D3B, 0xFA6538A346E21EA8, 0x8A07C9C61DD1AC2D, 0x8D7B2C5B69D3AF7C, 0x6EE0585321B3EFB0, 0x5066DC8D3C6733DE, 0xA876AE355FE4DBEB, 0xE28094FACC85F52B, 0x6DD28A3056CEBB26, 0x00003EC44BD5D0B8,
        // -sqrt(-2) mod p = 17068965216569383343201885724619522257852682799242922524743693386639929987008783648237419756215553476669688105996710683190316939218328886129329638619291731641725733451385555549157744454971: 622 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x2B3AB74A0BDEABC3, 0x16AA940BAAE1D667, 0x09C891BCD93D42C8, 0x08462D7ADB68E9AC, 0xE015F7613F615DAB, 0x5722C1EDEE4DEAF4, 0xA13C0F8DE854FAAB, 0x07AE55450D7AECAD, 0x4492CF0842093632, 0x00004059F127AE4A,
        // 1/ξ^((p^2 + 7)/16) = 17499872987781525703559406957523708833765467789723579805995386683129681594436671563343018211533696748323810511279980900083862050939847052958009602608161951762071615767981644989777192070083: 623 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0xC3C555555EAAAAA8, 0xF08454FFF6610000, 0x822985407FD58E94, 0x3E61F68B347F54BC, 0x10A659051238F0AC, 0xF5FA108D9C9C7846, 0xFF114EA681762B07, 0x3F260D89ED7C48B7, 0x143CFC03DCFFAE94, 0x000050E8775D21B7,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x6FE555555AAAAAA9, 0x2784D4FFFBA08000, 0xF1130A2C3D400EA1, 0x697AE92E077D2354, 0x09F71F5AE9393D6B, 0xAC1476D4458875C4, 0x53A4CC2596A3A2F7, 0x4C3982ABB23F8EF3, 0x143FDFBEFBC0BF9B, 0x000050E8775D21B7,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0xAC1FFFFFFC000001, 0x37008000053F7FFF, 0x6EE984EBBD6A800C, 0x2B18F2A2D2FDCE98, 0xF950C655D7004CBF, 0xB61A6646A8EBFD7D, 0x54937D7F152D77EF, 0x0D137521C4C3463B, 0x0002E3BB1EC11107, 0x0000000000000000,
        // ζ = 10905143611603525950551727657482762931663354315689707713191968639849706081621803858214067369081572413902670705136970410694224741313541133929301655867851221663165974577153
    ];
    const THETA1: &'static [Word] = &[
        0x2D25E90C449E6192, 0x0BD92204AE8FBCDA, 0x4C5D354DE9923329, 0x612CF291C333439B, 0xF32A875CAA169A17, 0xCA0D9586678180C0, 0x8B89512E7C031B3F, 0x16A3723A7382468B, 0xD5DC0B5784142056, 0x000040AF2E684886,
        // θ_1 = 17590420614154704008792958249004393666947626449982151217287905951791143630544904061624966197737723635457717157693326873520042554555160339186429483231921364000395621089883258476380257411474
    ];
    const THETA2: &'static [Word] = &[
        0x23334658FF290A61, 0xA09C24CCF551527A, 0xA8A4F72122ABEA44, 0x2FDA91845EF40D19, 0x45E997A546E022D6, 0x8F3D474DADEC52CF, 0x9CCE2ABE89D7E029, 0x87435429AE421EA1, 0xEB2E9B7DB494258E, 0x00000727333130B0,
        // θ_2 = 1945239752315181743604493523085236741005952148675146191813622308750596031273000101949345166188467326349768954987411549420865471755070306095011577091121259277853109960468784145460600834657
    ];
    const THETA3: &'static [Word] = &[
        0xC2CDCC27FC0CF8A0, 0x1F1F205824AE04F9, 0x1474E552B29F8C67, 0x4606E320FF6F8E89, 0xF2C8774069D788C1, 0x713C93F8ACC07E50, 0xEE4928451393EEE2, 0xCF3FB98E659BABB8, 0xD5F63448456AA489, 0x000050E43D79294B,
        // θ_3 = 21997866194858132393566075602450458537661506421039068054931653246536785596674029009415657532082567754120185427720596335303365007957931265043321913928250540704288974043699939514930458065056
    ];
    const TRIPLES: Word = 66;  // number of precomputed optimal pairing triples
}

pub struct BLS24627Param;

impl BLS24Param for BLS24627Param {
    const UD: Word = 0x3FC4CB29;  // u = 2^63 - 2^60 - 2^53 + 2^41
    const LIMBS: usize = 10;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x7AA000AAAAAAAAAB, 0x104C01EA80015555, 0x8601555000000000, 0xFD9ABC814A408F8A, 0x61290BA76F81769E, 0x58C2142FA0DFBFD5, 0xF37A248CE8B2C51F, 0xC5ADC1186C61DEDF, 0x79F4F5C577D45E3C, 0x00058CCAE14D868A,
        // p = 386374080944218474779317372605364339231918291788007967784249050977243099758003494180913099532120910446067063375670059330077058663902660912316283456045535479032276899473021443979776317106859: 627 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x4FA005FFFFFFFFFD, 0xE800000000000001, 0xBFE70CD177A8447F, 0x092710A388017FFF, 0x541231A7809D2C96, 0x0A01FE22F6578AB5, 0xFA0CC62364569A7F, 0x04D91F5F8162E6B3, 0x845D04EA0D306A27, 0xE2B63AA403E25850,
        // -1/p mod 2^640 = 4040465906704803161848441778368468835250070315482096337446022147365411609368656529246128673708318641310485462429660842374079755204576393814440609303886977038971056276577667600625257175547117565: 640 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x297C69CB6D1BAC1F, 0x35EA8B6CEB4B8962, 0x14023869215E48E2, 0x06E1C3D71583B654, 0x9C175970BC689132, 0x4E0D1AADCD9A30AE, 0x203154848F294AEC, 0xC125A6C58B05E023, 0x89FC95878E5070F3, 0x0001DFD359F821E2,
        // (2^640)^2 mod p = 130485044024169488112937144195087529150394966965822630540634345950629574560603743337601171644148487360564051404679058126714341464257342808659990372165177356570627515595672990360969554930719: 625 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x0000000000000000, 0x9203FFF000000000, 0xF6A9B2BDF2C16E9F, 0xFFFFFFFFFFFFFFFF, 0xCC12BC1DBF8000FF, 0xECEBFF420128E73B, 0x00572E86A4A01944, 0x0000000000000000, 0x0000000000000000,
        // r = 17836243463165858219065460920624190867304077038953270690685805607243897208228324416045532375103673707028771233903499150435950962928935851645414062161921: 503 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0x9203FFEFFFFFFFFF, 0xF6A9B2BDF2C16E9F, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0xF4000FFFFFFFFFFF, 0x921DD7F3278F2449, 0x953690104F82BF40,
        // -1/r mod 2^640 = 2659281528019401372891598801447199741656538734596392505462565925557079073405917807525707098127783504191917393700205935238811743353984825412390979029989838946542005232398905466575901064282767359: 640 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x568FF46A436E268B, 0x70065A1EB9216916, 0x0E12ED2FD0256DAB, 0x1BE22EC3B0379FC8, 0x354D60A1FEFCBA4E, 0x20314C0CB84B46FA, 0x8712ABE2B1FBCDA1, 0x0002F2D344753EF6, 0x0000000000000000, 0x0000000000000000,
        // (2^640)^2 mod r = 603231915919675014921709819033837009737605853289353672778164823276977816000220340240891453850713794978363688781914013239651992975173654512753435354763: 498 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x122C48D6D3BFEDDA, 0x2793E12B7AE42A25, 0xD2F71ADB9383D28B, 0xCF766161BCF02E60, 0xC1A8F38D9B778F21, 0x46B9A105075BC841, 0x0B5A564CAFBCD789, 0x0A6335621E35E43A, 0xD7CA2077530CAA75, 0x0002FE7EBA916686,
        // -sqrt(-2) mod p = 208442692619682354028100945670313685262834764066807252829502247429396268578775736565567132165826427130098759424297077051944875789029773366881186869063368582657208033204726243860839443459546: 626 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xACE66E38FDC9A030, 0x5BC0AA658078E171, 0x2058FDE8BE765D1F, 0x45E0CBE622EE46F9, 0x2B9E4B4223DA5371, 0xFC1CB3363F0796C3, 0x00C747ADAEEF6705, 0x1D24E425520EA266, 0x359D6FE38A9C397D, 0x00022100EF53E020,
        // 1/ξ^((p^2 + 7)/16) = 148209738609353285537998809555323133343400411111029843466405215113046851653541410690380405679070452718221806524885368058488180926158501209681664793964469500659950813633678538610752589766704: 626 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x5A6004AAAAAAAAA8, 0x6CBBEAEC7FF15556, 0xDB77EEE36074F9FF, 0xF867342F863FCF8A, 0x13FF9ACC20C8AE8F, 0x42DE01DE0589F7E0, 0x538BDAECA668E65C, 0x49408032A7A1EE5E, 0x79A8C2D9ECB75594, 0x00058CCAE14D868A,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xEA8002AAAAAAAAA9, 0xBE83F66B7FF95555, 0xB0BCA219B03A7CFF, 0x7B00F85868402F8A, 0xBA945339C8251297, 0xCDD00B06D334DBDA, 0x2382FFBCC78DD5BD, 0x877720A58A01E69F, 0x79CEDC4FB245D9E8, 0x00058CCAE14D868A,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x901FFE0000000001, 0x51C80B7F0007FFFF, 0xD544B3364FC58300, 0x8299C428E2005FFF, 0xA694B86DA75C6407, 0x8AF20928CDAAE3FA, 0xCFF724D02124EF61, 0x3E36A072E25FF840, 0x00261975C58E8454, 0x0000000000000000,
        // ζ = 143785905174095902604594280532301430717575924910965773230271532486855617319404701560278273993626656730220858964895972414296310729065544087108809767294134805654574670544897
    ];
    const THETA1: &'static [Word] = &[
        0x91B6AB6F817C2995, 0xB0F3167CC56BC054, 0xAD7D8F16D43724B9, 0xF392DA73F381151C, 0x9221926B3E05F484, 0xDB84F616FB9C2790, 0x6BABFC38B0A40DE3, 0xC53C6075FE787C5A, 0xC319429C112E7B14, 0x00032680FC301819,
        // θ_1 = 219322795555325501441328855369291332728584806764678020683272512404905109907985747808257361421602216056332552204005773214069293561898727792461649140318682708215975160791033249554384985794965
    ];
    const THETA2: &'static [Word] = &[
        0x71FF79A6930E7803, 0xF322DC037807AA13, 0x41FF53A6F58AC48B, 0xF1C312BE3537919E, 0xAFDBF302FF3749AA, 0x2099EE9B28F17C65, 0x8D7B537A8FED2300, 0x85A2FB537D0454A2, 0x22C0C365102C3862, 0x0003E589426621B4,
        // θ_2 = 271272631698734150352038990071229849134750867056733573515727662287036124139405614655439304193431907954783890883812824641980202996518819803295227750258537062144905755284351316355811053041667
    ];
    const THETA3: &'static [Word] = &[
        0x36864CC7A7FF2EEF, 0x3A2B52CABE0FA767, 0x8FAF85992F794D4A, 0xF7E236DBC5D3CDA1, 0xD7A36994C0A77C80, 0x0ECEA5AB091A7B48, 0xCAC8F172C1BBE2C1, 0x01AF5829E29D2D5A, 0xF4465E68ABA279DF, 0x00008DA3DAFA6BBD,
        // θ_3 = 38517973616563486059968948649536303612287058014051981738727848748935359149549260274747711392405367085365344137343483422477973376429711214786911789935021620047425805709832585111176759684847
    ];
    const TRIPLES: Word = 66;  // number of precomputed optimal pairing triples
}

pub struct BLS24629Param;

impl BLS24Param for BLS24629Param {
    const UD: Word = 0x3FD126;  // u = 2^63 - 2^47 + 2^38
    const LIMBS: usize = 10;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x7FFFD56AAAAAAAAB, 0x15552AC015400555, 0x8AB2A2AD55000000, 0xABE7229A7F26B635, 0x557A24AE4684807D, 0xCA3581F90268DAFD, 0xFC1E7F3CDFBB8356, 0x08BC8E6E6BB24AB1, 0xB4339DBF675F5F33, 0x001554806E66E1A9,
        // p = 1484943311119613242552914143896253562353359001577685009869945008786415229021977360407843927136522531730144119156297068896994896701849252748875241604268619242653535577746813656029914953591467: 629 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x7FFE80BFFFFFFFFD, 0x47F4000000000001, 0xA0011F6EE1201770, 0xFE0A2EAF2E77E202, 0x00EAAF25D20ABCE0, 0x9467A5848F8DB3C7, 0x7AF2538DE80F92FE, 0xB54DBCD7623AEEE7, 0x1DBDF62727CC8683, 0x89C9522CBDD39360,
        // -1/p mod 2^640 = 2455634039717589918094281225354055262799009278501115118604694990870565555837011657560835018434570564295675709806703843497082821070539090074113706941082659759908127617118452795439783249220468733: 640 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x79AE0BC9BC3D0A75, 0x9676BF8EA2609C91, 0xD7C7136B877B37A9, 0x3C7022AB786B4725, 0xA4A35B54352A3DF2, 0x2718C7A6284252A6, 0xEFDBD8E5C247E82A, 0x377C7F03D0B3E780, 0x3A84787D297A3470, 0x000D25CFAC14E8DD,
        // (2^640)^2 mod p = 915307630248780755677541214735062798276879111852299610806752171062635986945825733258192925663544627012933807826990038981484894305514526981274433787875199668573639868521530249468265696660085: 628 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x0000000000000000, 0x2017E807FF000000, 0xF0003FDFA06027A0, 0xF000FFFFFFFFFFFF, 0xB159B5EE437E506F, 0x1B7B316894524F57, 0x00FFF8041BE3CF54, 0x0000000000000000, 0x0000000000000000,
        // r = 52367869212399860516629850916793940716850293623675543008593228828370730078036744393612280837310733347689664342267176813560352357738399375053053283532801: 504 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0x2017E807FEFFFFFF, 0xF0003FDFA06027A0, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0xF9BCD93907E800FF, 0x8EE968A2821EEECB, 0x5F663AF5D695CDE3,
        // -1/r mod 2^640 = 1700210198305049077815051532731953607039791793572657944282005336852173363505895870001217499132246159448666732756586616349164148081991088529250921756940565975133397953748642146664055944178040831: 639 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xCB16887DBF724BFD, 0x5FDEDB3B785A8A43, 0x22EBB2CB4BF015F2, 0x50D5162219937F76, 0x6355B1E19F760E57, 0x074A8397BCC6C681, 0x6DBA0ABDA20377D9, 0x000808E19F0E81AE, 0x0000000000000000, 0x0000000000000000,
        // (2^640)^2 mod r = 1643792977992460198574739393326527662446896815198857857195830611185528435780788279355557415364063669077170771007643415578041164645826292686159667678205: 500 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x33C682F96C0A35BC, 0x9228E62C53942D4F, 0x2DE440E12EA20778, 0xF56899AF32F956AF, 0x24BE5AE6CCDFF7B3, 0xE1591A6C82B60C0A, 0x54526E3F3242191C, 0x9818E8455EE70787, 0x1EDED2916EE88595, 0x0005BF781D79B710,
        // -sqrt(-2) mod p = 400155236993046685428239718325672434894952383089727640860807494723069963550423905609250122756251701139150655558957462509587589461702430222239440053653723956555583994568549503154582375249340: 627 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x8C93ACE96FBCB8E5, 0xD2E9299EBE3C2270, 0xB86F47C44ABF41A4, 0xDF3BAB4F0BA478A0, 0xC1116F8E7CB882D1, 0xC329D28C78734D25, 0x98109811E6D41401, 0xE2C99EDBDF7608CE, 0x8A75F2D01A622446, 0x0000389B2D49E527,
        // 1/ξ^((p^2 + 7)/16) = 15393629233785719750919863565210982985369336259721012763779183954487247171578983736400949776221014215944041262960410163428934391746018032683471255587697090873230492034866087611369313319141: 622 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x7FFED5EAAAAAAAA8, 0xB56729BF163FC556, 0x8AB1236ED37FE0BE, 0x4383EB1AE7EAC534, 0x2CE2465848B60164, 0x2BADC3CC29A78F32, 0x05D86709D0903409, 0xD0AD9E8BF286B75B, 0xB333A6BAC383A9B4, 0x001554806E66E1A9,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0xFFFF55AAAAAAAAA9, 0x655E2A3F95BFE555, 0x0AB1E30E143FF05F, 0xF7B586DAB388BDB5, 0xC12E3583479D40F0, 0xFAF1A2E296083517, 0x80FB73235825DBAF, 0xECB5167D2F1C8106, 0xB3B3A23D15718473, 0x001554806E66E1A9,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x80007FC000000001, 0xAFF700807F801FFF, 0x8000BF9F40C00FA0, 0xB4319BBFCB9DF880, 0x944BEF2AFEE73F8C, 0xCF43DF166C60A5E5, 0x7B230C198795A7A6, 0x1C0777F13C95C9AB, 0x007FFB8251EDDABF, 0x0000000000000000,
        // ζ = 483000984795703812258107352187474619980363860002155810246432375090764066011660953195142299561914881087021801746906319433386296839456321002637823891430461751432622574141441
    ];
    const THETA1: &'static [Word] = &[
        0x23690364DEBB94EE, 0x44023F5B3ED4BB2F, 0x101C3DA52FFDEF11, 0xDFE1AAB15234DB4F, 0x938E87AE44CA10B1, 0xF505963D10053C15, 0x286F6F379B10848D, 0xC114BC726B1543B1, 0x3164F954003E7B2C, 0x000A2BDC9D451D6C,
        // θ_1 = 708101077305717666358991994876770048480660729184036672777652816101418023735734724640370305062860916978785655927538303099727263572906894986654556358018740389044852744170511457711704963257582
    ];
    const THETA2: &'static [Word] = &[
        0xF67A138281F4309B, 0x1A675E7B003560CD, 0x11888578BC5314AB, 0xC6B9C4C0C66E863E, 0xD44ACA73682A6BA5, 0x45DC78F233BEA4EC, 0x7DD84724DDCC0B57, 0x13B4461EB0108AC4, 0x923E0DB41E9526D1, 0x000E085FDFDE9FC5,
        // θ_2 = 976919852310418918908042008182319731320174463938512157522695940046532187061454588572098683451787465320933791008237497052061427859793572873340405273076740831886474830860576949895501177958555
    ];
    const THETA3: &'static [Word] = &[
        0x0AA94353B5FF13CC, 0x78D1F8765705E1F7, 0x716BF7E655AC6E45, 0x21BD6C8A15DE1477, 0x741306AF2814AD63, 0xE8D64E6AD76B319D, 0xD06EFE27A3FAED23, 0xF38A90EAC8B3607C, 0xDCE4B585F0C37B35, 0x000DC65E08176E96,
        // θ_3 = 958969679606607724202053696794119601389017555025581070355694228905843915158580762821692680650313895044897836752388738953165796189497044035920391439047643024571611613425156559208169867252684
    ];
    const TRIPLES: Word = 65;  // number of precomputed optimal pairing triples
}

pub struct BLS24631Param;

impl BLS24Param for BLS24631Param {
    const UD: Word = 0x3F3C2E2CE0;  // u = 2^63 + 2^60 + 2^46 + 2^44 - 2^32
    const LIMBS: usize = 10;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x85556FFFAAAAAAAB, 0x1B001DFFA8552000, 0xCEC5611538AB1555, 0x104AA9EDFA5EDB79, 0x840F3503125528DB, 0x551D243CA0B5FABB, 0x5A639E0BA06217C3, 0x4CFF624137BF7ABF, 0xDA0E40AAFBB364E4, 0x00454834B8129B39,
        // p = 4823230883749977616479904123855865375118462343030883429994304950911695421436765352684793337786491974249968737343689303662507487652092227370764007513880020924192313063404814666526713897986731: 631 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0xB000EFFCFFFFFFFD, 0xD0FD300300000001, 0x7F61DC265A73128B, 0xF3C406441904D980, 0x03B1F2BF9B5EF235, 0x4521658BE82FBF20, 0x93867B738EA1DB50, 0x42982E6BD0C10A48, 0xCC619D15B4ADE023, 0x02058EFA5F0D349A,
        // -1/p mod 2^640 = 36031035740189982629946443899093330928289273041901007688472869074255508086868440879392877511263331145545683090286864988907251819104007554079990604393413688962786607939317176928948929211400189: 634 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x4C0A1690705AB6F8, 0xAFDCEE7E8D4840F3, 0xBAFEA15FA3993FC4, 0xEB432C9E0C88C7BA, 0xF1EC9EE1B2AF0C8E, 0xF8973C9976145304, 0x6A0FFA1962BE44A1, 0x9F2B36D6187DFBE6, 0xCB1CE98A8D721E1B, 0x0011B7FE5F0BF1C0,
        // (2^640)^2 mod p = 1233530140779044300390909792844024099854527019938738436870777850319053453709547103835136329320290472357868042041568955416626056792866076199347860739641457560910644134858198031364906775394040: 629 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x0000000000000000, 0xC04D0341AA013FFF, 0xE65EC70C86CB1E2A, 0xCC6E227E3BFD8000, 0xB3797053FA5F833E, 0x2B40239C6CA4A222, 0x0290E2A83C963536, 0x0000000000000000, 0x0000000000000000,
        // r = 134390152000440184799300569520286029791002833731902899363233696564144828427201787669436689043789029742160429019147231945719307954422911727164396142592001: 506 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0xC04D0341AA013FFE, 0xE65EC70C86CB1E2A, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0xD94F7D3FB1FC4000, 0x3A6F66100FD95AA1, 0x59C6181D4A7E7E81, 0x3DBB12E3AA80EACA,
        // -1/r mod 2^640 = 1100167628881654141770555400690728453979048072619476691187513501399061195834273240581858368019487702726270005273187547353075246561300528376102980426644455564928259903042423995939025776881434623: 638 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0x9FC7E6F33E776369, 0xC8438E8EDAAEEE79, 0x11F82865C098DDAE, 0x0835CD1F35B261D5, 0xD2B256FD3239696C, 0xF77188D0CD76C8C3, 0x5685852BD2F9B823, 0x01149FA06ABFFC54, 0x0000000000000000, 0x0000000000000000,
        // (2^640)^2 mod r = 56593556420712633802742492376722116690165160614199167935496869140787397599164925463305130030605566494589946943141732573940137436796860757514142315144041: 505 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x1D62DADB64AD3D02, 0x37D5C04DDF0A6602, 0x5516744AFF1637EA, 0x6D4FBA5AC5022C64, 0x72B4195BA99AFD10, 0x5C29B0B4DEC52C00, 0x5011BD56A7F041C3, 0x2F87A521218926B2, 0x5B4C91C326D9A451, 0x0031E1F682E3EC7A,
        // -sqrt(-2) mod p = 3472697590525893168918594414534139142363829293862022666118391993654090098310369958637504830679233760362607068334093493125683323703149634096382576656610848924152589991910220077878306170289410: 630 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0x9FA7AA1FAAE520DE, 0xD96ECFCAB99249F7, 0xF8B53823EF91C9A5, 0xC89BEE678C6A04EE, 0xECEA18FCC3B9E460, 0x2342CAEFA455E97A, 0x1E007FE9BD5B250E, 0x00B46CAC028C2B9F, 0x2AEE581C5FB76C70, 0x0022B757B8A3C0D2,
        // 1/ξ^((p^2 + 7)/16) = 2416847535363153835955820098773569153961201018244395384984594129690987123409596811631997145117035678669613654076388686856768167421429626168017368321426784949259224090537293930736089290842334: 630 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0xA5560FFDAAAAAAA8, 0x6B0275FFC4579FFD, 0x80FD30D81566FC99, 0xB027D67434611EB7, 0x2139D3602CF6F061, 0x82C3F608C924A025, 0x23711F09136E514D, 0x03A71986E94A06EF, 0xD72B40132F03087A, 0x00454834B8129B39,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x1555BFFEAAAAAAA9, 0x430149FFB6565FFF, 0xA7E148F6A70908F7, 0x60394031175FFD18, 0x52A484319FA60C9E, 0x6BF08D22B4ED4D70, 0x3EEA5E8A59E83488, 0x28533DE41084C0D7, 0xD89CC05F155B36AF, 0x00454834B8129B39,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x6FFFB00100000001, 0xD7FED3FFF1FEC001, 0x26E4181E91A20C5D, 0xB01169BCE2FEDE61, 0x316AB0D172AF1C3C, 0xE92C9719EBC8AD4B, 0x1B793F814679E33A, 0x24AC245D273AB9E8, 0x0171804BE6582E35, 0x0000000000000000,
        // ζ = 1394483486743794612092945796942664948121283311796093452150735514080257767537243204648604254192916715888097996339778523546370176717432268519722976166385141964981434887176193
    ];
    const THETA1: &'static [Word] = &[
        0xDEC505107F146852, 0xCFE8C559F2D2D177, 0xE86A66A2C97EEEE8, 0x5AD310751C0D90B8, 0xEEE9BB106314D123, 0xF2BCABDFB928AA2D, 0x8A6778A9EE8597BB, 0x16B971F7D3611500, 0x18306548455E3E7E, 0x00373A2B37EBDB0B,
        // θ_1 = 3844771128444781285460776615701261258084133459343503686375061360970963710945660861373950748490240167524500631738542023556738825272668102458778752264260930584145064605047373360369935311988818
    ];
    const THETA2: &'static [Word] = &[
        0xB541D85CDDECE0DA, 0x670238CCA5078189, 0x10E63497EEB74261, 0xEC1F76A640D260F3, 0xCE7F86A0840DD63F, 0x107550B756EFE68D, 0xF805040D05D4A0E9, 0xCE09C2D9F522F917, 0xEF84244449C1F88E, 0x0026FF04C198B66B,
        // θ_2 = 2714808550568142915478424715421673688216243530618391076678439586767776759646289470629595004635868686906771639772194026668610324230998941960176543577924514802123543454312551345095931671142618
    ];
    const THETA3: &'static [Word] = &[
        0xA8D3D4549C9C1C8F, 0x46E4B5FCEBED70FC, 0x1C96CA0A6EDB38B2, 0x662DAFFBDD5AC8D4, 0xF97260BECFA3A53C, 0x0B08C3FC41C04518, 0xD851FB44801E9460, 0x325A47AC36711B3E, 0x7B79356A87478946, 0x0031B1CD52CECF08,
        // θ_3 = 3459600590380015725020138446373042764339967531830561891106845504110916170764903028519707559301433022427109193556242939350378086641612641812615232212949190812717415345265299448632103134829711
    ];
    const TRIPLES: Word = 68;  // number of precomputed optimal pairing triples
}

pub struct BLS24639Param;

impl BLS24Param for BLS24639Param {
    const UD: Word = 0x4032DD1E;  // u = 2^64 + 2^50 - 2^35 + 2^30
    const LIMBS: usize = 10;
    const MODULUS: &'static [Word] = &[  // base finite field modulus
        0x5AABFFFD6AAAAAAB, 0x2A5800002A960014, 0x0CB2BF713F3290A3, 0x8509C5768721BCB2, 0x8FECE8FBCB7F6FE2, 0xC92EE86410A7DEDE, 0x31298CD00C532E48, 0x9C3B947534191F4C, 0x3CAE3242373E40A2, 0x5562AB80DBB364B9,
        // p = 1521741997657853438143621954128682768257889316892400202117388272052283406994427840182458807872815840846344898419600772544186216589724721846224141690722584661542738547563757829524076272099699371: 639 bits
    ];
    const NEG_INV_MOD: &'static [Word] = &[  // -1/p mod 2^(64*LIMBS)
        0x000BFFE8BFFFFFFD, 0x678DC57474000003, 0xAC8FD12BE46E023F, 0xB1BEBB0EABC17E3C, 0xE6E16A09A4C29876, 0x8D1AD3B8F9E8270C, 0x619FE7F25D321284, 0x362559E888801A32, 0x92172E897C3D12F6, 0xA3C9D77F712B777B,
        // -1/p mod 2^640 = 2919043171168421709242193731352724130258420832862340483302593015129881948205798447218756486698593570137037332260207621206848247053160758277292918976988107717688481854897975860395833695991234557: 640 bits
    ];
    const MONTY_P: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod p
        0x7644300AA96E01C6, 0xE47CA0D1077ADCB7, 0x2A15B0BF127DBC9D, 0xE5FFCE7A90BB07AD, 0x2490D1A9D9392456, 0x392EEECDDD6B1185, 0x986B4D297812D110, 0x9E1B6025DC65A231, 0x1A9810EE86D4AE3D, 0x3C1ED0B86AE114CA,
        // (2^640)^2 mod p = 1071467299298997756070479299881133399041595618574013115274433417120896060487628400243992571034501189893002938794644378888426125823601537988502595861323674453909862405075662471617668546711912902: 638 bits
    ];
    const CURVE_B: Word = 4;
    const ORDER: &'static [Word] = &[  // cryptographic group order
        0x0000000000000001, 0x7F00000000000000, 0x9C7CF0C00D17B1E8, 0x6EF0FFBF00740367, 0xF7CD3D21905024C3, 0x86CA62A60059EC77, 0x1F2908D76C4E2086, 0x002001820737FB31, 0x0000000000000001, 0x0000000000000000,
        // r = 13414355916241356732307341189238651612202928166804341870194823876385671392923645732390192381741433096510106136588996846954084176276346216753697533282222081: 513 bits
    ];
    const NEG_INV_ORD: &'static [Word] = &[  // -1/r mod 2^(64*LIMBS)
        0xFFFFFFFFFFFFFFFF, 0x7EFFFFFFFFFFFFFF, 0x9C7CF0C00D17B1E8, 0xFFEFFFBF00740367, 0xFFFFFFFFFFFFFFFE, 0x430680FFFFFFFFFF, 0x42B06E88AF5214E7, 0xAF20AAC5039B029D, 0x5098E3E77A8DF9C6, 0xEC72C741E5F4A9B5,
        // -1/r mod 2^640 = 4213990505325787855654377378292790243042785565872776945471469746814641396178837165443789604713196139714128318508861096771441742976013415015718297534953795550377453803912331438648372189577871359: 640 bits
    ];
    const MONTY_R: &'static [Word] = &[  // (2^(64*LIMBS))^2 mod r
        0xBBB629D9928A32C4, 0x269429E1594D9264, 0x16AB2B20BE0D744A, 0x2438849AE9220E40, 0x9082F3D2C50989B0, 0xD27438D06A679051, 0xE791F1D4E2E9A2F6, 0x9E280088C091F6EB, 0x0000000000000000, 0x0000000000000000,
        // (2^640)^2 mod r = 8283315360187254147522530973783632734156595131229402816338131314125504857179161544630012768286927227473173944184344795208201911410727820826710064719606468: 512 bits
    ];
    const NEG_SQRT_NEG_2: &'static [Word] = &[  // -sqrt(-2) mod p
        0x9330D17386BA5EF5, 0x42FADD3F55AB77C7, 0xAC38F05183904972, 0x216EC1DD7F42A142, 0x1246D00348D16591, 0x89FCFD31EC82AE67, 0x01D30BB9948526EA, 0x8466108737FA4DD0, 0x9EE69B12BA317FB0, 0x05CAC10D6C44BEE6,
        // -sqrt(-2) mod p = 103225365940566296986232057198173535977521535151422807544895695930057659036634696608664273956722851126459498351593030998196995977966083703007811152348015579893109238852703665830955485721419509: 635 bits
    ];
    const QNR_SCALE: &'static [Word] = &[  // 1/ξ^((p^2 + 7)/16)
        0xEEDF2925236DA0D2, 0xCF48CE9AC358DD51, 0x261F20D3A990ECDE, 0xC0A379561BA629E5, 0xAECA2E43CEA99B18, 0x3C81FEAFBEA21A28, 0x2A0D7E0BBCC06D86, 0xFC0318812C5DF76F, 0xD78F3E682ED1A6A8, 0x359401D02CEF8FA9,
        // 1/ξ^((p^2 + 7)/16) = 954871640410797116908603159885856328324730512293687034773523605319925296021407992912101425978319097796024040907542059793691540450263882133415670752081223755225567348046823451410653000753848530: 638 bits
    ];
    const SQRT_NEG_3: &'static [Word] = &[  // sqrt(-3) mod p
        0x1AB3FFEDEAAAAAA8, 0xF57AF8B83B8DFF26, 0xF460D7192BCA8D9F, 0x81C9DB4F3A5C0A9C, 0x5FF7964E228E6D6F, 0xEA721F5E2CB30B1A, 0xE831B5948C35663D, 0xF5044803A30D67F7, 0x3C662E4D9EAE27E5, 0x5562AB80DBB364B7,
    ];
    const SVDW: &'static [Word] = &[  // (-1 + sqrt(-3))/2 mod p
        0x3AAFFFF5AAAAAAA9, 0x8FE97C5C3311FF9D, 0x8089CB45357E8F21, 0x0369D062E0BEE3A7, 0x77F23FA4F706EEA9, 0x59D083E11EAD74FC, 0x0CADA1324C444A43, 0x489FEE3C6B9343A2, 0x3C8A3047EAF63444, 0x5562AB80DBB364B8,
    ];
    const ZETA: &'static [Word] = &[  // primitive cube root of unity mod p, in absolute value
        0x1FFC0007C0000001, 0x9A6E83A3F7840077, 0x8C28F42C09B40181, 0x819FF513A662D90A, 0x17FAA956D4788139, 0x6F5E6482F1FA69E2, 0x247BEB9DC00EE405, 0x539BA638C885DBAA, 0x002401FA4C480C5E, 0x0000000000000001,
        // ζ = 247466293276122154894556271861823936661687859871409363877908630040317501308312974856451927575257994079066365846534675158945259235800321828807883935039848736720184159628165121
    ];
    const THETA1: &'static [Word] = &[
        0x53AD01A55B21C92F, 0xA0303AF4F5C716A0, 0x813B239E87D861E6, 0x4765E1AB6863205D, 0x3DAEC6E6FACAD747, 0x0231EF139D87CCFD, 0x3E801039FDD2B2AC, 0xB11D045047868E35, 0x9AC7C8DF87936FBE, 0x44AD27F53A006FCC,
        // θ_1 = 1223952951503676550522176040679998494976690973069161858931041861127617109549594508041690920276219663426512933156679218014440261165206773797225331750116634402036474111652412453978444860823292207
    ];
    const THETA2: &'static [Word] = &[
        0xFDED6710883B664C, 0x40D133AAF4EFA561, 0xE7ED73B418BB9BC7, 0x10E0277521F0CB4E, 0x2357FE945ADD0355, 0x7092EC1B71B55884, 0x0C27C8DADEECA636, 0x7B6F62A3229C47A5, 0x8FB0D00D2862B10D, 0x3E4C39D2C5AF06BC,
        // θ_2 = 1110272727953386755186372919112112425398903769845149848017488394915836830460364600536329428511365523406234163648518456300937561708363350823614786362141250380224188329119576123223147290186966604
    ];
    const THETA3: &'static [Word] = &[
        0x87278BBDDECF3B92, 0xA03E123783533AF5, 0x95C145D4A7D30615, 0x0578268C2F1AA6E1, 0xE734EDB6319456CC, 0x8BCAEA1F5A1AF83C, 0xADA8FD6AF08A521B, 0x08C8C2A6B1393F8B, 0x8662B512474DB222, 0x543F3B35F39F7CB3,
        // θ_3 = 1501452820681966666397190655493636451521783766237382110820500249585850088642565447472624239994205841184277733670014828359103109224809134357203073602901420810578656784759610133101652481051409298
    ];
    const TRIPLES: Word = 68;  // number of precomputed optimal pairing triples
}
